\I\9{!!!}{\.{\&} primitive}, 955.
\I\.{!\relax}, 102.
\I\9{* }{\.{*} primitive}, 955.
\I\.{**}, 69, 875.
\I\9{+ }{\.{+} primitive}, 955.
\I\9{++_}{\.{++} primitive}, 955.
\I\9{+-+_}{\.{+-+} primitive}, 955.
\I\9{, }{\., primitive}, 232.
\I\9{- }{\.{-} primitive}, 955.
\I\.{->}, 250.
\I\9{.._}{\.{..} primitive}, 232.
\I\9{/ }{\.{/} primitive}, 955.
\I\9{: }{\.{:} primitive}, 232.
\I\9{:: }{\.{::} primitive}, 232.
\I\9{::: }{\.{\char'174\char'174:} primitive}, 232.
\I\9{:=_}{\.{:=} primitive}, 232.
\I\9{; }{\.; primitive}, 232.
\I\9{< }{\.{<} primitive}, 955.
\I\9{<=_}{\.{<=} primitive}, 955.
\I\9{<>_}{\.{<>} primitive}, 955.
\I\9{= }{\.{=} primitive}, 955.
\I\9{=:/>_}{\.{=:\char'174>} primitive}, 1185.
\I\9{=:/>_}{\.{\char'174=:>} primitive}, 1185.
\I\9{=:/>_}{\.{\char'174=:\char'174>>} primitive}, 1185.
\I\9{=:/>_}{\.{\char'174=:\char'174>} primitive}, 1185.
\I\9{=:/_}{\.{=:\char'174} primitive}, 1185.
\I\9{=:/_}{\.{\char'174=:\char'174} primitive}, 1185.
\I\9{=:/_}{\.{\char'174=:} primitive}, 1185.
\I\9{=:_}{\.{=:} primitive}, 1185.
\I\.{=>}, 733.
\I\9{> }{\.{>} primitive}, 955.
\I\9{>=_}{\.{>=} primitive}, 955.
\I\.{>>}, 918, 1102.
\I\.{>\relax}, 1104.
\I\.{??}, 307, 309, 499, 500.
\I\.{???}, 303, 304, 420, 503.
\I\.{?\relax}, 117, 695.
\I\9{[ }{\.{[} primitive}, 232.
\I\9{] }{\.{]} primitive}, 232.
\I\9{][}{\.{\char`\{} primitive}, 232.
\I\9{]]\\}{\.{\char`\\} primitive}, 232.
\I\9{]]]\#\AT!_}{\.{\#\AT!} primitive}, 753.
\I\9{]]]\AT!\#_}{\.{\AT!\#} primitive}, 753.
\I\9{]]]\AT!_}{\.{\AT!} primitive}, 753.
\I\9{]]}{\.{\char`\}} primitive}, 232.
\I\.{\_\_GNU\_MP\_VERSION}, 1069.
\I\.{\_\_GNU\_MP\_VERSION\_MINOR}, 1069.
\I\.{\_\_GNU\_MP\_VERSION\_PATCHLEVEL}, 1069.
\I\.{\_\_LINE\_\_}, 6, 173, 252, 256, 624.
\I\\{\_iob}, 1054.
\I\.{\_IONBF}, 16.
\I\|{A}, \[15], \[101], \[102], \[177], \[213], \[214], \[236], \[237], \[238],
\[252], \[253], \[256], \[260].
\I\|{a}, \[15], \[218], \[358], \[359], \[375], \[397], \[404], \[405], \[409],
\[467], \[468], \[786], \[787], \[849], \[851], \[852], \[979], \[1027], %
\[1060].
\I\.{a font metric dimension...}, 1223.
\I\.{A secondary expression...}, 944.
\I\.{A tertiary expression...}, 946.
\I\\{a\_aux}, \[397], 398, 399.
\I\\{a\_goal}, \[396], 397, 398, 401, 403, \[408].
\I\\{a\_new}, \[397], 398, 399.
\I\\{a\_orig}, \[405], \[467].
\I\\{a\_tension}, \[364], \[365].
\I\\{a\_tot}, \[409].
\I\\{aa}, \[353], 354, 356, 357.
\I\\{ab}, \[405], 406.
\I\\{ab\_vs\_cd}, 15, \[158], \[372], \[437], \[441], \[444], \[446], \[456],
515, \[566], 568, \[569], \[574], 575, \[600], 601, \[993], \[997], 1009.
\I\\{ab\_vs\_cd\_func}, 15.
\I\\{ab\_vs\_cd1}, \[575].
\I\\{ab\_vs\_cd2}, \[575].
\I\\{abc}, \[405].
\I\\{abs}, 15, 94, 456.
\I\\{abs\_a}, \[358].
\I\\{abs\_du}, \[562].
\I\\{abs\_dv}, \[562].
\I\\{abs\_tyy}, \[1010].
\I\\{abs\_x}, \[157], \[158], \[450], \[600], \[1210].
\I\\{abs\_y}, \[450], \[600].
\I\\{absdenom}, \[931].
\I\\{absdet}, \[590].
\I\\{absent}, \[679], 712, 713, 714, 717, 739, 1066.
\I\\{absm}, \[1172].
\I\\{absnum}, \[931].
\I\\{absorbing}, \[719], 725, 727, 797.
\I\\{absp}, \[646], \[1043].
\I\\{absv}, 633, \[637], \[641].
\I\\{absval}, \[354], \[518], \[559], \[601].
\I\\{absval1}, \[390].
\I\\{absw}, \[655], \[657].
\I\\{absx}, \[658].
\I\\{ac}, \[405], 406.
\I\\{acc}, \[353], 356, 357.
\I\\{access}, 44, 46.
\I\\{aclock}, \[204].
\I\\{add}, 15, 456.
\I\\{add\_edge\_ref}, \[485], 487, 494, 663, 940, 973, 1125.
\I\\{add\_mac\_ref}, \[248], 784, 936, 944, 946, 947, 1094.
\I\\{add\_or\_subtract}, 991.
\I\\{add\_scaled}, 15, 456.
\I\\{add\_str\_ref}, 193, 236, 471, 494, 663, 714, 729, 884, 898, 973, 985,
1031, 1125, 1147, 1149.
\I\9{add_to_}{\&{addto} primitive}, 232.
\I\\{add\_type}, \[1132], \[1136].
\I\\{add\_var\_used}, 170, \[175], 489.
\I\\{adjust\_bbox}, 526.
\I\\{Allocate}, 11, \[868].
\I\\{allocate}, 15, 455.
\I\\{alpha}, \[365].
\I\9{also_}{\&{also} primitive}, 1122.
\I\\{also\_code}, \[1121], 1122, 1136.
\I\\{ampersand}, 185, 948.
\I\.{An expression...}, 947.
\I\\{an\_angle}, 977.
\I\9{and_}{\&{and} primitive}, 955.
\I\\{and\_op}, 190, 988.
\I\\{ang}, 980.
\I\\{angle}, 300, 345, 952, 977.
\I\9{angle_}{\&{angle} primitive}, 955.
\I\\{angle\_to\_scaled}, 15, 456.
\I\\{announce\_bad\_equation}, \[1041].
\I\\{ap}, \[7], \[89], \[1125].
\I\\{append\_char}, 86, 729, 847, 859, 958, 1125, 1284.
\I\\{append\_to\_name}, \[850], 851.
\I\\{appr\_t}, 613, \[614], 615, 616.
\I\\{appr\_tt}, 613, \[614], 615, 616.
\I\\{arc}, \[396], 401, 403, \[410], 411, 413.
\I\9{arc_length_}{\&{arclength} primitive}, 955.
\I\\{arc\_test}, 396, 400, 401, 408.
\I\9{arc_time_of_}{\&{arctime} primitive}, 955.
\I\\{arc\_tol\_k}, \[15], \[145], 408.
\I\\{arcgoal}, \[409].
\I\9{arclength_}{\&{arclength} primitive}, 395.
\I\9{arctime_}{\&{arctime} primitive}, 395.
\I\\{arc0}, \[410], 413.
\I\\{arc0\_orig}, \[410], 412.
\I\\{arc1}, \[396], 401, 403.
\I\\{area\_delimiter}, \[844], 846, 847, 848.
\I\\{arg}, \[366], \[392], \[1222], \[1223].
\I\\{arg\_list}, 782, \[783], \[784], 785, 790, 791, 792, 794, 801, 803.
\I\\{arg1}, \[343], \[354], \[356], \[362], \[363], \[365], \[372], \[373], %
\[401], \[408], \[409], \[410], \[437], \[441], \[444], \[446], \[452], \[454],
\[489], \[504], \[529], \[530], \[538], \[563], \[568], \[570], \[572], \[576],
\[601], \[637], \[943], \[959], \[980], \[988], \[993], \[994], \[997], %
\[1003], \[1012], \[1024], \[1027], \[1043], \[1200], \[1210].
\I\\{arg2}, \[343], \[354], \[355], \[356], \[357], \[362], \[363], \[374], %
\[391], \[401], \[408], \[409], \[410], \[437], \[441], \[444], \[446], \[454],
\[563], \[568], \[570], \[601], \[637], \[959], \[980], \[988], \[993], \[997],
\[1003], \[1027].
\I\\{arg3}, \[391], \[409], \[410], \[563], \[570], \[576], \[601].
\I\\{arg4}, \[409], \[410].
\I\\{arg5}, \[409], \[410].
\I\\{arg6}, \[409], \[410].
\I\\{arith\_error}, \[142], \[410], 143, 144, 328, 330, 376, 401, 408, \[413],
988.
\I\.{Arithmetic overflow}, 144.
\I\\{array}, 489, \[679].
\I{ASCII code}, 32.
\I\9{ASCII_}{\&{ASCII} primitive}, 955.
\I\&{ASCII\_code}, \[33], 37, 39, 60, 61, 63, 64, 77, 79, 83, 84, 86, 87, 88,
115, 117, 127, 210, 729, 845, 847, 849, 850, 859, 864, 974, 1241, 1299.
\I\\{assert}, 89, 176, 179, 228, 236, 237, 252, 256, 257, 260, 475, 487, 520,
522, 536, 591, 637, 815, 851, 910, 911, 912, 913, 973, 988, 1125.
\I\\{assignment}, 929, 1036.
\I\9{at_least_}{\&{atleast} primitive}, 232, 300.
\I\\{atan2}, 375.
\I\\{atoi}, 1052.
\I\\{attr}, 251, 256, 282.
\I\\{attr\_head}, \[251], 256, 282, 283, 285, 287, 936, 1113.
\I\\{attr\_head\_}, \[251], 252, 254, 624.
\I\\{avl\_create}, 221.
\I\\{avl\_destroy}, 222.
\I\\{avl\_false}, 228.
\I\\{avl\_find}, 228.
\I\\{avl\_ins}, 228.
\I\\{avl\_tree}, 73, 216, 228.
\I\\{ax}, \[979].
\I\.{AX}, \[978], \[979].
\I\\{ay}, \[979].
\I\.{AY}, \[978], \[979].
\I\\{a1}, 6, \[515].
\I\\{a2}, 6, \[515].
\I\\{a3}, 6, \[515].
\I\\{a4}, 6, \[515].
\I\|{B}, \[15], \[177], \[236], \[238], \[256], \[260].
\I\|{b}, \[15], \[218], \[397], \[404], \[405], \[467], \[468], \[788], \[789],
\[974], \[979], \[982], \[1027], \[1060].
\I\\{b\_orig}, \[405], \[467].
\I\\{b\_tension}, \[364], \[365].
\I\\{back\_error}, 710.
\I\\{back\_input}, 708, 710.
\I\\{back\_list}, \[705], 709, 723, 777, 937.
\I\\{backed\_up}, \[684], 692, 693, 695, 705, 706.
\I\\{bad}, 16, \[29], 30, 608.
\I\\{bad\_char}, \[974].
\I\\{bad\_exp}, 933.
\I\\{bad\_expression\_assignment}, \[1039].
\I\\{bad\_for}, 824.
\I\\{bad\_internal\_assignment}, \[1039].
\I\\{bad\_internal\_assignment\_precision}, \[1039].
\I\\{bad\_lhs}, \[1039].
\I\\{bad\_vardef}, \[181], 761, 763, 764.
\I\\{balance}, \[748], 752, \[797], 798, 799.
\I\\{banner}, 2, 16, \[26], 27, 90, 878.
\I\\{bb}, \[353], 354, 357, \[788], \[789], \[959].
\I\\{bblast}, \[482], 483, 490, 532, 536, 539.
\I\\{bblast\_}, \[482].
\I\\{bbmax}, \[384], 385, 386, 387, 388, 389.
\I\\{bbmin}, \[384], 385, 386, 387, 388, 389.
\I\\{bbtype}, \[482], 483, 490, 532, 535.
\I\\{bc}, \[405], 406, 1159, 1162, 1164, \[1167], 1170, 1173, 1204, 1206, 1215,
1218, 1219, \[1241], 1242.
\I\\{bch\_label}, \[1167], 1170, 1188, 1220, 1224.
\I\\{bchar}, \[1167], 1220, 1222.
\I\\{begin\_diagnostic}, 104, 209, 1269.
\I\\{begin\_file\_reading}, 712.
\I\9{begin_group_}{\&{begingroup} primitive}, 232.
\I\\{begin\_iteration}, 836.
\I\\{begin\_name}, 841.
\I\\{begin\_pseudoprint}, \[699], 701, 702.
\I{Bernshte{\u\i}n, Serge{\u\i} Natanovich}, 381, 403.
\I\\{beta}, \[365].
\I\9{Bezier}{B\'ezier, Pierre Etienne}, 297.
\I\\{bezier\_error}, \[978], 979.
\I\\{bg\_loc}, 232, 761, \[762].
\I{BigEndian order}, 1159.
\I\\{bilin1}, 1021, 1024.
\I\\{bilin2}, 1024.
\I\\{bilin3}, 1026.
\I\\{binary\_return}, \[988].
\I\\{bisect\_ptr}, \[605], 613, 617, 618.
\I\\{bisect\_stack}, \[605], 606, 607.
\I\\{bistack\_size}, \[23], 30, 606, 607, 608.
\I\\{black}, \[458], 460, 461, \[462], 464, 465, \[469], 471, 472, 494, 502,
516, 973, 1125, 1270.
\I\\{black\_part}, \[273], 275, 281, 913, 922, 931, 940, 961, 965, 969, 982,
988, 990, 994, 996, 1041, 1125.
\I\\{black\_part\_}, \[273].
\I\9{black_part_}{\&{blackpart} primitive}, 955.
\I\\{blank\_line}, \[206], \[207].
\I\\{blue}, \[458], 460, 461, \[462], 464, 465, \[469], 471, 472, 494, 502,
516, 973, 1125.
\I\\{blue\_part}, \[190], \[270], 272, 281, 912, 922, 931, 940, 961, 965, 969,
982, 988, 990, 994, 996, 1041, 1125.
\I\\{blue\_part\_}, \[270].
\I\9{blue_part_}{\&{bluepart} primitive}, 955.
\I\\{body}, 1268, 1270, 1271.
\I\&{boolean}, \[3], \[4], 52, 64, 69, 70, 109, 115, 116, 138, 142, 206, 207,
209, 228, 231, 281, 285, 289, 310, 311, 387, 396, 415, 422, 423, 496, 497, 532,
533, 567, 568, 634, 639, 641, 663, 710, 711, 714, 721, 730, 844, 845, 847, 849,
856, 857, 865, 879, 895, 907, 948, 960, 961, 974, 984, 993, 1027, 1043, 1150,
1167, 1227, 1230, 1251, 1261, 1262, 1283, 1284.
\I\9{boolean_}{\&{boolean} primitive}, 1046.
\I\\{boolean\_reset}, \[959], 988.
\I\\{boolean\_type}, 186.
\I\\{bot}, 1165.
\I\\{bound\_cubic}, 387, 393.
\I\9{bounded_}{\&{bounded} primitive}, 955.
\I\\{bounded\_op}, 190.
\I\\{bounds}, 959.
\I\\{bounds\_set}, \[483], 532, 535.
\I\\{bounds\_unset}, \[483], 532, 535.
\I\\{box\_ends}, 537.
\I\\{bp}, \[1125].
\I\9{btex_}{\&{btex} primitive}, 735.
\I\\{btex\_code}, \[734], 735, 736.
\I\\{buf}, \[11], \[16].
\I\\{buf\_size}, \[60], 61, 63, 64, 712, 714, 769, 779, 1292.
\I\\{buffer}, \[60], 61, 62, \[63], 64, 66, 69, 96, 117, 126, 127, 228, 677,
678, 698, 701, 714, 729, 732, 733, 779, 856, 860, 873, 874, 875, 882, 958,
1067, 1284, 1299.
\I\\{bx}, \[979].
\I\.{BX}, \[978], \[979].
\I\\{by}, \[979].
\I\.{BY}, \[978], \[979].
\I\\{b0}, \[161], 1164, 1165, 1216, 1233.
\I\\{b1}, \[161], 1164, 1165, 1216, 1233.
\I\.{B1}, \[1214], 1215.
\I\\{b2}, \[161], 1164, 1165, 1216, 1233.
\I\.{B2}, \[1214], 1215.
\I\\{b3}, \[161], 1164, 1165, 1216, 1233.
\I\.{B3}, \[1214], 1215.
\I\.{B4}, \[1214], 1215.
\I\|{C}, \[15].
\I\|{c}, \[15], \[53], \[115], \[191], \[229], \[230], \[245], \[382], \[387], %
\[404], \[405], \[467], \[468], \[475], \[544], \[580], \[670], \[671], \[672],
\[729], \[761], \[845], \[847], \[931], \[944], \[945], \[946], \[947], \[957],
\[959], \[963], \[967], \[968], \[969], \[973], \[974], \[979], \[980], \[981],
\[982], \[985], \[988], \[989], \[991], \[998], \[1005], \[1009], \[1019], %
\[1030], \[1059], \[1060], \[1138], \[1178], \[1179], \[1180], \[1183], %
\[1236], \[1250], \[1251], \[1253], \[1254], \[1270], \[1273].
\I\\{c\_orig}, \[405], \[467].
\I\.{CAIRO\_VERSION\_STRING}, 5, 1069.
\I\\{cairo\_version\_string}, 5, 1069.
\I\\{cancel\_skips}, \[1187], 1222.
\I\\{capsule}, 235, 903.
\I\\{cc}, \[353], 354, 355, 356, 357, \[362], \[363], \[944], \[946], \[947], %
\[988], \[1183], \[1236], \[1241], 1242, \[1251].
\I\\{cclass}, \[245], \[729].
\I\\{ccw}, \[567], \[568].
\I\\{center\_x}, \[426], 427, 429.
\I\\{center\_y}, \[426], 427, 429.
\I\\{cf}, 366, \[367], 368, 369, 371, 372, 373.
\I\\{change\_to\_known}, \[653], \[658].
\I\9{char_}{\&{char} primitive}, 955.
\I\\{char\_base}, \[1227], 1229, 1230, 1232, 1233.
\I\\{char\_class}, 38, \[210], 211, 245, 729.
\I\9{char_code_}{\&{charcode} primitive}, 1250, 1253, 1255.
\I\\{char\_depth}, \[1233], 1236, 1242.
\I\\{char\_exists}, 959, \[1167], 1170, 1173, 1204, 1206, 1215, 1219.
\I\9{char_exists_}{\&{charexists} primitive}, 955.
\I\\{char\_height}, \[1233], 1236, 1242.
\I\\{char\_info}, 1162, 1226, 1227, 1233, 1241.
\I\\{char\_info\_word}, 1162, 1163.
\I\9{char_list_}{\&{charlist} primitive}, 1175.
\I\\{char\_list\_code}, \[1175], 1176, 1183.
\I\\{char\_mp\_info}, \[1233], 1236, 1242.
\I\\{char\_remainder}, \[1167], 1170, 1180, 1219, 1221.
\I\\{char\_tag}, \[1167], 1170, 1180, 1181, 1219.
\I\\{char\_width}, \[1233], 1236, 1242.
\I\.{Character c is already...}, 1181.
\I{character set dependencies}, 38, 78.
\I\\{charcode}, 1270.
\I{check sum}, 1161, 1214.
\I\\{check\_arith}, \[144], 328, 409, 410, 412, 413, 923, 931, 957, 959, 988,
1041.
\I\\{check\_expansion\_depth}, \[768], 769, 947.
\I\\{check\_for\_mediation}, \[931], \[932].
\I\\{check\_interrupt}, \[138], 706, 729, 931.
\I\\{chr}, 36.
\I\\{clear\_color}, 460, 464, 471, \[1125].
\I\\{clear\_for\_error\_prompt}, 729.
\I\\{clear\_symbol}, 289.
\I\\{clear\_terminal}, \[67], 716, 873.
\I\\{clear\_the\_list}, \[1195], 1204, 1206.
\I\\{clip}, 959.
\I\9{clip_}{\&{clip} primitive}, 1128.
\I\9{clipped_}{\&{clipped} primitive}, 955.
\I\\{clone}, 15, 456.
\I\.{CLOSE\_FILE}, \[985].
\I\\{close\_file}, 16, 43, 713, 895, 985, 1061, 1157, 1217, 1284, 1287, 1289,
1290.
\I\\{close\_files\_and\_terminate}, 138.
\I\9{close_from_}{\&{closefrom} primitive}, 955.
\I\\{cm}, \[933].
\I\\{cmykcolor}, 273.
\I\\{cmykcolor\_node\_size}, \[274], 922.
\I\\{cnt}, \[115].
\I\\{coef\_bound}, 634.
\I\\{coef\_bound\_k}, \[15], \[145], 637, 638, 639, 641, 991.
\I\\{coef\_bound\_minus\_1}, \[15], \[145], 993, 997.
\I\\{collective\_subscript}, 245, 256, \[260], 282, 283, 284, 285, 936, 1045.
\I\\{colon}, 185.
\I\9{color_}{\&{cmykcolor} primitive}, 1046.
\I\9{color_}{\&{color} primitive}, 1046.
\I\9{color_}{\&{rgbcolor} primitive}, 1046.
\I\\{color\_model\_}, \[458], \[462], \[469].
\I\9{color_model_part_}{\&{colormodel} primitive}, 955.
\I\\{color\_node\_size}, \[271], 922.
\I\\{color\_type}, 902.
\I\\{comma}, 185, 791, 1050.
\I\\{command\_line}, 16, \[66].
\I\.{COMMON\_ENDING}, \[729], \[739].
\I\\{comon\_ending}, 732.
\I\\{comp\_symbols\_entry}, \[217], \[218], 221.
\I\\{complain\_invalid\_with\_list}, \[1125].
\I\\{cond\_ptr}, 805, \[807], 808, 813, 814, 815, 817, 818, 1284, 1295.
\I\\{conditional}, 817.
\I\\{const\_dependency}, 650.
\I\.{CONTINUE}, \[117], 127, 128, \[613], \[836], \[944], \[946], \[947], %
\[1184], 1188, \[1251].
\I\.{CONTINUE\_PATH}, \[948].
\I\9{contour_}{\&{contour} primitive}, 1122.
\I\\{contour\_code}, \[1121], 1122, 1123, 1136.
\I\.{control?}, 304.
\I\9{controls_}{\&{controls} primitive}, 232.
\I\\{convert\_angle\_to\_scaled}, \[456], 959.
\I\\{convert\_fraction\_to\_scaled}, 365, \[456].
\I\\{convert\_func}, 15.
\I\\{convert\_scaled\_to\_angle}, \[456], 959, 979, 1003.
\I\\{convert\_scaled\_to\_fraction}, \[456], 641, 1027, 1030.
\I\\{convex\_hull}, 433.
\I\\{copied}, \[1043].
\I\\{copy\_knot}, 316.
\I\\{copy\_objects}, 487, 495.
\I\\{copy\_path}, 301, 318, 414.
\I\\{copy\_pen}, \[415], 494, 663, 940, 973, 1125.
\I\\{copy\_pool\_segment}, \[848].
\I\\{copy\_strings\_entry}, 219.
\I\\{copy\_symbols\_entry}, \[217], \[219], 221.
\I\9{cos_d_}{\&{cosd} primitive}, 955.
\I\\{cosine}, \[343].
\I\\{cp}, \[1125].
\I\\{cp0}, \[1125].
\I\\{crossing\_point}, 15, 387, 391, 404, \[456], 561, 563, 570, 572, 576, 601,
602.
\I\\{crossing\_point\_func}, 15.
\I\\{ct}, 366, \[367], 368, 369, 371, 372, 373.
\I\\{cubic\_intersection}, 610, 614, 619.
\I\\{cur}, \[1054], 1055, 1060, 1067.
\I\\{cur\_area}, \[841], 842, 843, 846, 848, 870, 871, 872, 873, 879, 883.
\I\\{cur\_cmd}, 127, 185, \[667], 672, 707, 708, 718, 729, 737, 739, 740, 748,
755, 757, 761, 765, 769, 775, 777, 781, 791, 792, 793, 798, 799, 800, 801, 802,
811, 812, 816, 825, 826, 827, 836, 837, 898, 931, 932, 933, 936, 939, \[943],
944, 946, 947, 948, 952, 1032, 1034, 1035, 1036, 1037, 1039, 1044, 1045, 1049,
1050, 1051, 1067, 1075, 1084, 1089, 1092, 1094, 1097, 1102, 1104, 1105, 1108,
1116, 1120, 1125, 1130, 1154, 1183, 1184, 1188, 1190, 1191, 1192, 1284.
\I\\{cur\_data}, \[748], 751.
\I\\{cur\_data\_mod}, \[748], 751.
\I\\{cur\_edges}, \[1127].
\I\\{cur\_exp}, 646, 658, 707, 778, 780, 781, 792, 794, 797, 831, 834, 836,
837, 838, 839, 898, \[899], 900, 901, 902, 903, 904, 905, 906, 907, 919, 920,
923, 931, 932, 934, 936, 940, 941, 943, 945, 948, 951, 952, 953, 957, 958, 959,
963, 965, 966, 969, 973, 976, 982, 983, 984, 985, \[988], 989, 991, 992, 994,
996, 998, 1005, 1007, 1020, 1021, 1022, 1024, 1025, 1028, 1029, 1031, 1032,
1036, 1037, 1039, 1041, 1042, 1043, 1075, 1125, 1132, 1134, 1136, 1138, 1146,
1154, 1178, 1183, 1189, 1192, 1245, 1265.
\I\\{cur\_exp\_knot}, \[898], 903, 920, 948, 959, 973, 975, 984, 988, 1007,
1008, 1027, 1028, 1030, 1125, 1134, 1136.
\I\\{cur\_exp\_node}, 646, 658, 834, \[898], 903, 920, 923, 931, 934, 940, 951,
957, 959, 963, 965, 968, 969, 973, 976, 982, 984, 988, 989, 991, 992, 993, 994,
996, 997, 998, 1020, 1022, 1025, 1029, 1039, 1041, 1043, 1125, 1132, 1136, 1138.
\I\\{cur\_exp\_str}, 193, 778, 779, \[898], 903, 920, 959, 974, 985, 988, 1029,
1031, 1032, 1041, 1125, 1146, 1147, 1149, 1152, 1154, 1156, 1178, 1245.
\I\\{cur\_exp\_value\_boolean}, 775, 817, 819, \[898], 959, 1125.
\I\\{cur\_exp\_value\_number}, 193, 707, 831, 832, 837, \[898], 903, 931, 934,
936, 943, 948, 952, 959, 965, 988, 991, 994, 1039, 1041, 1043, 1076, 1125,
1178, 1183, 1189, 1192.
\I\\{cur\_ext}, \[841], 842, 843, 846, 848, 870, 871, 872, 873, 880, 883.
\I\\{cur\_file}, \[679], 713, 732, 879, 880, 882, 884, 1284.
\I\\{cur\_if}, 805, \[807], 808, 813, 814, 817, 1284, 1295.
\I\\{cur\_info}, \[729].
\I\\{cur\_input}, 50, 69, 126, \[674], 677, 684, 692, 703, 704, 875, 1284.
\I\\{cur\_length}, 72, \[73], 88, 847, 848, 1143.
\I\\{cur\_mod}, 127, \[667], 672, 707, 708, 718, 729, 739, 748, 752, 758, 761,
769, 773, 811, 817, 818, 820, 825, 898, 931, 933, 939, 944, 946, 947, 1032,
1034, 1044, 1049, 1072, 1084, 1092, 1094, 1097, 1101, 1104, 1116, 1120, 1125,
1132, 1134, 1146, 1183, 1189, 1295.
\I\\{cur\_mod\_}, \[667], 668, 669.
\I\\{cur\_mod\_int}, \[667].
\I\\{cur\_mod\_node}, \[667], 707, 769, 781, 931, 944, 946, 947, 1094, 1104,
1105, 1106, 1116.
\I\\{cur\_mod\_number}, \[667], 707, 931, 943, 1105.
\I\\{cur\_mod\_str}, \[667], 707, 729, 755, 812, 931, 1035, 1105.
\I\\{cur\_name}, \[841], 842, 843, 846, 848, 870, 871, 872, 873, 879, 880, 881,
883.
\I\\{cur\_pen}, \[577].
\I\\{cur\_pic\_item}, \[959].
\I\\{cur\_spec}, \[577].
\I\\{cur\_string}, 72, \[73], 88, 848.
\I\\{cur\_string\_size}, 72, \[73].
\I\\{cur\_sym}, 127, 229, 232, \[667], 707, 708, 718, 721, 722, 723, 724, 725,
729, \[732], 748, 751, 755, 756, 758, 761, 769, 781, 792, 793, 798, 802, 825,
898, 931, 939, 943, 944, 946, 947, 1032, 1044, 1045, 1084, 1087, 1089, 1092,
1094, 1097, 1104, 1116.
\I\\{cur\_sym\_}, \[729].
\I\\{cur\_sym\_mod}, \[667], 707, 723, 751, 758, 761, 825, 943, 1045, 1116.
\I\\{cur\_sym\_mod\_}, \[729].
\I\\{cur\_t}, \[610], 611, 612, 613, 617, 618, 619, 988.
\I\\{cur\_tok}, 707.
\I\\{cur\_tt}, \[610], 611, 612, 613, 617, 618, 619, 988.
\I\\{cur\_type}, 780, 781, 792, 794, 898, 902, 903, 904, 906, 919, 931, 959,
965, 994, 996, 1032, 1036, 1037, 1041, 1125.
\I\\{cur\_x}, 446, \[447], 448, 449, 450, 454, 529, 530, 948, 949, 950, 951,
952, 1028.
\I\\{cur\_y}, 446, \[447], 448, 449, 450, 454, 529, 530, 948, 949, 950, 951,
952, 1028.
\I\\{curl}, 300, 344, 952.
\I\9{curl_}{\&{curl} primitive}, 232.
\I\\{curl\_ratio}, 364.
\I{curvature}, 336.
\I\\{cx}, \[979].
\I\.{CX}, \[978], \[979].
\I\\{cy}, \[979].
\I\.{CY}, \[978], \[979].
\I\\{cyan}, \[458], 502, 973, 1125, 1270.
\I\\{cyan\_part}, \[273], 275, 281, 913, 922, 931, 940, 961, 965, 969, 982,
988, 990, 994, 996, 1041, 1125.
\I\\{cyan\_part\_}, \[273].
\I\9{cyan_part_}{\&{cyanpart} primitive}, 955.
\I\9{cycle_}{\&{cycle} primitive}, 955.
\I\\{cycle\_hit}, \[948].
\I\\{c0}, \[544], 549.
\I\|{d}, \[15], \[45], \[173], \[252], \[253], \[256], \[467], \[468], \[510], %
\[527], \[624], \[944], \[946], \[947], \[948], \[994], \[1196], \[1200], %
\[1201], \[1209], \[1241].
\I\\{d\_cos}, 429, \[430], 431, 432.
\I\\{d\_orig}, \[467].
\I\\{d\_sign}, \[573], 574, 575, 576.
\I\\{d\_width}, \[1270].
\I\\{dash\_info}, 477, \[514], 520.
\I\\{dash\_info\_}, \[477], \[482], 514.
\I\\{dash\_list}, \[477], 486, 488, 489, 504, 506, 510, 517, 518, 519, 520,
522, 524, 1009, 1011, 1012.
\I\\{dash\_node\_size}, 480, \[481], 486, 518, 522.
\I\\{dash\_p}, 462.
\I\\{dash\_p\_}, \[462].
\I\9{dash_part_}{\&{dashpart} primitive}, 955.
\I\\{dash\_scale}, \[462], 464, 465, 466, 489, 494, 504, 520, 973, 1009, 1017,
1125.
\I\\{dash\_y}, 179, \[477], 481, \[482], 484, 486, 488, 489, 504, 506, 510,
518, 520, 522, 524, 1010.
\I\9{dashed_}{\&{dashed} primitive}, 1122.
\I\\{dashes}, \[489].
\I\\{dashoff}, \[489], \[504], \[522].
\I\\{data}, \[15], \[55], \[161], \[174], 176, 178, 179, 193, 196, 212, 213,
219, 220, 224, 230, 236, 237, 239, 240, \[251], 254, 289, 294, 295, \[297], %
\[298], 317, 320, 621, 624, 663, 667, 707, 749, 778, 779, 794, 824, 836, 838,
839, 898, 900, 901, 920, 931, 936, 938, 948, 951, 952, 953, 959, 968, 973, 974,
982, 983, 985, 988, 992, 998, 1005, 1028, 1031, 1032, 1041, 1051, \[1054],
1055, \[1059], \[1060], 1067, 1075, 1097, 1098, 1102, 1125, 1132, 1134, 1136,
1138, 1139, 1146, 1154, 1178, 1183, 1189, 1192.
\I{data structure assumptions}, 488, 959.
\I\\{dd}, \[353], 354, 355, 357, \[510], 517, 518, 522, 523, 524, 525, \[1209].
\I\\{deal\_with\_redundant\_or\_inconsistent\_equation}, \[1043].
\I\.{DEBUG}, \[6], 7, 16, 22, 171, 176, 177, 202, 213, 214, 236, 237, 238, 254,
255, 256.
\I\\{debug\_dump\_value\_node}, \[254], \[255].
\I\\{debug\_number}, \[6], 609.
\I\\{debug\_printf}, \[6].
\I{debugging}, 138.
\I\9{decimal_}{\&{decimal} primitive}, 955.
\I\\{decr}, \[31], 96, 125, 128, 130, 131, 156, 207, 357, 485, 487, 495, 536,
557, 563, 568, 586, 594, 613, 690, 692, 704, 706, 713, 732, 752, 798, 799, 811,
985, 1120, 1143, 1156, 1202, 1221, 1284, 1295.
\I\\{decr\_mac\_ref}, \[248], 249, 936, 944, 946, 947.
\I\\{def}, \[761].
\I\9{def_}{\&{def} primitive}, 745.
\I\\{def\_ref}, \[783], \[784], 785, 803.
\I\\{default\_banner}, \[2], 16.
\I\\{defined\_macro}, 765.
\I\\{del}, \[387], 390.
\I\\{delete\_edge\_ref}, \[485], 486, 519, 835, 920, 922, 1125, 1136.
\I\\{delete\_str\_ref}, 243, 461, 465, 472, 713, 725, 755, 791, 792, 801, 812,
868, 898, 920, 922, 931, 933, 939, 963, 968, 988, 989, 1034, 1035, 1105, 1125,
1127, 1147, 1149, 1154, 1251.
\I\\{delete\_symbols\_entry}, \[217], \[220], 221, 228.
\I\\{deletions\_allowed}, \[115], \[116], 123, 124, \[710], \[711].
\I\9{delimiters_}{\&{delimiters} primitive}, 232.
\I\\{delta}, \[340], 341, 343, 348, 354, \[1021], \[1026].
\I\\{delta\_orig}, \[1021], \[1026].
\I\\{delta\_x}, \[340], 341, 343, 348, 360, 361, 371, 373, 374.
\I\\{delta\_y}, \[340], 341, 343, 348, 360, 361, 371, 373, 374.
\I\\{deltax}, \[979].
\I\\{deltay}, \[979].
\I\\{delx}, \[344], 604, 605, 613, \[614], 615, 616, 617, 618.
\I\\{dely}, \[344], 604, 605, 613, \[614], 615, 616, 617, 618.
\I\\{del1}, \[387], 390, 391.
\I\\{del2}, \[387], 390, 391.
\I\\{del3}, \[387], 390, 391.
\I\\{denom}, \[365], \[931].
\I\\{dep\_final}, \[634], 637, 638, 642, 649, 650, 651, 652, 658, 923, 934,
940, 941, 942, 1023, 1024, 1043.
\I\\{dep\_head}, \[181], 624, 628, 629, 630, 648, 649, 653, 923, 1118.
\I\\{dep\_info}, \[624], 632, 633, 637, 638, 639, 641, 642, 648, 652, 653, 654,
655, 657, 658, 915, 922, 923, 964, 991, 992, 1021, 1043, 1118.
\I\\{dep\_list}, 621, \[624], 648, 653, 902, 903, 907, 909, 922, 923, 934, 940,
942, 965, 991, 993, 996, 997, 1004, 1021, 1023, 1024, 1043, 1118.
\I\\{dep\_value}, \[624], 632, 633, 637, 638, 639, 641, 642, 646, 648, 651,
652, 654, 655, 657, 658, 923, 964, 991, 993, 1023, 1024, 1043.
\I\\{dependent}, 621, 624, 630, 631, 638, 653, 902, 903, 940, 991.
\I\\{depth}, \[469], 471, 472, 494, 538, 1241, 1242, 1243, 1270.
\I\\{depth\_base}, \[1227], 1229, 1230, 1232, 1233.
\I\\{depth\_index}, 1162.
\I{design size}, 1161, 1166, 1209.
\I\\{det}, \[590].
\I\\{diam}, \[416].
\I\\{digit\_class}, \[210], 211, 245, 729.
\I\\{dimen\_head}, 1204, \[1205], 1206, 1219.
\I\\{dimen\_out}, 1210.
\I\9{direction_time_}{\&{directiontime} primitive}, 955.
\I\\{discard\_suffixes}, \[285].
\I\\{disp\_err}, 917.
\I\\{disp\_token}, 1106.
\I\\{display\_new\_dependency}, \[653], \[656].
\I\\{div}, 150.
\I\\{divide\_int}, 15, 456.
\I\\{divide\_p\_by\_minusv\_removing\_q}, \[653], \[655].
\I\\{divide\_p\_by\_2\_n}, \[653], \[657].
\I\\{divide\_scaled}, 1247.
\I\\{dln}, \[521], 522, 523, 525.
\I\\{dmax}, \[387], 390.
\I\\{do\_add\_to}, 1135.
\I\\{do\_alloc\_node}, \[165], 169, \[170].
\I\\{do\_arc\_test}, 410.
\I\\{do\_assignment}, 1036, 1038.
\I\\{do\_binary}, 931, 955, 1019.
\I\\{do\_boolean\_error}, \[953], \[954].
\I\\{do\_clip}, 1135.
\I\\{do\_debug\_printf}, \[6], \[7].
\I\\{do\_double}, 15, 456.
\I\\{do\_edges\_trans}, 1009.
\I\\{do\_equation}, 1036, 1038.
\I\\{do\_get\_attr\_head}, 251, \[252], \[253].
\I\\{do\_get\_eq\_type}, \[213], \[214].
\I\\{do\_get\_equiv}, \[213], \[214].
\I\\{do\_get\_equiv\_node}, \[213], \[214].
\I\\{do\_get\_equiv\_sym}, \[213], \[214].
\I\\{do\_get\_hashloc}, \[256].
\I\\{do\_get\_parent}, \[256].
\I\\{do\_get\_subscr\_head}, 251, \[252], \[253].
\I\\{do\_get\_text}, \[213], \[214].
\I\\{do\_get\_value\_knot}, 236, 237, 238.
\I\\{do\_get\_value\_node}, 236, \[237], \[238].
\I\\{do\_get\_value\_number}, 236, \[237], \[238].
\I\\{do\_get\_value\_str}, 236, \[237], \[238].
\I\\{do\_get\_value\_sym}, 236, \[237], \[238].
\I\\{do\_nullary}, 931, 955.
\I\\{do\_open\_file}, 52.
\I\\{do\_set\_attr\_head}, 251, \[252], \[253].
\I\\{do\_set\_dep\_value}, \[624].
\I\\{do\_set\_hashloc}, \[256].
\I\\{do\_set\_mp\_sym\_info}, \[176], \[177].
\I\\{do\_set\_mp\_sym\_sym}, \[176], \[177].
\I\\{do\_set\_parent}, \[256].
\I\\{do\_set\_subscr\_head}, 251, \[252], \[253].
\I\\{do\_set\_subscript}, \[260].
\I\\{do\_set\_value\_knot}, 235, \[236], \[238].
\I\\{do\_set\_value\_node}, 235, \[236], \[238].
\I\\{do\_set\_value\_number}, 235, \[236], \[238].
\I\\{do\_set\_value\_str}, 235, \[236], \[238].
\I\\{do\_set\_value\_sym}, 235, \[236], \[238].
\I\\{do\_show\_var}, 1111.
\I\\{do\_statement}, 1032, 1051, 1073.
\I\\{do\_unary}, 931, 955, 959.
\I\\{done}, 601, 931, 936.
\I\.{DONE}, \[396], 397, 401, 403, \[527], \[601], \[619], \[706], \[817], 818,
\[931], 936, \[948], \[980], \[988], \[991], \[998], 1002, 1003, 1004, \[1116],
\[1184], 1187.
\I\.{DONE1}, \[303], 304, 307, \[1013], \[1043].
\I\.{DONE2}, \[936].
\I\&{double}, \[15], \[31].
\I\9{double_path_}{\&{doublepath} primitive}, 566, 1122.
\I\\{double\_path\_code}, \[1121], 1122, 1123, 1136.
\I\\{dp}, \[1125].
\I{dry rot}, 136.
\I\\{ds}, 520, \[521].
\I\\{du}, 544, \[558], \[561], 562, 572.
\I\\{dump}, 1284.
\I\.{dump occurred...}, 1284.
\I\9{dump_}{\&{dump} primitive}, 1071.
\I\\{dv}, 544, \[558], \[561], 562, 572.
\I\\{dval}, \[15], 254, 749.
\I\\{dx}, \[426], 429, \[434], 437, 441, 444, 527, 528, 529, 530, 544, \[558],
564, 566, \[567], \[568], 574, 575, \[979].
\I\.{DX}, \[978], \[979].
\I\\{dxin}, \[544], 548, 565, 566, 569, 574, 575, 580, 583, 590, 591, 597.
\I\\{dxout}, 580, 583, 590, 591, 598.
\I\\{dx0}, \[396], 397, 400, 401, 402, \[408], 544, \[558], 564, 569.
\I\\{dx01}, \[396], 397, 400, 401.
\I\\{dx02}, \[396], 397, 400, 401.
\I\\{dx1}, \[396], 400, 402, \[408].
\I\\{dx12}, \[396], 397, 400, 401.
\I\\{dx2}, \[396], 397, 400, 401, 402, \[408].
\I\\{dy}, \[426], 429, \[434], 437, 441, 444, 527, 528, 529, 530, 544, \[558],
564, 566, \[567], \[568], 574, 575, \[979].
\I\.{DY}, \[978], \[979].
\I\\{dyin}, \[544], 548, 565, 566, 569, 574, 575, 580, 583, 590, 591, 597.
\I\\{dyout}, 580, 583, 590, 591, 598.
\I\\{dy0}, \[396], 397, 400, 401, 402, \[408], 544, \[558], 564, 569.
\I\\{dy01}, \[396], 397, 400, 401.
\I\\{dy02}, \[396], 397, 400, 401.
\I\\{dy1}, \[396], 400, 402, \[408].
\I\\{dy12}, \[396], 397, 400, 401.
\I\\{dy2}, \[396], 397, 400, 401, 402, \[408].
\I\\{d1}, \[413].
\I\|{e}, \[15], \[486], \[849], \[851], \[852], \[872], \[873], \[1136].
\I\\{ec}, 1159, 1162, 1164, \[1167], 1170, 1173, 1204, 1206, 1215, 1218, 1219, %
\[1241], 1242.
\I\\{edge\_header\_size}, \[484], 486.
\I\\{edge\_list}, \[482], 483, 484, 486, 487, 490, 492, 497, 510, 838, 959,
968, 973, 976, 1009, 1134, 1136, 1270, 1271.
\I\\{edge\_ref\_count}, \[484], 485, 487, 492.
\I\\{edges}, \[1054], 1060.
\I\\{edges\_trans}, 1009.
\I\\{ee}, \[353], 354, 355, 357.
\I\\{eg\_loc}, 232, 761, \[762].
\I\&{eight\_bits}, \[41], 1167, 1173, 1177, 1178, 1180, 1214, 1215, 1227, 1230.
\I\.{EL\_GORDO}, 396, 401, 413, 482.
\I\9{else_}{\&{else} primitive}, 809.
\I\\{else\_code}, \[805], 809, 810, 820.
\I\9{else_if_}{\&{elseif} primitive}, 809.
\I\\{else\_if\_code}, \[805], 809, 817.
\I\.{Emergency stop}, 132.
\I\\{encapsulate}, 941.
\I\.{End edges?}, 497.
\I\.{end occurred...}, 1295.
\I\.{End of file on the terminal}, 69, 96.
\I\9{end_}{\&{end} primitive}, 1071.
\I\\{end\_attr}, \[181], 256, 258, 259, 282, 287, 1113.
\I\\{end\_cycle}, 332.
\I\\{end\_def}, \[745], 1032.
\I\9{end_def_}{\&{enddef} primitive}, 745.
\I\\{end\_file\_reading}, 732.
\I\\{end\_for}, \[745], 746, 769.
\I\9{end_for_}{\&{endfor} primitive}, 745.
\I\\{end\_group}, 185, 799, 1032, 1035, 1051.
\I\9{end_input_}{\&{endinput} primitive}, 771.
\I\\{end\_name}, 841.
\I\\{end\_of\_MP}, 111.
\I\\{end\_of\_statement}, 1050.
\I\\{enddef}, 761.
\I\9{endgroup_}{\&{endgroup} primitive}, 232.
\I\\{endpoint}, 297, 300, 324, 333.
\I\.{Enormous chardp...}, 1172.
\I\.{Enormous charht...}, 1172.
\I\.{Enormous charic...}, 1172.
\I\.{Enormous charwd...}, 1172.
\I\.{Enormous designsize...}, 1172.
\I{envelope spec}, 543.
\I\9{envelope_}{\&{envelope} primitive}, 955.
\I\.{EOF}, 53, 1060.
\I\\{eof\_file}, 16, 43, 1061.
\I\\{eof\_line}, 985, \[986], 987, 1155.
\I\\{epsilon\_t}, \[15], \[145], 374, 405, 413.
\I\\{eq\_type}, \[213], 229, 232, 234, 256, 283, 289, 294, 729, 936, 1045,
1052, 1084, 1104, 1251.
\I\\{eqtb}, 229, 233, 234, 254, 290, 670, 684.
\I\\{equal}, 15, 456.
\I\\{equals}, 1036.
\I\\{equation\_threshold\_k}, \[1043].
\I\\{equation\_threshold\_t}, \[15], 1043.
\I\\{equiv}, \[213], 229, 232, 234, 256, 289, 294, 729, 1052, 1085, 1251.
\I\\{equiv\_node}, \[213], 283, 289, 294, 729, 761, 936, 1045, 1049.
\I\\{equiv\_sym}, \[213], 761, 792, 793, 798, 802, 931, 1089, 1094.
\I\\{err}, \[1052], \[1251].
\I\\{err\_help}, \[109], 129, 1149, 1152.
\I\9{err_help_}{\&{errhelp} primitive}, 1143.
\I\\{err\_help\_code}, \[1143], 1146.
\I\9{err_message_}{\&{errmessage} primitive}, 1143.
\I\\{err\_message\_code}, \[1143], 1144, 1146.
\I\\{err\_out}, 16, \[65], 66, 171, 1065.
\I\\{errid}, \[1052].
\I\\{error\_count}, 104, \[105], 115, 125, 1032, 1120.
\I\\{error\_line}, \[26], 28, 79, 86, 692, 698, 699, 700, 727.
\I\\{error\_message\_issued}, 104.
\I\\{error\_out}, \[1054], 1060, 1064, 1067.
\I\\{error\_stop\_mode}, 97.
\I\.{ETC}, 250.
\I\9{etex_}{\&{etex} primitive}, 735.
\I\9{every_job_}{\&{everyjob} primitive}, 232.
\I\\{excess}, \[1197], 1200, 1202.
\I\\{exclaim\_inconsistent\_equation}, \[1041].
\I\\{exclaim\_redundant\_equation}, 664, \[665], \[666], 1041, 1043.
\I\\{exclaim\_redundant\_or\_inconsistent\_equation}, \[1041].
\I\9{exit_if_}{\&{exitif} primitive}, 232.
\I\\{exit\_test}, 765.
\I\\{exp\_type}, 903.
\I\\{expand}, 769.
\I\\{expand\_after}, 765.
\I\9{expand_after_}{\&{expandafter} primitive}, 232.
\I\\{expand\_depth}, \[766], 767, 768.
\I\\{expand\_depth\_count}, \[766], 768, 769, 947.
\I\\{export\_color}, \[1270].
\I\\{export\_knot}, 317.
\I\\{export\_knot\_list}, 323.
\I\\{export\_path}, 319.
\I\\{export\_scripts}, \[1270].
\I\\{expr}, 189.
\I\9{expr_}{\&{expr} primitive}, 759.
\I\\{expr\_sym}, 235, 761.
\I\\{ext}, \[879].
\I\\{ext\_bot}, \[1165], 1190.
\I\\{ext\_delimiter}, \[844], 846, 847, 848.
\I\\{ext\_mid}, \[1165], 1190.
\I\\{ext\_rep}, \[1165], 1190.
\I\\{ext\_tag}, \[1163], 1181, 1190.
\I\\{ext\_top}, \[1165], 1190.
\I\\{exten}, 1163, 1165, \[1167], 1223.
\I\9{extensible_}{\&{extensible} primitive}, 1175.
\I\\{extensible\_code}, \[1175], 1176, 1183.
\I\\{extensible\_recipe}, 1165.
\I{extensions to \MP}, 2.
\I\.{Extra `endfor'}, 770.
\I\.{Extra else}, 820.
\I\.{Extra elseif}, 820.
\I\.{Extra fi}, 820.
\I\\{extra\_space}, 1166.
\I\\{extra\_space\_code}, \[1166].
\I\|{f}, \[45], \[52], \[53], \[54], \[55], \[56], \[57], \[58], \[59], \[64], %
\[471], \[636], \[637], \[1058], \[1059], \[1060], \[1143], \[1230], \[1234], %
\[1235], \[1236], \[1238], \[1239], \[1241], \[1251], \[1261], \[1262].
\I\\{fabs}, 375, 1270.
\I\\{false}, \[2], 7, 28, 49, 51, 52, 64, 69, 110, 115, 127, 128, 139, 140,
143, 144, 196, 231, 294, 295, 328, 330, 389, 415, 497, 540, 634, 635, 641, 646,
648, 656, 672, 711, 714, 717, 721, 722, 729, 730, 732, 756, 785, 794, 801, 819,
833, 841, 846, 847, 849, 857, 867, 879, 890, 895, 907, 914, 923, 948, 959, 960,
961, 974, 980, 984, 988, 994, 995, 1027, 1037, 1039, 1041, 1043, 1045, 1049,
1052, 1066, 1094, 1151, 1152, 1170, 1184, 1220, 1221, 1230, 1232, 1239, 1251,
1275, 1284.
\I\9{false_}{\&{false} primitive}, 955.
\I\\{false\_code}, 190, 902, 953, 988.
\I\\{fatal\_error}, 877.
\I\\{fatal\_error\_stop}, 104, 106.
\I\\{fclose}, 57, 1060.
\I\\{feof}, 58, 1060.
\I\\{ferror}, 7.
\I\\{ff}, \[53], \[219], \[220], \[224], \[350], 353, 355, 356, 363, \[365],
373, 374, \[1059], \[1060], \[1251].
\I\\{fflush}, 59.
\I\\{fgetc}, 53, 1060.
\I\9{fi_}{\&{fi} primitive}, 809.
\I\\{fi\_code}, \[805], 809, 810, 811, 817, 818, 820.
\I\\{fi\_or\_else}, 185, 765, 805, 807, 811.
\I\&{File}, \[1058], 1060.
\I\.{File ended while scanning...}, 724.
\I\.{File names can't...}, 883.
\I\\{file\_bottom}, 682, \[684], 690, 717, 1066, 1292.
\I\\{file\_line\_error\_style}, \[50], 51, 52, 102.
\I\\{file\_offset}, \[77], 81, 85, 86, 91, 880, 1067, 1114, 1258, 1284.
\I\\{file\_ptr}, 123, 124, \[691], 692, 693, 694.
\I\\{file\_state}, 102, \[684], 690, 692, 693, 716, 729, 739, 776, 883.
\I\\{filename}, 1270.
\I\\{filename\_template}, 1251.
\I\9{filename_template_}{\&{filenametemplate} primitive}, 1143.
\I\\{filename\_template\_code}, \[1143], 1144, 1146.
\I\\{fill\_code}, 959.
\I\\{fill\_node\_size}, \[460], 461, 493.
\I\9{filled_}{\&{filled} primitive}, 955.
\I\\{filled\_op}, 190, 959.
\I\\{fin\_offset\_prep}, 560, 570.
\I\\{final\_cleanup}, 1295.
\I\\{final\_node}, \[653], \[655], \[658].
\I\\{final\_value}, \[821], 825, 831, 832, 835, 837.
\I\\{find\_direction\_time}, 600.
\I\\{find\_file}, 16, \[43], 52, 857, 1060.
\I\\{find\_font}, 959.
\I\\{find\_node\_with\_largest\_coefficient}, \[653], \[654].
\I\\{find\_offset}, 446, 453.
\I\\{find\_variable}, 283.
\I\\{finish\_path}, 948.
\I\.{FINISH\_PATH}, \[948].
\I\\{finished}, \[138], 139, 679, 1067, 1068, 1287.
\I\\{firm\_up\_the\_line}, 714.
\I\\{first}, \[60], 64, 69, 96, 117, 126, 127, \[375], \[376], \[377], 712,
713, 714, 715, 717, 732, 733, 779, 874, 882, 1066, 1067, 1284.
\I\\{first\_count}, \[77], \[698], 699, 700.
\I\\{first\_file\_name}, 1254, \[1255], 1256, 1257, 1260.
\I\\{first\_output\_code}, 1254, \[1255], 1256.
\I\\{fix\_by}, \[569].
\I\\{fix\_check\_sum}, 1214.
\I\\{fix\_dependencies}, 647.
\I\\{fix\_needed}, \[634], 635, 637, 638, 639, 641, 647, 648, 653, 923, 991,
992, 1021, 1023.
\I\\{fix\_word}, 1160, 1161, 1166, 1210.
\I\\{fline}, \[121], \[122].
\I\9{floor_}{\&{floor} primitive}, 955.
\I\\{floor\_scaled}, 15, \[456], 959.
\I\\{flush\_file}, 16, 43, 67, 1061.
\I\\{flush\_node\_list}, 184.
\I\\{flush\_p}, \[663].
\I\\{flush\_spurious\_symbols\_after\_declared\_variable}, \[1049], \[1050].
\I\\{flush\_unparsable\_junk\_after\_statement}, \[1032], \[1035].
\I\\{flush\_variable}, 284.
\I\\{flushing}, \[719], 725, 727, 1035, 1050.
\I\\{fmode}, 41, \[44], \[45], \[46], \[1059], \[1060].
\I\\{fmt}, \[6], \[7], \[165].
\I\\{fn}, \[985], \[1156].
\I\\{fname}, \[5], 41, \[44], \[45], \[46], \[121], \[122], \[880], \[1059], %
\[1060], \[1236], \[1237], \[1284].
\I\.{font metric dimensions...}, 1223.
\I{font metric files}, 1158.
\I\.{Font metrics written...}, 1217.
\I\\{font\_bc}, \[1227], 1229, 1230, 1232, 1241.
\I\&{font\_data}, \[161], 1227, 1228.
\I\9{font_dimen_}{\&{fontdimen} primitive}, 1175.
\I\\{font\_dimen\_code}, \[1175], 1183.
\I\\{font\_dsize}, 959, \[1227], 1229, 1230, 1232, 1270.
\I\\{font\_ec}, \[1227], 1229, 1230, 1232, 1241.
\I\\{font\_enc\_name}, \[1227], 1229, 1230, 1232.
\I\\{font\_info}, 1226, \[1227], 1228, 1229, 1233.
\I\\{font\_max}, \[1227], 1230.
\I\\{font\_mem\_size}, \[1227], 1228.
\I\\{font\_n\_}, \[469].
\I\\{font\_name}, 507, 973, 1226, \[1227], 1229, 1230, 1232, 1234, 1235, 1236,
1239, 1270.
\I\&{font\_number}, \[5], \[1226], 1227, 1230, 1231, 1232, 1234, 1235, 1236,
1238, 1239, 1241, 1261, 1262.
\I\9{font_part_}{\&{fontpart} primitive}, 955.
\I\\{font\_ps\_name}, \[1227], 1229, 1230, 1232.
\I\\{font\_ps\_name\_fixed}, \[1227], 1229, 1230, 1232.
\I\\{font\_size}, 959.
\I\9{font_size_}{\&{fontsize} primitive}, 955.
\I\\{font\_sizes}, \[1227], 1229, 1230, 1232, 1262.
\I\9{fontmapfile}{\&{fontmapfile} primitive}, 232.
\I\9{fontmapline}{\&{fontmapline} primitive}, 232.
\I\\{fopen}, 41, 46, 1060.
\I\9{for_}{\&{for} primitive}, 745.
\I\9{for_suffixes_}{\&{forsuffixes} primitive}, 745.
\I\.{Forbidden token found...}, 724.
\I\\{forbidden\_internal\_assignment}, \[1039].
\I\\{force\_eof}, 717, \[730], 732, 773, 1066.
\I\\{force\_valid\_tension\_setting}, \[948].
\I\9{forever_}{\&{forever} primitive}, 745.
\I\\{forever\_text}, \[684], 695, 776, 831.
\I\\{forward}, 107, 765.
\I\.{FOUND}, \[280], \[350], 357, 360, 363, \[600], 601, \[729], \[792], %
\[817], \[985].
\I\\{found}, 601, 985.
\I\&{four\_quarters}, \[161], 1167, 1183, 1216, 1233, 1236, 1241.
\I\\{fp}, \[219].
\I\\{fprintf}, 254, 1060, 1069.
\I\\{fptr}, \[1054], 1055, 1060.
\I\\{fputs}, 7, 54.
\I\\{fraction}, 186, 305, 345, 382, 621, 624, 636, 639, 655, 991, 994.
\I\\{fraction\_four}, 400, 408.
\I\\{fraction\_four\_t}, \[15], \[148], 365, 408, 1193.
\I\\{fraction\_half\_t}, \[15], \[148], 158, 354, 390, 431, 450, 559, 583, 591,
601, 1172, 1209, 1223.
\I\\{fraction\_one}, 150, 639, 655.
\I\\{fraction\_one\_t}, \[15], \[148], 155, 351, 354, 356, 357, 363, 372, 387,
391, 392, 454, 467, 561, 563, 570, 572, 600, 601, 655, 923.
\I\\{fraction\_three\_t}, \[15], \[148], 354, 365.
\I\\{fraction\_threshold\_k}, \[636], 637, 638.
\I\\{fraction\_threshold\_t}, \[15], 636.
\I\\{fraction\_to\_round\_scaled}, 15, \[456], 601, 632, 641, 923, 925, 959,
1003, 1043.
\I\\{fraction\_to\_round\_scaled\_func}, 15.
\I\\{fraction\_to\_scaled}, 15, 456.
\I\\{fread}, 55, 1060.
\I\\{free}, 15, 64, 171, 221, 375, 376, 455, 857, 936, 1039, 1060, 1127, 1251.
\I\.{FREE}, \[600].
\I\\{free\_math}, 12, 15, \[456].
\I\\{free\_node}, 179.
\I\\{free\_number}, 153, 155, 157, 158, 179, 220, 240, 283, 295, 305, 306, 309,
327, 341, 343, 344, 346, 350, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363,
365, 366, 369, 371, 372, 373, 374, 375, 382, 386, 387, 390, 391, 392, 396, 397,
401, 402, 403, 405, 408, 409, 410, 412, 413, 421, 426, 429, 432, 434, 437, 441,
444, 446, 449, 450, 452, 454, \[455], 461, 465, 467, 472, 486, 489, 497, 504,
510, 515, 518, 520, 522, 523, 524, 525, 527, 529, 530, 534, 537, 538, 539, 544,
552, 559, 561, 562, 563, 566, 568, 569, 570, 572, 574, 575, 576, 580, 583, 590,
591, 593, 597, 598, 600, 601, 607, 612, 616, 619, 633, 637, 638, 639, 641, 642,
646, 653, 654, 655, 657, 658, 707, 835, 901, 907, 920, 923, 925, 928, 931, 943,
948, 952, 957, 959, 979, 980, 983, 988, 991, 992, 993, 994, 996, 997, 1001,
1003, 1006, 1009, 1010, 1012, 1015, 1017, 1021, 1023, 1024, 1026, 1027, 1030,
1041, 1043, 1098, 1125, 1169, 1172, 1196, 1199, 1200, 1201, 1202, 1209, 1210,
1213, 1222, 1223, 1241, 1251, 1270, 1271.
\I\\{free\_number\_func}, 15.
\I\\{free\_symbolic\_node}, 179.
\I\\{from\_addition}, 15, 456.
\I\\{from\_boolean}, 15, 456.
\I\\{from\_div}, 15, 456.
\I\\{from\_double}, 15, 456.
\I\\{from\_int}, 15, 456.
\I\\{from\_int\_div}, 15, 456.
\I\\{from\_int\_mul}, 15, 456.
\I\\{from\_mul}, 15, 456.
\I\\{from\_oftheway}, 15, 456.
\I\\{from\_scaled}, 15, 456.
\I\\{from\_substraction}, 15, 456.
\I\\{frozen\_bad\_vardef}, \[216], 227, 763.
\I\\{frozen\_colon}, \[216], 232, 820.
\I\\{frozen\_dump}, \[216], 713, 1071.
\I\\{frozen\_end\_def}, \[216], 725, 745.
\I\\{frozen\_end\_for}, \[216], 725, 745.
\I\\{frozen\_end\_group}, \[216], 232, 725, 761.
\I\\{frozen\_etex}, \[216], 722, 735.
\I\\{frozen\_fi}, \[216], 721, 809.
\I\\{frozen\_inaccessible}, \[216], 227, 231, 755.
\I\\{frozen\_left\_bracket}, \[216], 232, 932, 936.
\I\\{frozen\_mpx\_break}, \[216], 732, 735.
\I\\{frozen\_repeat\_loop}, \[216], 828, 829, 830.
\I\\{frozen\_right\_delimiter}, \[216], 227, 725.
\I\\{frozen\_semicolon}, \[216], 232, 725.
\I\\{frozen\_slash}, \[216], 931, 955.
\I\\{frozen\_symbols}, 216, 221, 222, 228.
\I\\{frozen\_undefined}, \[216], 227, 289.
\I\\{frst}, \[1251].
\I\\{ftemplate}, \[1251].
\I\\{ftype}, 41, \[44], \[45], \[46], \[52], \[1059], \[1060].
\I\.{FUNCTION\_TRACE1}, \[6], 293, 296, 328, 424.
\I\.{FUNCTION\_TRACE2}, \[6], 178, 179, 184, 239, 240, 243, 254, 263, 265, 287,
294, 295, 350, 358, 652, 922, 941.
\I\.{FUNCTION\_TRACE3}, \[6], 176, 179, 212, 213, 236, 237, 242, 252, 260, 289,
624, 650, 651, 653.
\I\.{FUNCTION\_TRACE3X}, \[6].
\I\.{FUNCTION\_TRACE4}, \[6], 224, 252, 256, 624, 649.
\I\\{fwrite}, 56, 1060.
\I\|{g}, \[1143].
\I\\{gamma}, \[364], \[365].
\I\\{gamma\_orig}, \[365].
\I\\{get\_arc\_time}, 410.
\I\\{get\_dep\_info}, \[624], \[625].
\I\\{get\_mp\_sym\_info}, \[176], \[177].
\I\\{get\_mp\_sym\_sym}, \[176], \[177].
\I\\{get\_next}, 107, 115, 667, 718, 719, 728, 729, 734, 860.
\I\\{get\_symbol}, 756, 828.
\I\\{get\_symbolic\_node}, 178.
\I\\{get\_t\_next}, 734, \[737], 748, 755, 758, 761, 765, 777, 781, 783, 797,
811, 1035, 1050, 1108, 1116.
\I\\{get\_x\_next}, 765, 769, 780, 817, 820, 821, 903, 904, 936, 939, 944,
1032, 1130.
\I\\{given}, 300, 305, 333, 344, 952.
\I\\{glyph}, 1271.
\I\9{glyph_infont_}{\&{envelope} primitive}, 955.
\I\\{gmp\_version}, 5, 1069.
\I\\{gr\_black\_val}, 1270.
\I\\{gr\_color\_model}, 1270.
\I\\{gr\_cyan\_val}, 1270.
\I\\{gr\_dash\_p}, 1270.
\I\\{gr\_depth\_val}, 1270.
\I\\{gr\_font\_dsize}, 1270.
\I\\{gr\_font\_n}, 1270.
\I\\{gr\_font\_name}, 1270.
\I\\{gr\_height\_val}, 1270.
\I\\{gr\_htap\_p}, 1270.
\I\\{gr\_lcap\_val}, 1270.
\I\\{gr\_link}, 1268, 1270.
\I\\{gr\_ljoin\_val}, 1270.
\I\\{gr\_magenta\_val}, 1270.
\I\\{gr\_miterlim\_val}, 1270.
\I\\{gr\_object}, 493.
\I\\{gr\_path\_p}, 1270, 1271.
\I\\{gr\_pen\_p}, 1270, 1271.
\I\\{gr\_post\_script}, 1270.
\I\\{gr\_pre\_script}, 1268, 1270.
\I\\{gr\_text\_l}, 1270.
\I\\{gr\_text\_p}, 1270.
\I\\{gr\_tx\_val}, 1270.
\I\\{gr\_txx\_val}, 1270.
\I\\{gr\_txy\_val}, 1270.
\I\\{gr\_ty\_val}, 1270.
\I\\{gr\_type}, 1271.
\I\\{gr\_tyx\_val}, 1270.
\I\\{gr\_tyy\_val}, 1270.
\I\\{gr\_width\_val}, 1270.
\I\\{gr\_XXXX}, 1270.
\I\\{gr\_yellow\_val}, 1270.
\I\\{greater}, 15, 456.
\I\\{green}, \[458], 460, 461, \[462], 464, 465, \[469], 471, 472, 494, 502,
516, 973, 1125.
\I\\{green\_part}, \[270], 272, 281, 912, 922, 931, 940, 961, 965, 969, 982,
988, 990, 994, 996, 1041, 1125.
\I\\{green\_part\_}, \[270].
\I\9{green_part_}{\&{greenpart} primitive}, 955.
\I\\{grey}, \[458], 502, 973, 1125, 1271.
\I\\{grey\_part}, \[270], 281.
\I\9{grey_part_}{\&{greypart} primitive}, 955.
\I\\{group\_line}, \[931].
\I\\{gs\_colormodel}, 201.
\I\|{h}, \[302], \[303], \[310], \[311], \[328], \[393], \[409], \[410], %
\[415], \[416], \[418], \[419], \[422], \[423], \[424], \[433], \[434], \[446],
\[453], \[483], \[484], \[485], \[486], \[487], \[489], \[496], \[497], \[505],
\[506], \[510], \[526], \[527], \[532], \[533], \[544], \[580], \[600], \[619],
\[943], \[1009], \[1045], \[1059], \[1060], \[1241], \[1269], \[1270], \[1271],
\[1272], \[1273], \[1274], \[1275].
\I\\{half}, 15, 456, \[613].
\I\\{half\_cos}, 429, \[430], 431, 432.
\I\\{half\_error\_line}, \[26], 28, 692, 698, 699, 700.
\I\\{half\_fraction\_threshold\_k}, \[636], 637, 639, 641, 655, 657.
\I\\{half\_fraction\_threshold\_t}, \[15], 636.
\I\\{half\_scaled\_threshold\_k}, \[636], 637, 639, 641.
\I\\{half\_scaled\_threshold\_t}, \[15], 636.
\I\\{half\_threshold}, \[637].
\I\\{half\_unit\_t}, \[15], \[145], 1183.
\I\\{half\_v02}, \[397].
\I\\{halfp}, 15, 397, 456.
\I\\{halfp\_tol}, \[397].
\I\&{halfword}, 69, 126, 159, \[161], 176, 177, 212, 213, 214, 215, 229, 230,
295, 349, 350, 458, 462, 469, 471, 482, 580, 592, 673, 712, 714, 717, 729, 732,
733, 747, 748, 779, 788, 789, 825, 931, 944, 946, 947, 948, 959, 1084, 1179,
1180.
\I\\{halt\_on\_error}, \[26], 28, 115.
\I\\{hard\_times}, 996.
\I\\{has\_color}, \[473], 959, 973, 1125.
\I\\{has\_number}, 170, \[174], 178, 179, 239, 254, 481.
\I\\{has\_pen}, \[473], 973, 1125.
\I\\{hash}, 670, 718.
\I\\{hashloc}, \[256], 258, 280, 282, 283, 285, 936.
\I\\{hashloc\_}, \[251], 254, 256.
\I\.{HAVE\_BOOLEAN}, 3, 4.
\I\.{HAVE\_UNISTD\_H}, 5.
\I\\{header}, 1161.
\I\\{header\_byte}, \[1167], 1168, 1169, 1170, 1183, 1191, 1209, 1214, 1218.
\I\9{header_byte_}{\&{headerbyte} primitive}, 1175.
\I\\{header\_byte\_code}, \[1175], 1176, 1183.
\I\\{header\_last}, \[1167], 1168, 1191, 1218.
\I\\{header\_size}, \[1167], 1168, 1170, 1191.
\I\\{height}, \[469], 471, 472, 494, 538, 1241, 1242, 1243, 1270.
\I\\{height\_base}, \[1227], 1229, 1230, 1232, 1233.
\I\\{height\_index}, 1162.
\I\\{height\_x}, \[426], 427, 429.
\I\\{height\_y}, \[426], 427, 429.
\I\\{help\_line}, \[115], 127, 128, 130, 725.
\I\\{help\_ptr}, \[115], 127, 128, 130.
\I\.{Here is how much...}, 1292.
\I\9{hex_}{\&{hex} primitive}, 955.
\I\\{hh}, \[487], 488, 490, \[492], 520, \[521], 522, 524, \[619], 620, 1060,
1268, 1270, \[1271], 1275.
\I\\{hhd}, \[504].
\I\\{history}, 16, 17, 19, 104, \[105], 106, 112, 115, 132, 135, 137, 171, 207,
768, 854, 891, 1051, 1066, 1067, \[1068], 1295, 1298.
\I\\{hlp}, \[115], \[116], \[132], \[135], \[137], \[140], \[144], \[330], %
\[511], \[513], \[516], \[644], \[665], \[710], \[711], \[715], \[721], \[722],
\[724], 725, \[729], \[732], \[741], \[742], \[743], \[744], \[755], \[757], %
\[761], \[768], \[770], \[774], \[775], \[778], \[791], \[792], \[793], \[801],
\[802], \[816], \[820], \[824], \[826], \[827], \[837], \[839], \[883], \[891],
\[931], \[932], \[933], \[936], \[938], \[943], \[948], \[951], \[952], \[953],
\[963], \[968], \[974], \[988], \[989], \[998], \[1005], \[1032], \[1034], %
\[1035], \[1039], \[1041], \[1043], \[1049], \[1050], \[1051], \[1075], %
\[1089], \[1092], \[1094], \[1120], \[1125], \[1127], \[1132], \[1134], %
\[1136], \[1139], \[1148], \[1152], \[1154], \[1172], \[1178], \[1181], %
\[1183], \[1184], \[1187], \[1189], \[1190], \[1192], \[1246], \[1266].
\I\\{hn}, \[548].
\I{Hobby, John Douglas}, 335.
\I\\{hold\_head}, \[181], 182, 183, 727, 748, 761, 797.
\I\9{hour_}{\&{hour} primitive}, 200.
\I\\{hp}, \[548], 1268, 1270.
\I\\{hq}, 1270.
\I\\{hsf}, \[520], 521, 522, 523, 524, 525.
\I\\{ht\_x}, \[591], 593.
\I\\{ht\_x\_abs}, \[591].
\I\\{ht\_y}, \[591], 593.
\I\\{ht\_y\_abs}, \[591].
\I\\{hx}, \[446], 450, 451, 452.
\I\\{hy}, \[446], 450, 451, 452.
\I\|{i}, \[35], \[115], \[152], \[153], \[196], \[385], \[386], \[527], \[606],
\[607], \[698], \[927], \[928], \[1169], \[1183], \[1251].
\I\.{I can't find file x}, 873.
\I\.{I can't find PLAIN...}, 857.
\I\.{I can't go on...}, 137.
\I\.{I can't write on file x}, 873.
\I\\{iarea\_stack}, \[679], 681, 683.
\I\\{ichar\_exists}, \[1233], 1236, 1242.
\I\\{id}, \[1251].
\I\\{id\_lookup}, 223, 225.
\I\\{id\_lookup\_test}, \[225], 226, 228.
\I\\{id\_transform}, 277.
\I\9{if_}{\&{if} primitive}, 809.
\I\\{if\_code}, \[805], 809, 810, 813, 820.
\I\\{if\_limit}, 805, \[807], 808, \[813], 814, 815, 817, 820.
\I\\{if\_line}, 805, \[807], 808, 813, 814, 817, 1284, 1295.
\I\\{if\_line\_field}, \[805], 813, 814, 1284, 1295.
\I\\{if\_line\_field\_}, \[805].
\I\\{if\_node\_size}, \[806], 814.
\I\\{if\_test}, 185, 765, 811, 817.
\I\\{iindex}, \[677], 679, 684, 689, 712, 713, 714, 715, 717, 732, 739, 884,
1066.
\I\.{illegal design size...}, 1209.
\I\.{Illegal ligtable step}, 1184.
\I\\{import\_knot}, 320.
\I\\{import\_path}, 321.
\I\.{Improper font parameter}, 1192.
\I\.{Improper kern}, 1189.
\I\.{Improper location}, 1183.
\I\.{Improper subscript...}, 938.
\I\.{Improper...replaced by 0}, 824.
\I\\{in\_angle}, 980.
\I\\{in\_area}, \[679], 713, 879, 884.
\I\\{in\_ext}, \[679], 713, 879, 884.
\I\9{in_font_}{\&{infont} primitive}, 955.
\I\\{in\_name}, \[679], 713, 879, 884.
\I\\{in\_open}, \[679], 712, 713, 714, 715, 717, 1066, 1284.
\I\\{in\_open\_max}, \[679], 712, 1292.
\I\&{in\_state\_record}, \[673], 674, 675, 703, 1284.
\I\\{iname\_stack}, \[679], 681, 683.
\I\.{Incomplete if...}, 721.
\I\\{incr}, \[31], 69, 86, 96, 115, 130, 140, 343, 350, 366, 485, 495, 536,
547, 557, 563, 568, 586, 594, 703, 729, 732, 752, 761, 779, 785, 790, 794, 798,
799, 801, 803, 804, 811, 860, 862, 874, 880, 985, 1097, 1156, 1189, 1191, 1192,
1196, 1201, 1210, 1221, 1223, 1239, 1242, 1251, 1259, 1284.
\I\\{indep}, \[161], 212, 213, 230, 254, 289, 294, 295, 621, 749.
\I\\{indep\_scale}, 161, \[621], 632, 648, 651, 653, 925.
\I\\{indep\_value}, 161, 176, 248, \[621], 637, 638, 642, \[1201], 1219.
\I\\{independent}, 634, 902, 903, 934, 940, 964, 988.
\I\\{independent\_being\_fixed}, \[648].
\I\\{independent\_needing\_fix}, \[634], 637, 638, 639, 641.
\I\\{index}, 673, 678, 679, 1233.
\I\\{index\_field}, \[673], 677, 690.
\I\\{inext\_stack}, \[679], 681, 683.
\I\\{inf\_t}, \[15], \[141], 375, 413, 456.
\I\\{inf\_val}, \[181], 1193, 1194, 1195, 1196, 1201, 1219.
\I\\{info}, 284, \[297], \[298], 317, 320, 551, 580, \[747], 751, 758, 761,
776, 782, \[821], 825, 829, 831, 835.
\I\\{info\_mod}, \[747], 751, 758, 761, 825.
\I\\{ini\_version}, \[26], 28, 854, 1066, 1282, 1298.
\I\\{init\_bbox}, 491.
\I\\{init\_pair\_node}, 266.
\I\\{init\_randoms}, 15, \[456], 1066, 1076, 1299.
\I\\{init\_randoms\_func}, 15.
\I\\{init\_terminal}, 717.
\I\\{initialize}, 11.
\I\\{initialize\_print\_selector}, \[103], 1032, 1066, 1299.
\I{inner loop}, 64, 178, 184, 283, 397, 706, 707, 780.
\I\9{inner_}{\&{inner} primitive}, 1081.
\I\\{input}, 765.
\I\9{input_}{\&{input} primitive}, 771.
\I\\{input\_file}, \[679], 681, 683, 713.
\I\\{input\_ln}, 60, 64, 86, 714.
\I\\{input\_ptr}, \[674], 690, 692, 693, 703, 704, 713, 716, 717, 732, 875,
1066, 1284, 1295.
\I\\{input\_stack}, 50, 123, \[674], 675, 676, 690, 692, 703, 704, 875.
\I\.{insert>}, 126.
\I\\{insert\_new}, \[228].
\I\\{inserted}, \[684], 695, 706, 711.
\I\\{install}, 942.
\I\&{int}, \[15], \[42], \[886].
\I\\{int\_increment}, 30, \[605], 608, 613, 618.
\I\\{int\_packets}, 30, \[605], 608, 613, 617.
\I\\{int\_ptr}, \[194], 199, 1097, 1292.
\I\&{integer}, \[4], 29, 35, 76, 77, 92, 93, 94, 95, 115, 134, 135, 138, 149,
161, 216, 244, 245, 250, 370, 371, 428, 495, 527, 532, 543, 556, 557, 560, 561,
567, 568, 605, 610, 613, 614, 618, 623, 642, 651, 653, 656, 657, 658, 670, 671,
672, 674, 679, 681, 685, 689, 690, 691, 698, 719, 739, 748, 784, 788, 789, 797,
807, 811, 844, 847, 851, 875, 931, 959, 974, 988, 1049, 1110, 1134, 1138, 1167,
1178, 1196, 1197, 1200, 1201, 1209, 1210, 1211, 1214, 1216, 1227, 1230, 1247,
1250, 1251, 1255, 1270, 1284, 1287.
\I\.{INTEGER\_TYPE}, 4.
\I\\{interaction}, 96, 97, 98, \[99], 100, 102, 103, 115, 123, 125, 130, 131,
132, 135, 137, 140, 732, 733, 768, 873, 891, 918, 957, 1032, 1120, 1152, 1295.
\I\\{interesting}, 281.
\I\9{interim_}{\&{interim} primitive}, 232.
\I\\{internal}, 112, 150, 193, \[194], 196, 295, 532, \[1097], 1098, 1227.
\I\\{internal\_name}, \[193], 295, 1039, 1097, 1098, 1106, 1172, 1203.
\I\\{internal\_quantity}, 936.
\I\\{internal\_string}, \[193], 868, 931, 1039, 1147, 1251, 1275.
\I\\{internal\_sym}, 235.
\I\\{internal\_type}, \[193], 295, 931, 1039, 1052, 1251.
\I\\{internal\_value}, 17, \[193], 202, 204, 207, 281, 294, 295, 328, 460, 464,
532, 535, 581, 644, 646, 653, 733, 769, 775, 784, 794, 801, 817, 831, 878, 914,
923, 931, 957, 959, 973, 974, 980, 988, 994, 1028, 1032, 1037, 1039, 1052,
1066, 1097, 1120, 1138, 1170, 1172, 1209, 1210, 1217, 1220, 1239, 1251, 1270,
1273, 1275, 1287, 1291, 1299.
\I\\{interrupt}, \[138], 140, 931.
\I\.{Interruption}, 140.
\I\9{intersection_times_}{\&{intersectiontimes} primitive}, 955.
\I\\{intname}, \[192], 193.
\I\.{Invalid code...}, 1178.
\I\\{invalid\_class}, \[210], 211, 729.
\I\.{IS\_DIR\_SEP}, \[847].
\I\\{is\_invalid\_with\_list}, \[1125].
\I\\{is\_number}, \[15], 179, 254, 749, 920, 948, 965.
\I\\{is\_read}, \[678], 957, 985.
\I\\{is\_scantok}, \[678], 694, 779.
\I\\{is\_start\_or\_stop}, \[473], 495, 834, 838, 976.
\I\\{is\_stop}, \[473], 495, 834, 973, 976.
\I\\{is\_term}, \[678], 679, 712, 717, 1066.
\I\\{isolated\_classes}, \[210], 245, 729.
\I\\{isstring}, \[1052], \[1053].
\I\\{ital\_corr}, 1270.
\I\\{italic\_index}, 1162.
\I\\{iteration}, 747, 765.
\I\|{j}, \[88], \[129], \[228], \[769], \[851], \[1183].
\I\\{j\_random}, \[150], 155, 156.
\I\.{job aborted, file error...}, 873.
\I\\{job\_name}, 131, 732, 865, \[866], 867, 868, 869, 870, 871, 875, 880,
1217, 1251, 1295.
\I\\{join\_type}, \[580], \[582], \[583], 589, \[597].
\I\\{jump\_buf}, 11, 12, 96, \[111], 112, 376, 1051, 1067, 1068.
\I\\{jump\_out}, 111, 112.
\I\|{k}, \[12], \[83], \[87], \[96], \[149], \[155], \[341], \[342], \[346], %
\[348], \[350], \[370], \[371], \[424], \[492], \[556], \[557], \[580], \[681],
\[687], \[690], \[729], \[733], \[761], \[769], \[851], \[859], \[873], \[875],
\[958], \[974], \[985], \[1097], \[1125], \[1156], \[1183], \[1214], \[1238], %
\[1239], \[1241], \[1284], \[1287].
\I\\{k\_needed}, \[544], 550, 555, 569.
\I\\{kern}, 1164, \[1167], 1169, 1183, 1189, 1222.
\I\9{kern_}{\&{kern} primitive}, 1185.
\I\\{kern\_flag}, \[1164], 1189.
\I\\{kk}, \[428], 429, \[592], 593, 594, \[1241].
\I\\{knot}, 290.
\I\\{knot\_coord}, 387.
\I\\{knot\_nodes}, 166, 167, 168, 313, 316, 327.
\I\\{knots}, \[328], \[329], 331, 332.
\I\\{known}, 235, 621, 636, 902, 903, 919, 940, 991, 992, 998, 1026.
\I\9{known_}{\&{known} primitive}, 955.
\I\\{known\_pair}, 950.
\I\.{KPATHSEA\_DEBUG\_H}, \[5].
\I\\{k0}, \[580], 593, 594.
\I\|{l}, \[9], \[63], \[87], \[228], \[244], \[245], \[250], \[347], \[348], %
\[434], \[683], \[698], \[703], \[811], \[815], \[854], \[857], \[875], \[985],
\[1027], \[1042], \[1043], \[1052], \[1060], \[1067], \[1070], \[1094], %
\[1096], \[1097], \[1156], \[1191], \[1196], \[1201], \[1230], \[1231], %
\[1251], \[1284].
\I\\{l\_d}, \[1201], 1202.
\I\\{l\_delim}, \[761], \[784], 792, 793, 795, \[796], \[797], 798, 802, %
\[931], \[1087], \[1088], \[1089].
\I\\{l\_packets}, \[605], 613, 618.
\I\\{la}, \[158].
\I\\{label\_char}, \[1167], 1180, 1220, 1221.
\I\\{label\_loc}, \[1167], 1170, 1180, 1220, 1221, 1222.
\I\\{label\_ptr}, \[1167], 1170, 1180, 1220, 1221, 1222.
\I\\{last}, \[60], \[64], 66, 69, 96, 117, 126, 127, 714, 717, 732, 733, 856,
874, 958.
\I\\{last\_add\_type}, \[1130], 1132, 1136.
\I\\{last\_file\_name}, 1254, \[1255], 1256, 1257, 1260.
\I\\{last\_fnum}, \[1227], 1228, 1229, 1230, 1232, 1235, 1236.
\I\\{last\_output\_code}, 1254, \[1255], 1256.
\I\\{last\_pending}, 182, \[1263], 1265, 1268.
\I\\{last\_ps\_fnum}, \[1227], 1232.
\I\\{lcap}, \[462], 464, 500, 537, \[580], 582, \[1028], 1270.
\I\\{lcap\_val}, 500.
\I\\{left\_brace}, 185, 948.
\I\\{left\_coord}, 387.
\I\\{left\_curl}, \[300], 305, 331, 344, 363, 375, 948.
\I\\{left\_delimiter}, 1085.
\I\\{left\_given}, \[300], 305, 344, 360, 373, 948.
\I\\{left\_tension}, \[300], 304, 306, 354, 355, 362, 363, 371, 372, 374, 375,
948.
\I\\{left\_type}, \[297], \[298], 317, 320.
\I\\{left\_x}, \[297], \[298], 300, 307, 313, 316, 317, 320, 324, 327, 331,
334, 344, 371, 374, 375, 378, 382, 387, 389, 409, 410, 414, 416, 417, 421, 425,
427, 429, 451, 467, 515, 528, 549, 552, 559, 579, 585, 588, 596, 597, 598, 601,
617, 620, 948, 980, 1007, 1008, 1030.
\I\\{left\_y}, \[297], \[298], 300, 307, 313, 316, 317, 320, 324, 327, 331,
334, 344, 371, 374, 375, 378, 382, 387, 389, 409, 410, 414, 416, 417, 421, 425,
427, 429, 451, 467, 528, 549, 552, 559, 579, 585, 588, 596, 597, 598, 601, 617,
620, 948, 980, 1007, 1008, 1030.
\I\\{len}, \[53], \[55], \[72], \[88], 89, 129, 218, \[223], \[224], 228, 231,
254, 749, 778, 779, \[848], 862, 959, 974, \[1060], 1125, 1147, 1149, 1178,
1241, 1251, 1270.
\I\9{length_}{\&{length} primitive}, 955.
\I\\{less}, 15, 456.
\I\9{let_}{\&{let} primitive}, 232.
\I\\{letter\_class}, \[210], 211, 245.
\I\\{lev}, \[495], \[532], 536.
\I\\{lf}, 1159.
\I\\{lh}, 1159, 1218.
\I\.{LH}, 1218, \[1287].
\I\\{lhe}, \[1134], \[1136].
\I\\{lhs}, \[1037], \[1039], \[1040], \[1041].
\I\\{lhv}, \[1132], \[1134], \[1136].
\I\\{lig\_kern}, 1163, 1164, \[1167], 1169, 1183, 1220, 1222, 1287.
\I\\{lig\_kern\_command}, 1164.
\I\9{lig_table_}{\&{ligtable} primitive}, 1175.
\I\\{lig\_table\_code}, \[1175], 1176, 1183.
\I\\{lig\_table\_size}, 1220.
\I\\{lig\_tag}, \[1163], 1180, 1181, 1188.
\I\\{lim}, \[53], \[1060].
\I\\{limit}, 673, \[677], 678, 684, 701, 712, 714, 715, 716, 717, 729, 732,
733, 779, 880, 882, 895, 957, 1067, 1284, 1299.
\I\\{limit\_field}, 126, \[673], 677, 875.
\I\&{line}, \[679].
\I\\{line\_stack}, \[679], 681, 683, 690.
\I\\{linear\_eq}, 653.
\I\.{linearform}, 906.
\I\\{link}, 168, 170, 173, \[174], 178, 179, 184, 239, 240, 251, 254, 256, 262,
263, 265, 271, 274, 280, \[290], 293, 294, 295, 296, 297, 458, 469, 475, 477,
493, 624, 696, \[747], 748, 751, 758, 761, 782, 805, \[821], 825, 829, 835, 903.
\I\\{list}, \[821], 825, 831, 834, 835, 836, 838.
\I\\{list\_}, \[482], 484, 486.
\I\\{list\_start}, \[821], 825, 831, 836.
\I\\{list\_tag}, \[1163], 1181, 1183.
\I\\{ljoin}, \[458], 460, \[462], 464, 499, \[580], 582, \[1028], 1270.
\I\\{lk\_offset}, 1218, 1220, 1221, 1222, \[1287].
\I\\{lk\_started}, \[1167], 1184, 1189, 1220, 1221, 1222.
\I\\{ll}, \[1043], \[1045], \[1167], 1187, 1188, 1222.
\I\9{ll_corner_}{\&{llcorner} primitive}, 955.
\I\\{lll}, \[1167], 1187, 1188.
\I\\{loc}, \[69], 126, 673, 677, 678, 701, 705, 712, 714, 715, 716, 717, 729,
732, 779, 856, 860, 880, 882, 895, 1066, 1067, 1284, 1299.
\I\\{loc\_field}, 69, \[673], 677.
\I\.{local label l:: was missing}, 1222.
\I\\{localtime}, 204.
\I\\{log\_file}, 7, \[77], 82, 103, 875, 1287.
\I\\{log\_name}, \[865], 875, 876, 1287.
\I\\{log\_only}, \[77], 85, 86, 91, 103, 140, 732, 875, 1076, 1239.
\I\\{log\_opened}, 131, 132, 135, 137, 768, \[865], 867, 875, 877, 880, 891,
1032, 1284, 1287, 1292.
\I\\{log\_out}, \[1054], 1060, 1064, 1067.
\I\\{long\_help\_seen}, \[1150], 1151, 1152.
\I\\{long\_name}, \[50], 52, 102.
\I\\{long\_name\_field}, 50, \[673].
\I\\{longjmp}, 96, 112.
\I\.{loop confusion}, 776.
\I\.{loop value=n}, 833.
\I\\{loop\_defining}, \[719], 725, 727, 829.
\I\\{loop\_list}, 821.
\I\\{loop\_ptr}, 774, 775, 776, 821, \[822], 823, 829, 831, 832, 834, 835,
1284, 1295.
\I\\{loop\_text}, \[684], 695, 776, 831.
\I\\{loop\_type}, 821.
\I\.{Lost loop}, 774.
\I\9{lr_corner_}{\&{lrcorner} primitive}, 955.
\I\\{lt}, \[355], \[362], \[363], \[371], \[374].
\I\\{luatexdir}, 1054.
\I\|{m}, \[651], \[670], \[671], \[672], \[698], \[761], \[825], \[875], %
\[974], \[1084], \[1134], \[1146], \[1171], \[1172], \[1196], \[1200], \[1201],
\[1203].
\I\\{m\_exp}, 15, \[456], 959.
\I\9{m_exp_}{\&{mexp} primitive}, 955.
\I\\{m\_exp\_func}, 15.
\I\\{m\_log}, 15, 158, \[456], 959.
\I\9{m_log_}{\&{mlog} primitive}, 955.
\I\\{m\_log\_func}, 15.
\I\\{mac\_name}, \[944], \[946], \[947].
\I\\{macro}, \[684], 695, 702, 705, 803.
\I\\{macro\_at}, \[753], 754.
\I\\{macro\_call}, 782.
\I\\{macro\_def}, 747.
\I\\{macro\_name}, \[783], \[784], 785, 791, 792, 801, 803.
\I\\{macro\_prefix}, \[753], 754.
\I\\{macro\_ref}, \[936].
\I\\{macro\_special}, 753.
\I\\{macro\_suffix}, \[753], 754, 761.
\I\\{macro\_sym}, 235.
\I\\{magenta}, \[458], 502, 973, 1125, 1270.
\I\\{magenta\_part}, \[273], 275, 281, 913, 922, 931, 940, 961, 965, 969, 982,
988, 990, 994, 996, 1041, 1125.
\I\\{magenta\_part\_}, \[273].
\I\9{magenta_part_}{\&{magentapart} primitive}, 955.
\I\\{main}, 66.
\I\\{main\_control}, 1051, 1298.
\I\\{make\_choices}, 328, 335, 338, 339.
\I\\{make\_cp\_a\_colored\_object}, \[1125].
\I\\{make\_eq}, 1037, 1040.
\I\\{make\_fraction}, 15, 158, 343, 354, 355, 356, 357, 362, 363, 365, 372,
374, 397, 452, \[456], 529, 562, 590, 591, 597, 598, 600, 601, 655, 923, 994.
\I\\{make\_fraction\_func}, 15.
\I\\{make\_name\_string}, 881.
\I\9{make_path_}{\&{makepath} primitive}, 955.
\I\\{make\_pen}, 415, 417, 433.
\I\9{make_pen_}{\&{makepen} primitive}, 955.
\I\\{make\_scaled}, 15, \[456], 489, 641, 655, 923, 931, 988, 997, 1027, 1209,
1210.
\I\\{make\_scaled\_func}, 15.
\I\\{make\_string}, 1286.
\I\9{makepen_}{\&{makepen} primitive}, 414.
\I\\{malloc}, 9, 11, 16, 53, 166, 171, 219, 221, 376, 1051, 1060, 1067, 1068.
\I\\{malloc\_node}, \[169], 178, 239, 254, 263, 268, 271, 274, 460, 464, 471,
475, 481, 484, 493, 806.
\I{Marple, Jane}, 1152.
\I\\{math}, \[14], 16, 141, 145, 148, 407, 455, 456, 590, 636, 641, 1043, 1204.
\I\&{math\_data}, \[15], 141, 145, 148, 407, 455, 456, 590, 636, 641, 1043,
1204.
\I\\{math\_mode}, 16, 162, \[163], 164, 179, 240, 316, 327.
\I\\{max}, \[600], 601, \[1039].
\I\\{max\_buf\_stack}, \[60], 64, 717, 779, 1066, 1292.
\I\\{max\_c}, 923, 925, \[926], 927, 928.
\I\\{max\_class}, \[210].
\I\\{max\_coef}, \[544], 559.
\I\\{max\_given\_internal}, \[194], 196, 199.
\I\\{max\_halfword}, 63, \[159], 1097.
\I\\{max\_ht}, 580, 591, \[592], 593.
\I\\{max\_in\_open}, \[25], 28, 679, 681, 683, 684, 712, 1292.
\I\\{max\_in\_stack}, \[674], 703, 717, 1066, 1292, 1294.
\I\\{max\_integer}, 280, 621, 1223, \[1247].
\I\\{max\_internal}, \[194], 196, 1097, 1098, 1292.
\I\\{max\_link}, 923, \[926].
\I\\{max\_num\_knot\_nodes}, \[166], 327.
\I\\{max\_num\_pair\_nodes}, \[166], 265.
\I\\{max\_num\_symbolic\_nodes}, \[166], 179.
\I\\{max\_num\_token\_nodes}, \[166], 240.
\I\\{max\_num\_value\_nodes}, \[166], 179.
\I\\{max\_param\_stack}, \[685], 717, 803, 804, 1066, 1292, 1294.
\I\\{max\_patience}, \[610], 613.
\I\\{max\_pl\_used}, \[76], 1292.
\I\\{max\_pre\_command}, 185.
\I\\{max\_primary\_command}, 185, 931, 1034.
\I\\{max\_print\_line}, \[26], 28, 86, 90, 880, 1114, 1258, 1260, 1284.
\I\\{max\_ptr}, 923, \[926].
\I\\{max\_quarterword}, \[159].
\I\\{max\_read\_files}, 892, \[893], 894, 985, 1290.
\I\\{max\_secondary\_command}, 185.
\I\\{max\_size\_test}, \[171].
\I\\{max\_spec\_src}, \[678], 690, 692, 694, 713, 732, 739.
\I\\{max\_statement\_command}, 185, 1032.
\I\.{MAX\_STR\_REF}, 987, 1226.
\I\\{max\_strs\_used}, \[76], 1292.
\I\\{max\_t}, \[610], 611, 612, 613.
\I\\{max\_tfm\_dimen}, 1209, 1210, \[1211], 1212, 1213.
\I\\{max\_tfm\_int}, \[1167], 1169, 1183, 1184, 1189, 1192.
\I\\{max\_write\_files}, 83, 87, 892, \[893], 894, 1156, 1290.
\I\\{maxabs}, \[467].
\I\\{maxx}, 383, 453, \[482], 483, 484, 486, 490, 526, 530, 539, 540, 541, 984,
1013, 1014, 1015, 1270, 1271.
\I\\{maxx\_val}, 482.
\I\\{maxy}, 383, 453, \[482], 483, 484, 486, 490, 526, 530, 539, 540, 541, 984,
1014, 1015, 1270, 1271.
\I\\{maxy\_val}, 482.
\I\\{mem}, 235, 243, 624, 636, 854.
\I\\{mem\_file}, 857, \[1282], 1284.
\I\\{mem\_name}, \[853], 854, 855, 857, 867.
\I\\{memcpy}, 63, 64, 66, 88, 316, 493, 848, 1060, 1097, 1191, 1251.
\I\.{Memory usage...}, 1110.
\I\\{memset}, 9, 11, 196, 224, 313, 778, 779, 824, 839, 894, 900, 931, 936,
938, 948, 951, 952, 953, 959, 968, 973, 974, 982, 983, 985, 988, 992, 998,
1005, 1028, 1031, 1032, 1041, 1051, 1075, 1097, 1102, 1125, 1132, 1134, 1136,
1138, 1146, 1154, 1170, 1178, 1183, 1191, 1228.
\I\9{message_}{\&{message} primitive}, 1143.
\I\\{message\_code}, \[1143], 1146.
\I\9{METAFONTbook}{\sl The {\logos METAFONT\/}book}, 1, 211, 933.
\I\.{MetaPost capacity exceeded ...}, 135.
\I\9{MetaPost capacity exceeded parameter stack size}{\quad parameter stack
size}, 803.
\I\\{metapost\_version}, \[2], 957, 1069.
\I\\{metric\_file\_name}, \[1158], 1217.
\I\\{mid}, 1165.
\I\\{min}, \[1039].
\I\\{min\_command}, 185, 765.
\I\\{min\_cover}, 1196, 1200.
\I\\{min\_primary\_command}, 185, 931, 1032.
\I\\{min\_secondary\_command}, 185.
\I\\{min\_tension}, \[948].
\I\\{minus}, 991.
\I\9{minute_}{\&{minute} primitive}, 200.
\I\\{minx}, 383, 453, \[482], 483, 484, 486, 490, 526, 530, 539, 540, 541, 984,
1013, 1014, 1015, 1270, 1271.
\I\\{minx\_val}, 482.
\I\\{miny}, 383, 453, \[482], 483, 484, 486, 490, 526, 530, 539, 540, 541, 984,
1014, 1015, 1270, 1271.
\I\\{miny\_val}, 482.
\I\.{Missing `)'}, 793, 802, 1089.
\I\.{Missing `)'...}, 791.
\I\.{Missing `,'}, 793.
\I\.{Missing `:'}, 816, 820, 827, 1183.
\I\.{Missing `:='}, 1075.
\I\.{Missing `;'}, 775.
\I\.{Missing `='}, 757, 826, 1094.
\I\.{Missing `\char`\#'}, 1190.
\I\.{Missing `of'}, 801.
\I\.{Missing `until'}, 837.
\I\.{Missing argument...}, 792.
\I\.{Missing character}, 1239.
\I\.{Missing symbolic token...}, 755.
\I\\{missing\_extensible\_punctuation}, \[1190].
\I\\{miterlim}, \[458], 460, 461, \[462], 464, 465, 494, 499, \[580], 583, %
\[1028], 1270.
\I{mock curvature}, 336.
\I\\{mod}, 698.
\I\\{mode}, \[52].
\I\\{modulo}, 15, 456.
\I\\{months}, \[875], 878.
\I\\{more\_name}, 841.
\I\\{move\_knot}, 438.
\I\\{move\_to\_next\_line}, 729, \[731], \[732].
\I\\{mp}, \[5], \[6], \[7], \[11], \[12], \[13], \[15], \[16], 17, \[18], %
\[19], \[20], 27, 28, 30, 36, \[44], \[45], \[46], 49, 50, 51, \[52], \[53], %
\[54], \[55], \[56], \[57], \[58], \[59], 61, 62, \[63], \[64], 66, 67, \[69], %
\[70], 74, 75, 79, 80, 81, 82, \[83], \[84], \[85], \[86], \[87], \[88], \[89],
90, \[91], \[92], \[93], \[94], \[95], \[96], 100, \[101], \[102], 103, \[107],
\[108], 110, \[112], \[113], \[114], \[115], \[116], 117, \[121], \[122], 123,
124, 125, 126, 127, 128, 129, 130, \[131], \[132], \[133], \[134], \[135], %
\[136], \[137], 138, 139, \[140], 141, 143, \[144], 145, \[147], 148, 152, 153,
\[154], \[155], \[156], \[157], \[158], 164, \[165], 167, 168, 169, \[170], %
\[171], 175, \[176], \[177], \[178], \[179], \[180], 182, 183, \[184], \[187], %
\[188], \[191], 193, 196, \[197], \[198], 199, 200, 202, \[204], \[205], %
\[206], \[207], \[209], 211, \[213], \[214], \[219], \[220], 221, 222, \[223], %
\[224], 226, 227, \[228], \[229], \[230], \[231], 232, 233, 235, \[236], %
\[237], \[238], \[239], \[240], \[241], \[242], \[243], \[244], \[245], \[246],
\[247], \[249], \[250], 251, \[252], \[253], \[254], \[255], \[256], \[257],
258, 259, \[260], \[261], \[263], \[264], \[265], \[266], \[268], \[269], %
\[271], \[272], \[274], \[275], \[277], \[278], \[279], \[280], \[281], \[282],
\[283], \[284], \[285], \[286], \[287], \[288], \[289], 292, \[293], \[294], %
\[295], \[296], \[302], \[303], 304, 305, 306, 307, 308, 309, \[310], \[311], %
\[312], \[313], \[314], \[315], \[316], \[317], \[318], \[319], \[320], \[321],
\[323], \[324], \[326], \[327], \[328], \[329], 330, 339, 341, 343, 346, %
\[347], \[348], \[349], \[350], 351, 353, 354, 356, 357, \[358], \[359], 360,
361, 362, 363, \[364], \[365], 366, 368, 369, \[370], \[371], 372, 373, 374, %
\[375], \[376], \[377], \[378], \[379], \[382], 384, 385, 386, \[387], 388,
389, 391, 392, \[393], \[396], 397, 401, 403, \[404], \[405], 407, \[408], %
\[409], \[410], 412, 413, \[415], \[416], \[418], \[419], 420, 421, \[422], %
\[423], \[424], 426, 429, 431, 432, \[433], \[434], 437, \[439], \[440], 441,
442, 443, \[446], 448, 449, 450, \[453], 454, 455, 456, \[460], \[461], \[464],
\[465], \[467], \[468], \[471], \[472], \[475], \[476], 479, 480, \[481], %
\[483], \[484], \[485], \[486], \[487], 488, \[489], 490, \[491], \[492], 494, %
\[495], \[496], \[497], 498, 499, 500, \[501], \[502], 503, 504, \[505], %
\[506], 507, 508, 509, \[510], 511, \[512], \[513], 514, 515, 516, 517, 518,
519, 520, 522, 524, 525, \[526], \[527], 529, 530, \[532], \[533], 534, 535,
536, 537, 538, 539, 540, \[544], 546, 550, \[551], \[552], \[553], \[554], 555,
\[556], \[557], \[560], \[561], 563, 566, \[567], \[568], 569, 570, 571, 574, %
\[577], 578, 579, \[580], 581, 582, \[587], \[588], 590, 591, 595, 598, \[600],
605, 606, 607, 608, 611, 612, \[613], 615, 616, 617, 618, \[619], \[621], %
\[622], \[624], \[625], \[626], \[627], 628, 629, \[631], \[632], \[633], 635, %
\[636], \[637], \[638], \[639], \[640], \[641], \[642], \[643], \[644], \[645],
\[646], \[647], \[648], \[649], \[650], \[651], \[652], \[653], \[654], \[655],
\[656], \[657], \[658], \[660], \[661], \[662], \[663], \[664], \[665], \[666],
667, 668, 669, \[670], \[671], \[672], 675, 676, 677, 679, \[680], \[681], 682,
683, 684, 686, \[687], 688, \[689], \[690], \[692], 693, 694, 695, 696, 697,
699, 700, 701, 702, 703, 704, \[705], \[706], \[707], \[708], \[709], \[710], %
\[711], \[712], \[713], \[714], \[715], \[716], 717, 720, \[721], 722, 723,
724, 725, \[726], \[727], \[728], \[729], \[731], \[732], \[733], 735, 736,
737, \[738], \[739], 740, 741, 742, 743, 744, 745, 746, \[748], 753, 754, %
\[755], \[756], \[757], \[758], 759, 760, \[761], 763, 764, \[765], 767, %
\[768], \[769], 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, \[780], %
\[781], \[783], \[784], 785, \[786], \[787], \[788], \[789], 791, 792, 793,
794, 795, \[796], \[797], 800, 801, 802, 803, \[804], \[806], 808, 809, 810, %
\[811], 813, 814, \[815], \[816], \[817], 818, 819, 820, 823, \[824], \[825],
826, 827, 828, 829, 830, \[831], 832, 833, 834, \[835], 836, 837, 838, 839,
842, 843, \[845], \[846], \[847], \[848], \[849], 850, \[851], \[852], 854,
855, \[856], \[857], \[859], \[860], \[861], \[862], \[863], \[864], 867, 868,
869, \[870], \[871], \[872], \[873], 874, \[875], 876, 877, 878, \[879], %
\[880], 881, 882, 883, \[884], \[886], \[889], \[890], 891, 894, \[895], %
\[896], \[897], 898, 900, 901, \[903], \[904], \[905], \[906], \[907], 908,
909, 910, 911, 912, 913, 914, \[915], 916, \[917], \[918], \[920], \[921], %
\[922], 923, \[924], \[925], 927, 928, 930, \[931], \[932], \[933], \[934],
936, \[937], \[938], \[939], \[940], \[941], \[942], \[943], \[944], \[945], %
\[946], \[947], \[948], \[949], \[950], \[951], \[952], \[953], \[954], 955,
956, \[957], \[958], \[959], \[960], \[961], \[962], \[963], \[964], \[965], %
\[966], \[967], \[968], \[969], 970, 971, \[972], \[973], \[974], \[975], %
\[976], \[977], \[978], \[979], \[980], \[981], \[982], \[983], \[984], \[985],
987, \[988], \[989], \[990], \[991], \[992], \[993], \[994], 995, \[996], %
\[997], \[998], 1000, 1001, 1002, 1004, \[1005], \[1006], \[1007], \[1008], %
\[1009], 1010, 1011, 1012, 1013, 1015, 1016, 1017, 1018, \[1019], 1020, %
\[1021], 1022, \[1023], \[1024], 1025, \[1026], \[1027], \[1028], \[1029], %
\[1030], \[1031], \[1032], \[1034], \[1035], \[1036], \[1037], \[1038], %
\[1039], \[1040], \[1041], \[1042], \[1043], \[1044], \[1045], 1046, 1047, %
\[1048], \[1049], \[1050], \[1051], \[1052], \[1053], \[1059], \[1060], 1061, %
\[1062], \[1063], 1064, 1065, 1066, \[1067], \[1068], \[1070], 1071, 1072, %
\[1074], \[1075], 1076, 1078, 1079, 1081, 1082, \[1083], \[1084], \[1086], %
\[1087], \[1088], \[1089], \[1091], \[1092], \[1093], \[1094], \[1095], %
\[1096], \[1097], 1098, 1099, 1100, \[1101], \[1102], \[1103], \[1104], 1105,
1106, \[1107], \[1108], \[1109], \[1110], \[1111], \[1112], 1113, 1114, %
\[1115], \[1116], \[1117], \[1118], \[1119], \[1120], 1122, 1123, \[1124], %
\[1125], \[1126], \[1127], 1128, 1129, \[1131], \[1132], \[1133], \[1134], %
\[1135], \[1136], \[1137], \[1138], 1139, 1142, 1143, 1144, \[1145], \[1146],
1147, \[1148], 1149, 1151, 1152, \[1153], \[1154], 1155, 1156, 1157, 1164,
1165, 1168, 1169, 1170, \[1171], \[1172], 1173, 1175, 1176, \[1177], \[1178], %
\[1179], \[1180], 1181, \[1182], \[1183], 1184, 1185, 1186, 1187, 1188, 1189,
1190, 1191, 1192, 1193, 1194, \[1195], \[1196], 1198, 1199, \[1200], \[1201],
1202, \[1203], 1204, 1206, 1207, 1208, \[1209], \[1210], 1212, 1213, \[1214],
1215, \[1216], 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1228, 1229, %
\[1230], \[1231], 1232, 1233, \[1234], \[1235], \[1236], \[1237], \[1238], %
\[1239], \[1240], \[1241], 1242, \[1244], \[1245], 1246, 1248, \[1250], %
\[1251], \[1253], \[1254], 1256, 1257, 1258, 1259, 1260, \[1261], \[1262], %
\[1264], \[1265], 1266, 1268, \[1269], \[1270], \[1271], \[1272], \[1273], %
\[1274], \[1275], 1280, 1281, \[1283], \[1284], \[1287], \[1288], 1289, 1290,
1291, 1292, \[1293], \[1294], \[1295], \[1296], \[1297], 1298, 1299.
\I\&{MP}, \[3], 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 42, 44, 45, 46, 52,
53, 54, 55, 56, 57, 58, 59, 63, 64, 69, 70, 83, 84, 85, 86, 87, 88, 89, 91, 92,
93, 94, 95, 96, 101, 102, 107, 108, 112, 113, 114, 115, 116, 118, 121, 122,
131, 132, 133, 134, 135, 136, 137, 140, 144, 147, 154, 155, 156, 157, 158, 165,
170, 171, 176, 177, 178, 179, 180, 184, 187, 188, 191, 197, 198, 204, 205, 206,
207, 209, 213, 214, 219, 220, 223, 224, 228, 229, 230, 231, 236, 237, 238, 239,
240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257,
260, 261, 263, 264, 265, 266, 268, 269, 271, 272, 274, 275, 277, 278, 279, 280,
281, 282, 283, 284, 285, 286, 287, 288, 289, 293, 294, 295, 296, 302, 303, 310,
311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 326, 327, 328,
329, 347, 348, 349, 350, 358, 359, 364, 365, 370, 371, 375, 376, 377, 378, 379,
382, 387, 393, 396, 404, 405, 408, 409, 410, 415, 416, 418, 419, 422, 423, 424,
433, 434, 439, 440, 446, 453, 460, 461, 464, 465, 467, 468, 471, 472, 475, 476,
481, 483, 484, 485, 486, 487, 489, 491, 492, 495, 496, 497, 501, 502, 505, 506,
510, 512, 513, 526, 527, 532, 533, 544, 551, 552, 553, 554, 556, 557, 560, 561,
567, 568, 577, 580, 587, 588, 600, 613, 619, 621, 622, 624, 625, 626, 627, 631,
632, 633, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666,
670, 671, 672, 680, 681, 687, 689, 690, 692, 705, 706, 707, 708, 709, 710, 711,
712, 713, 714, 715, 716, 721, 726, 727, 728, 729, 731, 732, 733, 738, 739, 748,
755, 756, 757, 758, 761, 765, 768, 769, 780, 781, 783, 784, 786, 787, 788, 789,
796, 797, 804, 806, 811, 815, 816, 817, 824, 825, 831, 835, 845, 846, 847, 848,
849, 851, 852, 856, 857, 859, 860, 861, 862, 863, 864, 870, 871, 872, 873, 875,
879, 880, 884, 886, 889, 890, 895, 896, 897, 903, 904, 905, 906, 907, 915, 917,
918, 920, 921, 922, 924, 925, 931, 932, 933, 934, 937, 938, 939, 940, 941, 942,
943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 957, 958, 959, 960,
961, 962, 963, 964, 965, 966, 967, 968, 969, 972, 973, 974, 975, 976, 977, 978,
979, 980, 981, 982, 983, 984, 985, 988, 989, 990, 991, 992, 993, 994, 996, 997,
998, 1005, 1006, 1007, 1008, 1009, 1019, 1021, 1023, 1024, 1026, 1027, 1028,
1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1059, 1060, 1062, 1063,
1067, 1068, 1070, 1074, 1075, 1083, 1084, 1086, 1087, 1088, 1089, 1091, 1092,
1093, 1094, 1095, 1096, 1097, 1101, 1102, 1103, 1104, 1107, 1108, 1109, 1110,
1111, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1124, 1125, 1126, 1127, 1131,
1132, 1133, 1134, 1135, 1136, 1137, 1138, 1145, 1146, 1148, 1153, 1154, 1171,
1172, 1177, 1178, 1179, 1180, 1182, 1183, 1195, 1196, 1200, 1201, 1203, 1209,
1210, 1214, 1216, 1230, 1231, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
1244, 1245, 1250, 1251, 1253, 1254, 1261, 1262, 1264, 1265, 1269, 1270, 1271,
1272, 1273, 1274, 1275, 1276, 1283, 1284, 1287, 1288, 1293, 1294, 1295, 1296,
1297.
\I\\{mp\_}, 11.
\I\\{mp\_add\_mult\_dep}, \[1023], 1024.
\I\\{mp\_add\_or\_subtract}, 988, \[991].
\I\\{mp\_add\_to\_command}, 185, 232, 233, 1032.
\I\\{mp\_adjust\_bbox}, \[526], 534, 535, 537, 538, 539.
\I\\{mp\_ampersand}, 185, 947, 948, 955, 956.
\I\\{mp\_an\_angle}, \[977], 979, 980.
\I\\{mp\_and\_command}, 185, 948, 955, 956.
\I\\{mp\_and\_op}, 190, 191, 955, 988.
\I\\{mp\_angle}, \[455], 980.
\I\\{mp\_angle\_op}, 190, 191, 955, 959.
\I\\{mp\_angle\_type}, 15, 455.
\I\\{mp\_append\_data}, \[1060].
\I\\{mp\_append\_knot}, \[375], \[377].
\I\\{mp\_append\_string}, \[1060].
\I\\{mp\_append\_to\_template}, \[1251].
\I\\{mp\_arc\_length}, 190, 191, 955, 959.
\I\\{mp\_arc\_test}, \[396], 397, 408.
\I\\{mp\_arc\_time\_of}, 190, 191, 955, 988.
\I\\{mp\_ASCII\_op}, 190, 191, 955, 959, 974.
\I\\{mp\_assignment}, 185, 232, 233, 757, 800, 826, 931, 947, 1032, 1037, 1039,
1075, 1094.
\I\\{mp\_at\_least}, 185, 232, 233, 948.
\I\\{mp\_attr}, 189, 256, 257, 280, 282, 283.
\I\\{mp\_attr\_node\_type}, 186, 188, 256, 257.
\I\\{mp\_back\_error}, 330, 511, 513, 516, 665, \[710], \[711], 757, 761, 775,
778, 792, 793, 801, 802, 816, 824, 826, 827, 837, 839, 931, 932, 936, 943, 948,
951, 952, 953, 963, 974, 988, 989, 998, 1005, 1032, 1034, 1035, 1039, 1041,
1043, 1049, 1050, 1075, 1089, 1092, 1094, 1120, 1125, 1127, 1132, 1134, 1136,
1139, 1148, 1152, 1154, 1172, 1178, 1181, 1183, 1184, 1189, 1190, 1192, 1246,
1266.
\I\\{mp\_back\_expr}, 932, 936, \[937].
\I\\{mp\_back\_input}, 17, \[708], \[709], 711, 713, 777, 778, 800, 820, 931,
932, 933, 936, 944, 946, 947, 948, 1045, 1066, 1092, 1097, 1184.
\I\\{mp\_backend\_writer}, 1276, 1277.
\I\\{mp\_bad\_binary}, 988, \[989].
\I\\{mp\_bad\_color\_part}, 959, \[967], \[968].
\I\\{mp\_bad\_envelope\_pen}, \[989], 1028.
\I\\{mp\_bad\_exp}, 931, \[933], 944, 946, 947.
\I\\{mp\_bad\_for}, \[824], 837.
\I\\{mp\_bad\_subscript}, 936, \[938], 943.
\I\\{mp\_bad\_unary}, 959, \[963], 965.
\I\\{mp\_batch\_mode}, 98, 100, 103, 125, 130, 131, 877, 1078, 1079.
\I\9{mp_batch_mode_}{\&{batchmode} primitive}, 1078.
\I\&{mp\_bb\_code}, \[383].
\I\\{mp\_bchar\_label}, 185, 232, 233, 1184.
\I\\{mp\_begin\_diagnostic}, \[206], \[207], 209, 294, 295, 646, 656, 672, 785,
794, 801, 819, 833, 923, 959, 980, 988, 995, 1037, 1039, 1239.
\I\\{mp\_begin\_file\_reading}, \[107], 126, \[712], 779, 880, 884, 895, 957,
985.
\I\\{mp\_begin\_group}, 185, 232, 233, 799, 931.
\I\\{mp\_begin\_iteration}, \[765], 769, \[825].
\I\\{mp\_begin\_mpx\_reading}, \[714], 739.
\I\\{mp\_begin\_name}, \[845], \[846], 860, 862, 864, 874.
\I\\{mp\_begin\_token\_list}, \[705], 729, 803, 831.
\I\\{mp\_bezier\_slope}, \[978], \[979], 980.
\I\\{mp\_big\_trans}, 988, \[1019].
\I\\{mp\_bilin1}, 1020, \[1021].
\I\\{mp\_bilin2}, 1022, \[1024].
\I\\{mp\_bilin3}, 1025, \[1026].
\I\\{mp\_binary\_mac}, 944, \[945], 946, 947.
\I\\{mp\_binary\_type}, 15.
\I\\{mp\_binfile\_reader}, 42, 43.
\I\\{mp\_binfile\_writer}, 42, 43.
\I\\{mp\_black\_part}, 190, 191, 955, 959, 968, 969, 973, 988.
\I\\{mp\_black\_part\_sector}, 189, 275, 280, 281.
\I\\{mp\_blue\_part}, 190, 191, 955, 959, 969, 973, 988.
\I\\{mp\_blue\_part\_sector}, 189, 190, 270, 272, 280, 281.
\I\\{mp\_boolean\_type}, 186, 188, 243, 288, 663, 902, 903, 905, 908, 922, 940,
953, 957, 959, 982, 988, 1041, 1046, 1125.
\I\\{mp\_bound\_cubic}, \[387], 393.
\I\\{mp\_boundary\_char}, 192, 200, 203, 1170, 1220.
\I\9{mp_boundary_char_}{\&{boundarychar} primitive}, 200.
\I\\{mp\_bounded\_op}, 190, 191, 955, 959.
\I\\{mp\_bounds\_command}, 185, 1032, 1128, 1129.
\I\\{mp\_bounds\_object}, 1270.
\I\\{mp\_box\_ends}, \[527], 537.
\I\\{mp\_capsule}, 189, 245, 277, 280, 281, 660, 903, 916, 931, 940, 941, 970,
983, 991.
\I\\{mp\_capsule\_token}, 185, 707, 729, 931, 1105.
\I\\{mp\_cat}, 988.
\I\\{mp\_change\_if\_limit}, \[815], 817.
\I\\{mp\_char\_code}, 192, 200, 203, 1138, 1251, 1270, 1273.
\I\9{mp_char_code_}{\&{charcode} primitive}, 200.
\I\\{mp\_char\_dp}, 192, 200, 203, 1173, 1206, 1270.
\I\9{mp_char_dp_}{\&{chardp} primitive}, 200.
\I\\{mp\_char\_exists\_op}, 190, 191, 955, 959.
\I\\{mp\_char\_ext}, 192, 200, 203.
\I\9{mp_char_ext_}{\&{charext} primitive}, 200.
\I\\{mp\_char\_ht}, 192, 200, 203, 1173, 1206, 1270.
\I\9{mp_char_ht_}{\&{charht} primitive}, 200.
\I\\{mp\_char\_ic}, 192, 200, 203, 1173, 1206, 1270.
\I\9{mp_char_ic_}{\&{charic} primitive}, 200.
\I\\{mp\_char\_op}, 190, 191, 955, 959.
\I\\{mp\_char\_wd}, 192, 200, 203, 1173, 1204, 1270.
\I\9{mp_char_wd_}{\&{charwd} primitive}, 200.
\I\\{mp\_check\_colon}, \[816], 817.
\I\\{mp\_check\_delimiter}, 761, 931, \[1088], \[1089].
\I\\{mp\_check\_equals}, \[757], 758, 761.
\I\\{mp\_check\_outer\_validity}, \[721], 729, 732.
\I\\{mp\_check\_param\_size}, \[687], 761, 803, 804.
\I\\{mp\_chop\_path}, 988, \[1027].
\I\\{mp\_chop\_string}, 988.
\I\\{mp\_clear\_arith}, \[144].
\I\\{mp\_clear\_for\_error\_prompt}, \[107], 117, \[716].
\I\\{mp\_clear\_symbol}, \[289], 294, 756, 1045, 1094.
\I\\{mp\_clip\_object}, 1270.
\I\\{mp\_clipped\_op}, 190, 191, 955, 959.
\I\\{mp\_close\_file}, \[45], \[57].
\I\\{mp\_close\_files\_and\_terminate}, 112, 123, 1051, 1067, 1068, \[1287], %
\[1288].
\I\\{mp\_close\_from\_op}, 190, 191, 955, 959, 985.
\I\\{mp\_close\_path}, \[375], \[377].
\I\\{mp\_close\_path\_cycle}, \[375], \[377].
\I\\{mp\_cmyk\_model}, 201, 502, 959, 968, 1122, 1123, 1125, 1270.
\I\&{mp\_cmykcolor\_node}, \[273], 274.
\I\&{mp\_cmykcolor\_node\_data}, \[273], 274.
\I\\{mp\_cmykcolor\_node\_type}, 186, 188, 274.
\I\\{mp\_cmykcolor\_type}, 186, 188, 243, 275, 288, 902, 903, 905, 908, 920,
922, 940, 959, 961, 962, 965, 982, 988, 990, 994, 996, 1041, 1046, 1125.
\I\\{mp\_colon}, 185, 232, 233, 816, 827, 836, 1183, 1184, 1188, 1190.
\I\&{mp\_color\_model}, \[201], \[458], 460, 502, 959, 968, 973, 1125, 1270,
1271.
\I\\{mp\_color\_model\_part}, 190, 191, 955, 959, 973.
\I\&{mp\_color\_node}, \[270], 271.
\I\&{mp\_color\_node\_data}, \[270], 271.
\I\\{mp\_color\_node\_type}, 186, 188, 271.
\I\\{mp\_color\_type}, 186, 188, 243, 272, 288, 902, 903, 905, 908, 920, 922,
931, 940, 959, 961, 962, 965, 982, 988, 990, 994, 996, 1041, 1046, 1125.
\I\\{mp\_comma}, 185, 232, 233, 761, 791, 792, 793, 836, 931, 932, 952, 1032,
1049, 1050, 1084, 1097, 1102, 1108, 1116, 1184, 1190, 1191, 1192.
\I\\{mp\_command\_code}, 185, 748, 758, 931.
\I\\{mp\_concatenate}, 190, 191, 955, 988.
\I\\{mp\_conditional}, \[765], 769, \[817].
\I\\{mp\_confusion}, 63, \[136], \[137], 243, 280, 282, 295, 405, 490, 506,
520, 530, 532, 535, 536, 598, 632, 713, 714, 715, 815, 908, 922, 940, 973, 1097.
\I\\{mp\_const\_dependency}, \[650], 651, 1021, 1024, 1043.
\I\\{mp\_controls}, 185, 232, 233, 948.
\I\\{mp\_convex\_hull}, 415, \[433], \[434], 988.
\I\\{mp\_copy\_dep\_list}, \[652], 940, 942, 996.
\I\\{mp\_copy\_knot}, \[316], 318, 948, 1027.
\I\\{mp\_copy\_objects}, 487, \[491], \[492], 834.
\I\\{mp\_copy\_path}, \[318], 415, 494, 663, 940, 973, 1017, 1028, 1270.
\I\\{mp\_cos\_d\_op}, 190, 191, 955, 959.
\I\\{mp\_create\_knot}, \[375], \[377].
\I\\{mp\_cubic\_intersection}, \[613], 619.
\I\\{mp\_cur\_tok}, \[707], 709, 748, 777, 797, 936.
\I\\{mp\_curl}, 299, 300, 304, 305, 309, 331, 344, 350, 351, 356, 375, 948, 952.
\I\\{mp\_curl\_command}, 185, 232, 233, 952.
\I\\{mp\_curl\_ratio}, 362, 363, \[364], \[365].
\I\\{mp\_cyan\_part}, 190, 191, 955, 959, 969, 973, 988.
\I\\{mp\_cyan\_part\_sector}, 189, 275, 280, 281.
\I\\{mp\_cycle}, 185, 931, 948, 955, 956.
\I\\{mp\_cycle\_op}, 190, 191, 955, 959.
\I\&{mp\_dash\_node}, 179, 181, 477, \[478], 481, 486, 487, 488, 489, 490, 504,
505, 506, 510, 514, 517, 518, 520, 521, 522, 523, 525, 1009, 1011, 1012.
\I\&{mp\_dash\_node\_data}, \[477], 478, 481.
\I\\{mp\_dash\_node\_type}, 179, 186, 188, 481.
\I\\{mp\_dash\_object}, \[489].
\I\\{mp\_dash\_offset}, 489, 504, \[505], \[506], 522.
\I\\{mp\_dash\_p}, \[462], 464, 465, 489, 494, 503, 504, 514, 520, 973, 1017,
1125.
\I\\{mp\_dash\_part}, 190, 191, 955, 959, 973.
\I\\{mp\_day}, 150, 192, 200, 203, 204, 878, 1066, 1251, 1299.
\I\9{mp_day_}{\&{day} primitive}, 200.
\I\\{mp\_dealloc\_strings}, 75.
\I\\{mp\_decimal}, 190, 191, 955, 959.
\I\\{mp\_decimal\_type}, 15.
\I\\{mp\_def\_delims}, 1032, \[1086], \[1087].
\I\\{mp\_default\_color\_model}, 192, 200, 202, 203, 959, 973, 1270.
\I\9{mp_default_color_model_}{\&{defaultcolormodel} primitive}, 200.
\I\\{mp\_defined\_macro}, 185, 289, 761, 769, 781, 1094, 1104, 1106.
\I\\{mp\_delete\_mac\_ref}, \[249], 289, 706, 922.
\I\\{mp\_delimiters}, 185, 232, 233, 1032.
\I\\{mp\_dep\_div}, 988, \[997].
\I\\{mp\_dep\_finish}, 991, \[992], 993, 997.
\I\\{mp\_dep\_mult}, 988, \[993], 994, 996, 1021.
\I\\{mp\_dep\_node\_type}, 186, 188, 626.
\I\\{mp\_dependent}, 186, 188, 243, 288, 621, 624, 632, 637, 638, 639, 641,
642, 655, 656, 658, 902, 903, 905, 907, 908, 920, 922, 923, 925, 934, 940, 942,
965, 991, 993, 997, 1021, 1041, 1043, 1118.
\I\\{mp\_design\_size}, 192, 200, 203, 1209, 1210.
\I\9{mp_design_size_}{\&{designsize} primitive}, 200.
\I\\{mp\_dimen\_out}, \[1210], 1215, 1219, 1222, 1223.
\I\\{mp\_direction\_time\_of}, 190, 191, 955, 988.
\I\\{mp\_disp\_err}, 778, 824, 839, \[917], \[918], 931, 938, 948, 951, 952,
953, 963, 968, 974, 988, 989, 998, 1005, 1032, 1039, 1041, 1075, 1125, 1132,
1134, 1136, 1139, 1148, 1178, 1183, 1189, 1192, 1246, 1266.
\I\\{mp\_disp\_token}, \[1103], \[1104], 1108, 1116.
\I\\{mp\_disp\_var}, \[1111], \[1112], 1113, 1116.
\I\\{mp\_do\_add\_to}, 1032, \[1135], \[1136].
\I\\{mp\_do\_arc\_test}, \[408], 409, 410.
\I\\{mp\_do\_assignment}, 1032, 1037, \[1038], \[1039].
\I\\{mp\_do\_binary}, 931, 932, 944, 946, 947, \[988].
\I\\{mp\_do\_bounds}, 1032, \[1133], \[1134].
\I\\{mp\_do\_edges\_trans}, 988, \[1009].
\I\\{mp\_do\_equation}, 1032, \[1036], \[1037], 1039.
\I\\{mp\_do\_id\_lookup}, \[228].
\I\\{mp\_do\_infont}, 988, \[1031].
\I\\{mp\_do\_initialize}, \[13], 16.
\I\\{mp\_do\_interim}, 1032, \[1091], \[1092].
\I\\{mp\_do\_let}, 1032, \[1093], \[1094].
\I\\{mp\_do\_mapfile}, 1032, \[1244], \[1245].
\I\\{mp\_do\_mapline}, 1032, \[1244], \[1245].
\I\\{mp\_do\_message}, 1032, \[1145], \[1146].
\I\\{mp\_do\_new}, \[11], 16.
\I\\{mp\_do\_new\_internal}, 1032, \[1095], \[1097].
\I\\{mp\_do\_nullary}, 931, \[957].
\I\\{mp\_do\_open\_file}, \[52].
\I\\{mp\_do\_path\_trans}, \[1007], 1016.
\I\\{mp\_do\_pen\_trans}, \[1008], 1017.
\I\\{mp\_do\_print}, \[88], 89.
\I\\{mp\_do\_protection}, 1032, \[1083], \[1084].
\I\\{mp\_do\_random\_seed}, 1032, \[1074], \[1075].
\I\\{mp\_do\_read\_or\_close}, 959, \[985].
\I\\{mp\_do\_ship\_out}, 1032, \[1137], \[1138].
\I\\{mp\_do\_show}, \[1101], \[1102], 1120.
\I\\{mp\_do\_show\_dependencies}, \[1117], \[1118], 1120.
\I\\{mp\_do\_show\_stats}, \[1109], \[1110], 1120.
\I\\{mp\_do\_show\_token}, \[1107], \[1108], 1120.
\I\\{mp\_do\_show\_var}, \[1115], \[1116], 1120.
\I\\{mp\_do\_show\_whatever}, 1032, \[1119], \[1120].
\I\\{mp\_do\_snprintf}, \[165].
\I\\{mp\_do\_special}, 1032, \[1264], \[1265].
\I\\{mp\_do\_statement}, 931, \[1032], 1051, 1067, \[1091], 1092, 1284.
\I\\{mp\_do\_tfm\_command}, 1032, \[1182], \[1183].
\I\\{mp\_do\_type\_declaration}, 1032, \[1048], \[1049].
\I\\{mp\_do\_unary}, 931, \[959].
\I\\{mp\_do\_write}, 1032, \[1153], \[1154].
\I\\{mp\_double\_colon}, 185, 232, 233, 1184.
\I\\{mp\_double\_dot}, 190.
\I\\{mp\_double\_type}, 15.
\I\&{mp\_edge\_header\_node}, \[465], \[482], 483, 484, 485, 486, 487, 491,
492, 510, 520, 521, 526, 527, 532, 533, 834, 839, 957, 972, 973, 984, 1009,
1029, 1031, 1060, 1125, 1126, 1127, 1134, 1136, 1270, 1271, 1272, 1275.
\I\&{mp\_edge\_header\_node\_data}, \[482], 484.
\I\\{mp\_edge\_header\_node\_type}, 186, 188, 484, 487.
\I\\{mp\_edge\_object}, 1029, 1054, 1060, 1270, 1271, 1272, 1275.
\I\\{mp\_edges\_trans}, \[1009].
\I\\{mp\_editor\_cmd}, 118, 119.
\I\\{mp\_encapsulate}, 940, \[941].
\I\\{mp\_end\_cycle}, 299, 332, 343, 344, 350, 353.
\I\\{mp\_end\_diagnostic}, \[206], \[207], 294, 295, 311, 423, 497, 577, 646,
656, 672, 785, 794, 801, 819, 833, 923, 959, 980, 988, 995, 1037, 1039, 1239.
\I\\{mp\_end\_file\_reading}, \[713], 716, 732, 776, 880, 884, 895, 958, 985,
1284, 1295.
\I\\{mp\_end\_group}, 185, 232, 233, 799, 931, 1032, 1051.
\I\\{mp\_end\_mpx\_reading}, \[715], 739.
\I\\{mp\_end\_name}, \[845], \[848], 860, 862, 864, 874.
\I\\{mp\_end\_of\_statement}, \[185], 799, 1035, 1049.
\I\\{mp\_end\_token\_list}, \[706], 709, 729, 774, 776, 803, 883, 1284, 1295.
\I\\{mp\_endpoint}, 299, 303, 304, 333, 375, 393, 409, 410, 412, 514, 527, 531,
537, 595, 600, 619, 620, 948, 949, 959, 973, 975, 1007, 1027, 1030, 1134, 1136,
1270.
\I\\{mp\_envelope\_of}, 190, 191, 955, 988.
\I\\{mp\_eof\_file}, \[45], \[58].
\I\\{mp\_equal\_to}, 190, 191, 955, 988.
\I\\{mp\_equals}, 185, 757, 800, 826, 947, 955, 956, 1032, 1037, 1039, 1094.
\I\\{mp\_error}, \[115], \[116], 132, 135, 137, 140, 144, 644, 711, 715, 729,
732, 741, 742, 743, 744, 761, 768, 770, 774, 775, 791, 820, 883, 891, 917, 931,
938, 968, 980, 1029, 1039, 1051, 1089, 1120, 1187.
\I\\{mp\_error\_message\_issued}, 104, 115, 137.
\I\\{mp\_error\_stop\_mode}, 98, 100, 102, 115, 132, 135, 137, 140, 768, 891,
918, 1078, 1120, 1152, 1295.
\I\9{mp_error_stop_mode_}{\&{errorstopmode} primitive}, 1078.
\I\\{mp\_etex\_marker}, 185, 735, 736, 740.
\I\\{mp\_eval\_cubic}, \[382], 391, 392.
\I\\{mp\_every\_job\_command}, 185, 232, 233, 1032.
\I\\{mp\_execute}, 1054, 1055, 1059, \[1067], \[1070].
\I\\{mp\_exit\_test}, 185, 232, 233, 769.
\I\\{mp\_expand}, \[769], 777, 781.
\I\\{mp\_expand\_after}, 185, 232, 233, 769.
\I\\{mp\_expansion\_depth\_error}, \[768].
\I\\{mp\_explicit}, 299, 300, 304, 307, 308, 331, 333, 344, 371, 374, 375, 424,
429, 552, 585, 588, 596, 620, 948.
\I\\{mp\_export\_dashes}, \[489], 1270.
\I\\{mp\_export\_knot}, \[317], 319.
\I\\{mp\_export\_knot\_list}, \[323], 1270.
\I\\{mp\_export\_path}, \[319], 323.
\I\\{mp\_expr\_macro}, 248, 250, 761, 800.
\I\\{mp\_expr\_param}, 248, 759, 760, 761.
\I\\{mp\_expr\_sym}, 189, 245, 729, 758, 761, 791, 793, 825, 836.
\I\\{mp\_expression\_binary}, 185, 955, 956.
\I\\{mp\_expression\_tertiary\_macro}, 185, 289, 745, 947, 1094, 1106.
\I\\{mp\_false\_code}, 190, 191, 953, 955, 957, 959, 982, 988, 1125.
\I\\{mp\_fatal\_error}, 96, \[132], \[133], 621, 732, 776, 873, 957, 1184,
1189, 1190, 1192.
\I\\{mp\_fatal\_error\_stop}, 16, 104, 115, 132, 135, 137, 171, 768, 854, 891,
1051, 1066, 1067, 1068, 1298.
\I\\{mp\_fi\_or\_else}, 185, 769, 809, 810, 811, 1284, 1295.
\I\\{mp\_file\_closer}, 42, 43.
\I\\{mp\_file\_eoftest}, 42, 43.
\I\&{mp\_file\_finder}, \[42], 43.
\I\\{mp\_file\_flush}, 42, 43.
\I\&{mp\_file\_opener}, \[42], 43.
\I\&{mp\_file\_reader}, \[42], 43.
\I\\{mp\_file\_writer}, 42, 43.
\I\&{mp\_filetype}, \[42].
\I\\{mp\_filetype\_bitmap}, 42, 1060.
\I\\{mp\_filetype\_encoding}, 42.
\I\\{mp\_filetype\_error}, 42, 46, 66, 1060.
\I\\{mp\_filetype\_font}, 42.
\I\\{mp\_filetype\_fontmap}, 42.
\I\\{mp\_filetype\_log}, 42, 875, 1060.
\I\\{mp\_filetype\_memfile}, 42.
\I\\{mp\_filetype\_metrics}, 42, 1217.
\I\\{mp\_filetype\_postscript}, 42, 1060, 1251.
\I\\{mp\_filetype\_program}, 42, 52, 857, 879, 884.
\I\\{mp\_filetype\_terminal}, 42, 46, 66, 1060.
\I\\{mp\_filetype\_text}, 42, 895, 897.
\I\\{mp\_fill\_code}, 459, 1271.
\I\&{mp\_fill\_node}, \[458], 460, 461, 486, 494, 498, 534, 973, 1016, 1125,
1270, 1271.
\I\&{mp\_fill\_node\_data}, \[458], 460.
\I\\{mp\_fill\_node\_type}, 186, 188, 460, 486, 493, 494, 498, 534, 959, 973,
1016, 1125, 1270.
\I\\{mp\_fill\_object}, 1270, 1271.
\I\\{mp\_filled\_op}, 190, 191, 955, 959.
\I\\{mp\_fin\_offset\_prep}, \[560], \[561], 570, 571.
\I\\{mp\_final\_cleanup}, 1051, 1067, 1068, \[1295], \[1296].
\I\\{mp\_final\_graphic}, 457.
\I\\{mp\_find\_direction\_time}, \[600], 1028.
\I\\{mp\_find\_edges\_var}, \[1126], \[1127], 1134, 1136.
\I\\{mp\_find\_file}, \[44], \[45].
\I\\{mp\_find\_font}, 471, 959, 1029, \[1234], \[1235].
\I\\{mp\_find\_offset}, \[446], 454, 529, 530, 1028.
\I\\{mp\_find\_point}, 988, \[1030].
\I\\{mp\_find\_variable}, \[283], 761, 936, 1039, 1049, 1127.
\I\\{mp\_finish}, \[1068], \[1070].
\I\\{mp\_finish\_binary}, \[988].
\I\\{mp\_finish\_read}, 957, \[958], 985.
\I\\{mp\_firm\_up\_the\_line}, \[728], 732, \[733], 882, 1067, 1284.
\I\\{mp\_fix\_check\_sum}, \[1214], 1291.
\I\\{mp\_fix\_date\_and\_time}, 16, \[204], \[205], 1066, 1299.
\I\\{mp\_fix\_dependencies}, \[647], \[648], 653, 923, 992, 1021, 1023.
\I\\{mp\_fix\_design\_size}, \[1209], 1291.
\I\\{mp\_floor}, \[978].
\I\\{mp\_floor\_op}, 190, 191, 955, 959.
\I\\{mp\_flush\_below\_variable}, 285, \[286], \[287], 289.
\I\\{mp\_flush\_cur\_exp}, \[284], 778, 779, 824, 839, \[920], 931, 936, 938,
948, 951, 952, 953, 959, 968, 973, 974, 982, 983, 985, 988, 992, 998, 1005,
1028, 1031, 1032, 1051, 1075, 1102, 1125, 1132, 1134, 1136, 1138, 1139, 1146,
1154, 1178, 1189, 1192.
\I\\{mp\_flush\_dash\_list}, \[485], \[486], 519, 1010, 1136.
\I\\{mp\_flush\_file}, \[45], \[59].
\I\\{mp\_flush\_node\_list}, \[184], 761, 803, 922, 923, 936, 1039, 1043, 1049,
1127.
\I\\{mp\_flush\_string}, 881.
\I\\{mp\_flush\_token\_list}, \[243], 249, 280, 706, 761, 835, 931, 1268.
\I\\{mp\_flush\_variable}, \[285], 761, 1049.
\I\\{mp\_font\_n}, \[469], 471, 507, 973, 1241, 1270.
\I\\{mp\_font\_part}, 190, 191, 955, 959, 973.
\I\\{mp\_font\_size}, 190, 191, 955, 959.
\I\\{mp\_fontmaking}, 192, 200, 203, 1291.
\I\9{mp_fontmaking_}{\&{fontmaking} primitive}, 200.
\I\\{mp\_fputs}, 16, 69, \[82], 85, 86, 171.
\I\\{mp\_frac\_mult}, 931, \[994].
\I\\{mp\_fraction}, 446, \[455], 527, 580.
\I\\{mp\_fraction\_type}, 15, 455.
\I\\{mp\_free}, \[12], 1068.
\I\\{mp\_free\_attr\_node}, \[257], 259.
\I\\{mp\_free\_dep\_node}, \[626], \[627], 629, 637, 638, 639, 641, 642, 646,
648, 655, 657, 658, 923, 934, 940, 942, 1043.
\I\\{mp\_free\_fill\_node}, \[461], 486.
\I\\{mp\_free\_func}, 15.
\I\\{mp\_free\_knot}, 168, \[326], \[327].
\I\\{mp\_free\_node}, 168, \[179], \[180], 461, 465, 472, 476, 480, 486, 518,
522, 814, 922.
\I\\{mp\_free\_pair\_node}, \[264], \[265], 922.
\I\\{mp\_free\_path}, \[376], \[377].
\I\\{mp\_free\_start\_bounds\_node}, \[476], 486.
\I\\{mp\_free\_start\_clip\_node}, \[476], 486.
\I\\{mp\_free\_stop\_bounds\_node}, \[476], 486.
\I\\{mp\_free\_stop\_clip\_node}, \[476], 486.
\I\\{mp\_free\_stream}, \[1055], \[1056], 1060, 1064.
\I\\{mp\_free\_stroked\_node}, 465, 486.
\I\\{mp\_free\_symbolic\_node}, \[179], \[180], 183, 184, 243, 669, 831, 835,
936, 943.
\I\\{mp\_free\_text\_node}, \[472], 486.
\I\\{mp\_free\_token\_node}, 184, \[240], \[241], 243, 486.
\I\\{mp\_free\_value\_node}, \[179], \[180], 257, 285, 287, 289, 626, 646, 658,
706, 764, 835, 905, 920, 922, 931, 934, 965, 969, 971, 988, 994, 998, 1022,
1031, 1041, 1043, 1173, 1194, 1208, 1229.
\I\\{mp\_frozen\_id\_lookup}, \[228], 230, 231.
\I\\{mp\_frozen\_primitive}, 227, \[230], 232, 735, 745, 809, 830, 955, 1071.
\I\\{mp\_general\_macro}, 248, 250, 758, 761, 791.
\I\\{mp\_get\_arc\_length}, \[409], 959.
\I\\{mp\_get\_arc\_time}, \[410], 412, 988.
\I\\{mp\_get\_attr\_node}, \[257], 258, 282, 283.
\I\\{mp\_get\_boolean}, 775, 817, \[953].
\I\\{mp\_get\_char\_dimension}, \[1236], \[1237].
\I\\{mp\_get\_clear\_symbol}, \[756], 758, 761, 1087, 1097.
\I\\{mp\_get\_cmykcolor\_node}, \[274], 275.
\I\\{mp\_get\_code}, \[1177], \[1178], 1183, 1184, 1187, 1189, 1190, 1191.
\I\\{mp\_get\_color\_node}, \[271], 272.
\I\\{mp\_get\_cur\_bbox}, 959, \[984].
\I\\{mp\_get\_dash\_node}, 479, \[481], 488, 514, 525.
\I\\{mp\_get\_dep\_node}, \[626], 628, 637, 638, 648, 650, 651, 652, 991.
\I\\{mp\_get\_edge\_header\_node}, \[484], 492, 839, 957, 973, 1029, 1031, 1271.
\I\\{mp\_get\_if\_node}, \[806], 813.
\I\\{mp\_get\_next}, \[107], 127, \[729], 737, 739, 740.
\I\\{mp\_get\_output\_file\_name}, \[1250], \[1251], 1270.
\I\\{mp\_get\_pair\_node}, \[263], 266.
\I\\{mp\_get\_pen\_circle}, \[416], 957, 973, 1136.
\I\\{mp\_get\_pen\_scale}, \[467], 489, 1270.
\I\\{mp\_get\_subscr\_node}, \[261], 282, 283.
\I\\{mp\_get\_symbol}, \[755], 756, 758, 761, 825, 1032, 1045, 1084, 1094.
\I\\{mp\_get\_symbolic\_node}, \[178], 182, 280, 668, 707, 723, 748, 758, 761,
794, 801, 829, 836, 931, 936, 943, 945, 1045.
\I\\{mp\_get\_token\_node}, \[239], 242, 484, 707.
\I\\{mp\_get\_transform\_node}, \[268], 269.
\I\\{mp\_get\_turn\_amt}, 566, \[567], \[568], 574.
\I\\{mp\_get\_value\_node}, \[254], \[255], 257, 261, 266, 269, 272, 275, 277,
278, 282, 626, 660, 763, 903, 931, 940, 941, 970, 983, 1172, 1193, 1195, 1207.
\I\\{mp\_get\_x\_next}, 330, 511, 513, 516, 665, 758, 761, 778, \[780], \[781],
792, 795, 800, 801, 802, 817, 824, 825, 836, 837, 838, 839, 931, 932, 933, 936,
943, 944, 946, 947, 948, 951, 952, 953, 963, 974, 988, 989, 998, 1005, 1032,
1034, 1037, 1039, 1041, 1043, 1045, 1049, 1050, 1075, 1084, 1087, 1092, 1094,
1097, 1102, 1108, 1110, 1116, 1118, 1120, 1125, 1127, 1132, 1134, 1136, 1138,
1139, 1146, 1148, 1152, 1154, 1172, 1178, 1181, 1183, 1184, 1189, 1192, 1245,
1246, 1265, 1266.
\I\\{mp\_given}, 299, 300, 304, 305, 333, 344, 350, 351, 375, 948, 952.
\I\&{mp\_given\_internal}, \[192].
\I\\{mp\_glyph\_infont}, 190, 191, 955, 988.
\I\\{mp\_gr\_export}, 1060, \[1270], \[1272], 1275.
\I\\{mp\_gr\_import}, 1029, \[1271], \[1272].
\I\&{mp\_gr\_knot}, \[298], 314, 315, 317, 319, 320, 321, 323.
\I\&{mp\_gr\_knot\_data}, \[298], 315.
\I\\{mp\_gr\_new\_knot}, \[314], \[315], 317.
\I\\{mp\_gr\_next\_knot}, \[298], 317, 319, 321.
\I\\{mp\_gr\_ship\_out}, 1275.
\I\\{mp\_gr\_toss\_objects}, 1271, 1275.
\I\\{mp\_graphic\_object}, 1268, 1270, 1271.
\I\&{mp\_graphical\_object\_code}, \[457].
\I\\{mp\_greater\_or\_equal}, 190, 191, 955, 988.
\I\\{mp\_greater\_than}, 190, 191, 955, 988.
\I\\{mp\_green\_part}, 190, 191, 955, 959, 969, 973, 988.
\I\\{mp\_green\_part\_sector}, 189, 270, 272, 280, 281.
\I\\{mp\_grey\_model}, 201, 502, 959, 968, 1122, 1123, 1125, 1271.
\I\\{mp\_grey\_part}, 190, 191, 955, 959, 973.
\I\\{mp\_grey\_part\_sector}, 189, 280, 281.
\I\\{mp\_grow\_internals}, \[1096], \[1097].
\I\\{mp\_gtroffmode}, 17, 192, 194, 200, 203, 1066.
\I\\{mp\_hard\_times}, 988, \[996].
\I\\{mp\_has\_font\_size}, \[1261], \[1262].
\I\\{mp\_hash\_usage}, \[1293], \[1294].
\I\\{mp\_hex\_op}, 190, 191, 955, 959.
\I\&{mp\_history\_state}, \[104].
\I\\{mp\_hour}, 192, 200, 203, 204, 878, 1251.
\I\\{mp\_hppp}, 192, 200, 202, 203.
\I\9{mp_hppp_}{\&{hppp} primitive}, 200.
\I\\{mp\_htap\_ypoc}, \[324], 412, 595, 959, 1027, 1270.
\I\\{mp\_id\_lookup}, \[228], 229, 729, 1052, 1251.
\I\\{mp\_id\_transform}, \[277], 998.
\I\&{mp\_if\_node}, \[805], 806.
\I\&{mp\_if\_node\_data}, \[805], 806.
\I\\{mp\_if\_node\_type}, 186, 188, 806.
\I\\{mp\_if\_test}, 185, 769, 809, 810.
\I\\{mp\_import\_knot}, \[320], 321.
\I\\{mp\_import\_knot\_list}, \[323], 1271.
\I\\{mp\_import\_path}, \[321], 323.
\I\\{mp\_in\_font}, 190, 191, 955, 988.
\I\\{mp\_independent}, 186, 188, 243, 245, 266, 288, 621, 632, 637, 638, 648,
658, 903, 905, 907, 908, 909, 920, 922, 923, 934, 940, 942, 959, 965, 988, 990,
994, 1041, 1043.
\I\&{mp\_independent\_data}, \[161].
\I\\{mp\_info}, 543, 544, 560, 569, 782.
\I\\{mp\_init\_bbox}, \[483], 484, 532, 834, 1013, 1134.
\I\\{mp\_init\_cmykcolor\_node}, \[275], 931, 940.
\I\\{mp\_init\_color\_node}, \[272], 931, 940.
\I\\{mp\_init\_edges}, \[484], 839, 957, 973, 1029, 1031, 1271.
\I\\{mp\_init\_map\_file}, 17, 1066.
\I\\{mp\_init\_pair\_node}, \[266], 931, 940, 983.
\I\\{mp\_init\_prim}, 16, \[1296], \[1297].
\I\\{mp\_init\_tab}, 16, \[1296], \[1297].
\I\\{mp\_init\_terminal}, \[69], \[70], 717.
\I\\{mp\_init\_transform\_node}, \[269], 277, 940.
\I\\{mp\_initialize}, \[8], \[16], \[18], 111.
\I\\{mp\_initialize\_binary\_math}, 16.
\I\\{mp\_initialize\_decimal\_math}, 16.
\I\\{mp\_initialize\_double\_math}, 16.
\I\\{mp\_initialize\_scaled\_math}, 16.
\I\\{mp\_initialize\_strings}, 74.
\I\\{mp\_input}, 185, 769, 771, 772.
\I\\{mp\_input\_ln}, \[64], 69, 96, 732, 882, 895, 985, 1067, 1284.
\I\\{mp\_ins\_error}, \[711], 721, 722, 724, 755, 820, 933.
\I\\{mp\_insert\_knot}, 580, \[587], \[588], 590, 591, 1270.
\I\\{mp\_install}, 940, \[942], 1002, 1004.
\I\&{MP\_instance}, 3, \[4], 11.
\I\&{mp\_interaction\_mode}, \[98].
\I\\{mp\_interesting}, \[281], 646, 656, 923, 1118.
\I\\{mp\_interim\_command}, 185, 232, 233, 1032.
\I\\{mp\_intern}, 16, 202, 957.
\I\&{mp\_internal}, \[192], 194, 196, 290, 295, 1097.
\I\\{mp\_internal\_quantity}, 185, 200, 931, 943, 1045, 1052, 1092, 1097, 1106,
1251.
\I\\{mp\_internal\_sym}, 189, 290, 295, 296, 931, 1039.
\I\\{mp\_intersect}, 190, 191, 955, 988.
\I\\{mp\_is\_frozen}, \[231], 755.
\I\\{mp\_iteration}, 185, 745, 746, 769, 829.
\I\\{mp\_job\_name}, 192, 196, 200, 203, 865, 868, 1251.
\I\9{mp_job_name_}{\&{jobname} primitive}, 200.
\I\\{mp\_jump\_out}, \[112], \[113], 115, 123, 132, 135, 137, 171, 717, 768,
854, 891.
\I\\{mp\_kern\_flag}, 190, 1185.
\I\&{mp\_knot}, 161, 166, 168, 236, \[237], \[238], 294, \[297], 302, 303, 310,
311, 312, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329,
342, 349, 350, 370, 371, 375, 376, 377, 378, 379, 382, 387, 393, 409, 410, 415,
416, 418, 419, 422, 423, 424, 433, 434, 439, 440, 446, 453, 458, 460, 462, 464,
467, 473, 475, 510, 527, 544, 545, 548, 551, 552, 553, 554, 556, 557, 560, 561,
567, 568, 577, 580, 587, 588, 592, 600, 613, 619, 948, 949, 959, 975, 980, 981,
1007, 1008, 1027, 1028, 1030, 1270.
\I\&{mp\_knot\_data}, \[297], 313, 316.
\I\\{mp\_knot\_info}, \[297], 317, 320, 550, 553, 555, 563, 566, 569, 570, 571,
577, 578, 580.
\I\\{mp\_knot\_left\_curl}, \[379].
\I\\{mp\_knot\_left\_given}, \[379].
\I\\{mp\_knot\_left\_tension}, \[379].
\I\\{mp\_knot\_left\_type}, \[378], \[379].
\I\\{mp\_knot\_left\_x}, \[378], \[379].
\I\\{mp\_knot\_left\_y}, \[378], \[379].
\I\\{mp\_knot\_next}, \[378], \[379].
\I\&{mp\_knot\_originator}, \[301].
\I\\{mp\_knot\_right\_curl}, \[379].
\I\\{mp\_knot\_right\_given}, \[379].
\I\\{mp\_knot\_right\_tension}, \[379].
\I\\{mp\_knot\_right\_type}, \[378], \[379].
\I\\{mp\_knot\_right\_x}, \[378], \[379].
\I\\{mp\_knot\_right\_y}, \[378], \[379].
\I\&{mp\_knot\_type}, \[299].
\I\\{mp\_knot\_x\_coord}, \[378], \[379].
\I\\{mp\_knot\_y\_coord}, \[378], \[379].
\I\\{mp\_known}, 186, 188, 196, 224, 242, 243, 245, 277, 288, 295, 621, 646,
658, 707, 729, 792, 831, 837, 902, 905, 907, 908, 909, 920, 922, 931, 932, 934,
936, 940, 942, 943, 948, 951, 952, 957, 959, 960, 961, 962, 965, 982, 983, 988,
991, 992, 993, 994, 997, 998, 1002, 1004, 1005, 1019, 1021, 1022, 1023, 1024,
1029, 1039, 1041, 1043, 1052, 1075, 1097, 1125, 1178, 1183, 1189, 1192, 1251.
\I\\{mp\_known\_op}, 190, 191, 955, 959, 982.
\I\\{mp\_known\_pair}, 948, 949, \[950], \[951], 952.
\I\\{mp\_left\_brace}, 185, 232, 233, 948.
\I\\{mp\_left\_bracket}, 185, 232, 233, 932, 936, 943, 1045.
\I\\{mp\_left\_bracket\_class}, \[210], 211, 245.
\I\\{mp\_left\_delimiter}, 185, 761, 792, 798, 802, 931, 1087, 1094, 1106.
\I\\{mp\_left\_type}, \[297], 299, 300, 303, 304, 305, 307, 308, 309, 317, 320,
324, 328, 331, 332, 333, 334, 343, 344, 350, 351, 353, 371, 374, 375, 378, 412,
414, 424, 429, 537, 552, 585, 588, 595, 596, 948, 949, 959, 973, 975, 1007,
1008, 1027, 1030, 1134, 1136, 1270.
\I\\{mp\_left\_y}, 948.
\I\\{mp\_length\_op}, 190, 191, 955, 959.
\I\\{mp\_less\_or\_equal}, 190, 191, 955, 988.
\I\\{mp\_less\_than}, 190, 191, 955, 988.
\I\\{mp\_let\_command}, 185, 232, 233, 1032.
\I\\{mp\_lig\_kern\_token}, 185, 1184, 1185, 1186.
\I\\{mp\_linear\_eq}, \[653], 1043.
\I\\{mp\_linecap}, 192, 200, 203, 464, 1028.
\I\9{mp_linecap_}{\&{linecap} primitive}, 200.
\I\\{mp\_linejoin}, 192, 200, 203, 460, 464, 1028.
\I\9{mp_linejoin_}{\&{linejoin} primitive}, 200.
\I\\{mp\_link}, \[173], 235, 243, 245, 250, 256, 266, 269, 272, 275, 280, 281,
282, 283, 285, 287, 333, 484, 486, 487, 488, 489, 490, 492, 493, 495, 497, 504,
510, 517, 518, 520, 521, 522, 523, 525, 532, 536, 589, 613, 624, 632, 633, 637,
638, 639, 641, 642, 646, 648, 649, 652, 653, 654, 655, 657, 696, 697, 706, 707,
727, 729, 748, 758, 761, 782, 784, 785, 787, 789, 790, 791, 793, 794, 797, 801,
803, 813, 814, 815, 831, 833, 834, 835, 836, 838, 903, 915, 922, 923, 936, 937,
939, 943, 945, 959, 964, 968, 969, 973, 976, 991, 1009, 1011, 1012, 1021, 1031,
1043, 1045, 1049, 1106, 1113, 1118, 1125, 1134, 1136, 1195, 1196, 1201, 1202,
1204, 1206, 1219, 1265, 1268, 1270, 1271, 1284, 1295.
\I\\{mp\_link\_knotpair}, \[375].
\I\\{mp\_ll\_corner\_op}, 190, 191, 955, 959.
\I\\{mp\_load\_preload\_file}, 1066, \[1283], \[1284], 1298.
\I\&{mp\_loop\_data}, \[821], 822, 825, 835.
\I\\{mp\_lost\_warning}, \[1238], \[1239], 1242.
\I\\{mp\_lr\_corner\_op}, 190, 191, 955, 959.
\I\&{mp\_lstring}, \[72], 224.
\I\\{mp\_m\_exp\_op}, 190, 191, 955, 959.
\I\\{mp\_m\_log\_op}, 190, 191, 955, 959.
\I\\{mp\_macro\_call}, 769, 781, \[783], \[784], 936, 945.
\I\\{mp\_macro\_def}, 185, 745, 746, 758, 761, 1032, 1106.
\I\&{mp\_macro\_info}, \[248].
\I\\{mp\_macro\_special}, 185, 748, 753, 754, 761.
\I\\{mp\_macro\_sym}, 189, 250, 758, 761.
\I\\{mp\_magenta\_part}, 190, 191, 955, 959, 969, 973, 988.
\I\\{mp\_magenta\_part\_sector}, 189, 275, 280, 281.
\I\\{mp\_main\_control}, \[1051].
\I\\{mp\_make\_choices}, \[328], \[329], 376, 948.
\I\\{mp\_make\_dashes}, \[510], 1125.
\I\\{mp\_make\_envelope}, \[580], 1028, 1270.
\I\\{mp\_make\_eq}, 1037, 1039, \[1040], \[1041].
\I\\{mp\_make\_exp\_copy}, 707, 931, 932, 936, \[940], 965, 969, 988, 994,
1020, 1022, 1025, 1039.
\I\\{mp\_make\_known}, \[645], \[646], 648, 653, 923.
\I\\{mp\_make\_name\_string}, \[859], 880, 884.
\I\\{mp\_make\_op\_def}, \[758], 1032.
\I\\{mp\_make\_path}, \[424], 959.
\I\\{mp\_make\_path\_op}, 190, 191, 955, 959.
\I\\{mp\_make\_pen}, \[415], 959, 1017.
\I\\{mp\_make\_pen\_op}, 190, 191, 955, 959.
\I\\{mp\_make\_string}, 725, 729, 791, 792, 801, 859, 931, 933, 939, 958, 959,
963, 968, 989, 1034, 1125, 1127, 1251, 1284.
\I\\{mp\_makempx\_cmd}, 886, 887.
\I\\{mp\_map\_file}, 1245.
\I\\{mp\_map\_line}, 1245.
\I\\{mp\_math\_binary\_mode}, 16, 162.
\I\\{mp\_math\_decimal\_mode}, 16, 162.
\I\\{mp\_math\_double\_mode}, 162, 179, 240, 316, 327.
\I\&{mp\_math\_mode}, \[162].
\I\\{mp\_math\_scaled\_mode}, 16, 162.
\I\\{mp\_max\_coef}, \[633], 991, 993, 997.
\I\\{mp\_max\_command\_code}, \[185].
\I\\{mp\_max\_expression\_command}, \[185], 947.
\I\\{mp\_max\_pre\_command}, \[185], 737, 739.
\I\\{mp\_max\_primary\_command}, \[185], 944, 946, 947, 1032.
\I\\{mp\_max\_secondary\_command}, \[185], 944.
\I\\{mp\_max\_statement\_command}, \[185], 1032.
\I\\{mp\_max\_suffix\_token}, \[185], 936.
\I\\{mp\_max\_tertiary\_command}, \[185], 946.
\I\\{mp\_maxx}, \[384], 393, 453, 454, 526, 534, 537, 538, 539, 959, 984.
\I\\{mp\_maxy}, \[384], 393, 453, 454, 526, 534, 537, 538, 539, 959, 984.
\I\\{mp\_memory\_usage}, \[1293], \[1294].
\I\\{mp\_message\_command}, 185, 1032, 1143, 1144.
\I\\{mp\_metapost\_user}, 301, 949, 973.
\I\\{mp\_metapost\_version}, \[1069], \[1070].
\I\\{mp\_min\_command}, \[185], 777, 781.
\I\\{mp\_min\_cover}, \[1196], 1200.
\I\\{mp\_min\_expression\_command}, \[185], 947, 948.
\I\\{mp\_min\_of}, \[190], 989.
\I\\{mp\_min\_primary\_command}, \[185], 931, 944, 946, 947.
\I\\{mp\_min\_secondary\_command}, \[185], 944.
\I\\{mp\_min\_suffix\_token}, \[185], 936.
\I\\{mp\_min\_tertiary\_command}, \[185], 946.
\I\\{mp\_minus}, 190, 191, 932, 955, 959, 965, 988, 991.
\I\\{mp\_minute}, 192, 200, 203, 204, 878, 1251.
\I\\{mp\_minx}, \[384], 393, 453, 454, 526, 534, 537, 538, 539, 959, 984.
\I\\{mp\_miny}, \[384], 393, 453, 454, 526, 534, 537, 538, 539, 959, 984.
\I\\{mp\_miterlimit}, 192, 200, 203, 460, 464, 1028.
\I\9{mp_miterlimit_}{\&{miterlimit} primitive}, 200.
\I\\{mp\_mode\_command}, 185, 1032, 1078, 1079.
\I\\{mp\_month}, 192, 200, 203, 204, 878, 1251.
\I\9{mp_month_}{\&{month} primitive}, 200.
\I\\{mp\_more\_name}, \[845], \[847], 860, 862, 864, 874.
\I\\{mp\_move\_knot}, 437, \[439], \[440], 441, 442, 443.
\I\\{mp\_mpx\_break}, 185, 735, 736, 739.
\I\\{mp\_name\_type}, \[173], 245, 250, 256, 266, 269, 272, 275, 277, 278, 280,
281, 282, 283, 285, 287, 289, 294, 660, 707, 723, 729, 748, 758, 761, 763, 791,
792, 793, 794, 795, 813, 814, 836, 903, 916, 931, 940, 941, 943, 970, 983, 991,
1039, 1045, 1113, 1284, 1295.
\I\&{mp\_name\_type\_type}, 174, \[189], 281, 747.
\I\\{mp\_nan\_type}, 15.
\I\\{mp\_negate\_dep\_list}, \[964], 965, 991, 1004.
\I\\{mp\_new}, 111.
\I\\{mp\_new\_bounds\_node}, \[475], 1134.
\I\\{mp\_new\_dep}, \[649], 658, 934, 941, 942, 996, 1021, 1024.
\I\\{mp\_new\_fill\_node}, \[460], 1136, 1271.
\I\\{mp\_new\_graphic\_object}, 1268, 1270.
\I\\{mp\_new\_indep}, 266, 269, 272, 275, \[621], \[622], 923, 940.
\I\\{mp\_new\_internal}, 185, 232, 233, 1032.
\I\\{mp\_new\_knot}, \[312], \[313], 320, 324, 375, 416, 426, 552, 588, 949,
973.
\I\\{mp\_new\_num\_tok}, \[242], 280, 943.
\I\\{mp\_new\_randoms}, \[154], \[155], 156.
\I\\{mp\_new\_ring\_entry}, \[660], 940.
\I\\{mp\_new\_root}, \[278], 283, 1045.
\I\\{mp\_new\_stroked\_node}, \[464], 1136.
\I\\{mp\_new\_structure}, \[282], 283.
\I\\{mp\_new\_text\_node}, \[471], 1031.
\I\\{mp\_next\_knot}, \[297], 303, 316, 318, 319, 320, 321, 324, 327, 331, 332,
333, 343, 350, 366, 393, 409, 410, 415, 416, 420, 424, 426, 434, 435, 436, 437,
440, 441, 442, 443, 444, 445, 446, 453, 514, 527, 528, 531, 544, 547, 548, 549,
552, 554, 557, 561, 563, 568, 569, 570, 571, 577, 580, 586, 588, 589, 594, 595,
598, 600, 617, 619, 948, 949, 959, 973, 975, 980, 981, 1007, 1008, 1027, 1030,
1270.
\I\\{mp\_next\_random}, \[156], 157, 158.
\I\\{mp\_nice\_color\_or\_pair}, \[961], 962, 988.
\I\\{mp\_nice\_pair}, 959, \[960], 988.
\I\\{mp\_no\_model}, 201, 968, 1122, 1123, 1125.
\I\\{mp\_no\_string\_err}, 1146, \[1148], 1154.
\I\&{mp\_node}, \[161], 166, 168, 170, 173, 176, 177, 178, 179, 180, 181, 184,
212, 213, 214, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
249, 250, 251, 252, 253, 254, 255, 256, 258, 262, 263, 264, 265, 266, 267, 268,
269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 285, 286,
287, 288, 289, 294, 460, 461, 462, 464, 465, 471, 472, 475, 476, 477, 480, 482,
485, 486, 488, 490, 491, 492, 495, 496, 497, 501, 502, 510, 517, 518, 520, 521,
522, 525, 532, 621, 622, 624, 625, 626, 628, 632, 637, 638, 639, 641, 642, 646,
648, 649, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 664, 667, 673,
685, 686, 687, 696, 697, 705, 706, 707, 709, 719, 721, 748, 758, 761, 776, 777,
781, 783, 784, 785, 786, 787, 788, 789, 794, 797, 801, 803, 804, 806, 807, 814,
815, 817, 821, 825, 831, 834, 835, 839, 903, 904, 905, 906, 907, 910, 911, 912,
913, 917, 918, 921, 922, 923, 924, 925, 931, 932, 934, 936, 937, 939, 940, 941,
942, 943, 944, 945, 946, 947, 951, 957, 959, 960, 961, 962, 965, 968, 969, 973,
976, 982, 983, 988, 989, 990, 991, 992, 994, 996, 998, 1009, 1011, 1019, 1021,
1023, 1024, 1026, 1027, 1028, 1029, 1031, 1037, 1039, 1040, 1041, 1042, 1043,
1044, 1045, 1049, 1111, 1112, 1118, 1124, 1125, 1126, 1127, 1131, 1132, 1134,
1136, 1167, 1171, 1172, 1195, 1196, 1201, 1205, 1227, 1230, 1263, 1269, 1270,
1271, 1273, 1287.
\I\&{mp\_node\_data}, 161, \[174], 178, 235.
\I\\{mp\_nonlinear\_eq}, \[663], 1041.
\I\\{mp\_nonstop\_mode}, 98, 125, 732, 733, 957, 1078, 1079.
\I\9{mp_nonstop_mode_}{\&{nonstopmode} primitive}, 1078.
\I\\{mp\_norm\_rand}, \[158], 957.
\I\\{mp\_normal\_deviate}, 190, 191, 955, 957.
\I\\{mp\_normal\_sym}, 178, 189, 290, 294.
\I\\{mp\_normalize\_selector}, \[108], 114, \[131], 132, 135, 137, 1299.
\I\\{mp\_not\_op}, 190, 191, 955, 959.
\I\\{mp\_null\_pen\_code}, 190, 191, 955, 957.
\I\\{mp\_null\_picture\_code}, 190, 191, 955, 957.
\I\\{mp\_nullary}, 185, 775, 931, 955, 956, 957.
\I\&{mp\_number}, \[15], 83, 147, 150, 155, 156, 157, 158, 161, 162, 219, 236,
237, 238, 242, 251, 260, 283, 297, 305, 306, 309, 340, 343, 344, 345, 348, 350,
353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371,
372, 373, 374, 375, 378, 379, 382, 384, 387, 390, 391, 392, 396, 397, 401, 402,
403, 404, 405, 408, 409, 410, 412, 413, 416, 421, 426, 429, 430, 434, 437, 441,
444, 446, 447, 450, 452, 454, 455, 458, 462, 467, 468, 469, 477, 482, 489, 497,
504, 505, 506, 510, 515, 518, 520, 522, 523, 524, 525, 527, 529, 530, 534, 537,
538, 539, 544, 551, 552, 558, 559, 560, 561, 562, 563, 566, 567, 568, 569, 570,
572, 573, 574, 575, 576, 580, 583, 584, 587, 588, 590, 591, 592, 593, 597, 598,
600, 601, 605, 606, 610, 614, 619, 624, 632, 633, 636, 637, 638, 639, 640, 641,
642, 643, 644, 646, 650, 653, 654, 655, 657, 658, 707, 749, 821, 907, 923, 924,
925, 926, 931, 943, 948, 952, 957, 959, 972, 975, 976, 977, 978, 979, 980, 981,
983, 988, 991, 992, 993, 994, 996, 997, 999, 1003, 1006, 1009, 1010, 1012,
1015, 1017, 1021, 1023, 1024, 1026, 1027, 1028, 1030, 1039, 1041, 1043, 1125,
1167, 1172, 1183, 1195, 1196, 1197, 1200, 1201, 1202, 1209, 1210, 1211, 1222,
1223, 1241, 1251, 1270, 1271.
\I\\{mp\_number\_as\_double}, \[378], \[379].
\I\&{mp\_number\_data}, \[15].
\I\\{mp\_number\_precision}, 192, 200, 202, 203, 1039.
\I\9{mp_number_precision_}{\&{numberprecision} primitive}, 200.
\I\&{mp\_number\_store}, \[15].
\I\\{mp\_number\_system}, 16, 192, 196, 200, 202, 203, 1039.
\I\9{mp_number_system_}{\&{numbersystem} primitive}, 200.
\I\\{mp\_number\_trans}, \[1006], 1007, 1008, 1018.
\I\&{mp\_number\_type}, \[15].
\I\\{mp\_numeric\_token}, 185, 707, 729, 931, 933, 936, 943, 1050, 1105.
\I\\{mp\_numeric\_type}, 186, 188, 191, 283, 288, 621, 902, 908, 922, 940, 959,
1046, 1097.
\I\\{mp\_obliterated}, 936, \[939], 1039, 1127.
\I\\{mp\_oct\_op}, 190, 191, 955, 959, 974.
\I\\{mp\_odd\_op}, 190, 191, 955, 959.
\I\\{mp\_of\_macro}, 248, 250, 761, 800.
\I\\{mp\_of\_token}, 185, 232, 233, 761, 801, 931.
\I\\{mp\_offset\_prep}, \[544], 581.
\I\\{mp\_open}, 299, 300, 304, 308, 309, 331, 332, 333, 344, 350, 351, 375,
948, 952.
\I\\{mp\_open\_file}, \[45], \[46].
\I\\{mp\_open\_in}, \[52], 879, 884, 895.
\I\\{mp\_open\_log\_file}, 17, \[107], 131, 732, \[875], 880, 1066, 1217, 1251,
1284, 1295.
\I\\{mp\_open\_mem\_file}, 854, \[856], \[857].
\I\\{mp\_open\_mem\_name}, \[856], \[857].
\I\\{mp\_open\_out}, \[52], 875, 897, 1217, 1251.
\I\\{mp\_open\_output\_file}, \[1250], \[1251].
\I\\{mp\_open\_usage}, \[1293], \[1294].
\I\\{mp\_open\_write\_file}, \[896], \[897], 1156.
\I\&{MP\_options}, \[3], 4, 8, 9, 16, 18.
\I\\{mp\_options}, \[8], \[9], \[18].
\I\\{mp\_or\_op}, 190, 191, 955, 988.
\I\\{mp\_originator}, \[301], 324, 416, 429, 552, 588, 595, 949, 973.
\I\\{mp\_out}, \[978], 979.
\I\\{mp\_outer\_tag}, 185, 283, 289, 294, 729, 830, 936, 1045, 1084, 1104.
\I\\{mp\_output\_filename}, 192, 196, 200, 202, 203, 1254.
\I\9{mp_output_filename_}{\&{outputfilename} primitive}, 200.
\I\\{mp\_output\_format}, 192, 196, 200, 202, 203, 1251, 1275.
\I\9{mp_output_format_}{\&{outputformat} primitive}, 200.
\I\\{mp\_output\_format\_options}, 192, 196, 200, 202, 203, 1275.
\I\9{mp_output_format_options_}{\&{outputformatoptions} primitive}, 200.
\I\\{mp\_output\_template}, 192, 196, 200, 202, 203, 1147, 1251.
\I\9{mp_output_template_}{\&{outputtemplate} primitive}, 200.
\I\\{mp\_over}, 190, 191, 931, 955, 988.
\I\\{mp\_overflow}, \[134], \[135].
\I\\{mp\_p\_over\_v}, \[640], \[641], 923, 991, 997.
\I\\{mp\_p\_plus\_fq}, \[636], \[637], 642, 923, 991, 1021, 1023, 1043.
\I\\{mp\_p\_plus\_q}, \[638], 991, 1043.
\I\\{mp\_p\_times\_v}, \[639], 993, 1021.
\I\\{mp\_p\_with\_x\_becoming\_q}, \[642], 653.
\I\\{mp\_pack\_file\_name}, \[851], \[852], 870, 879, 884, 1251.
\I\\{mp\_pack\_job\_name}, \[870], \[871], 875, 1217, 1251.
\I\&{mp\_pair\_node}, \[262].
\I\&{mp\_pair\_node\_data}, \[262], 263.
\I\\{mp\_pair\_node\_type}, 186, 188, 263, 1019.
\I\\{mp\_pair\_to\_knot}, 948, \[949], 966.
\I\\{mp\_pair\_to\_path}, 959, \[966], 988, 1041, 1136.
\I\\{mp\_pair\_type}, 186, 188, 243, 266, 288, 902, 903, 905, 908, 920, 922,
940, 947, 948, 951, 952, 959, 960, 961, 962, 965, 969, 982, 983, 988, 990, 994,
996, 1002, 1037, 1041, 1046, 1136.
\I\\{mp\_pair\_value}, 959, \[983], 988, 1028, 1030.
\I\\{mp\_param\_type}, 185, 250, 759, 760, 761.
\I\\{mp\_param\_usage}, \[1293], \[1294].
\I\\{mp\_pass\_text}, \[765], \[811], 818, 820.
\I\\{mp\_path\_bbox}, \[393], 534, 535, 537, 539, 984.
\I\\{mp\_path\_intersection}, \[619], 988.
\I\\{mp\_path\_join}, 185, 232, 233, 948.
\I\\{mp\_path\_length}, 959, \[975], 1027.
\I\\{mp\_path\_p}, \[458], 460, 461, 464, 465, 476, 494, 498, 503, 508, 509,
510, 534, 535, 537, 539, 973, 1016, 1270, 1271.
\I\\{mp\_path\_part}, 190, 191, 955, 959, 973.
\I\\{mp\_path\_type}, 186, 188, 243, 288, 663, 902, 903, 905, 908, 914, 920,
922, 940, 947, 948, 959, 966, 973, 982, 984, 988, 1028, 1041, 1046, 1134, 1136.
\I\\{mp\_pause\_for\_instructions}, 138, \[140].
\I\\{mp\_pausing}, 192, 200, 203, 733.
\I\9{mp_pausing_}{\&{pausing} primitive}, 200.
\I\\{mp\_pen\_bbox}, \[453], 534, 537, 984.
\I\\{mp\_pen\_circle}, 190, 191, 955, 957.
\I\\{mp\_pen\_offset\_of}, 190, 191, 955, 988.
\I\\{mp\_pen\_p}, \[458], 460, 461, 464, 465, 469, 473, 489, 494, 498, 503,
504, 534, 537, 973, 1017, 1125, 1136, 1270.
\I\\{mp\_pen\_part}, 190, 191, 955, 959, 973.
\I\\{mp\_pen\_type}, 186, 188, 243, 288, 663, 902, 903, 905, 908, 914, 920,
922, 940, 957, 959, 973, 982, 984, 988, 1041, 1046, 1122, 1123, 1125.
\I\\{mp\_pen\_walk}, 555, \[556], \[557], 566, 577, 578, 581.
\I\\{mp\_pict\_length}, 959, \[976].
\I\\{mp\_picture\_type}, 186, 188, 243, 288, 663, 834, 839, 902, 905, 908, 914,
920, 922, 940, 957, 959, 973, 982, 984, 988, 1029, 1031, 1041, 1046, 1122,
1125, 1127, 1136, 1138.
\I\\{mp\_plus}, 190, 191, 932, 955, 959, 988.
\I\\{mp\_plus\_or\_minus}, 185, 931, 955, 956.
\I\\{mp\_png\_backend\_free}, 1281.
\I\\{mp\_png\_backend\_initialize}, 1280.
\I\\{mp\_png\_gr\_ship\_out}, 1275.
\I\\{mp\_point\_of}, 190, 191, 955, 988, 1030.
\I\\{mp\_post\_script}, \[458], 460, 461, 464, 465, 471, 472, 494, 973, 1125,
1270.
\I\\{mp\_postcontrol\_of}, 190, 191, 955, 988, 1030.
\I\\{mp\_postscript\_part}, 190, 191, 955, 959, 973.
\I\\{mp\_pr\_path}, \[302], \[303], 311, 498, 503, 508, 509.
\I\\{mp\_pr\_pen}, \[418], \[419], 423, 498, 503.
\I\\{mp\_pre\_script}, \[458], 460, 461, 464, 465, 471, 472, 494, 973, 1125,
1270.
\I\\{mp\_precontrol\_of}, 190, 191, 955, 988, 1030.
\I\\{mp\_prescript\_part}, 190, 191, 955, 959, 973.
\I\\{mp\_prev\_knot}, \[297], 415, 416, 420, 440, 442, 443, 445, 548, 557, 561,
568, 570, 586, 594.
\I\\{mp\_primary\_binary}, 185, 931, 955, 956.
\I\\{mp\_primary\_macro}, 248, 250, 759, 760, 800.
\I\\{mp\_primitive}, 200, \[229], 232, 735, 745, 753, 759, 771, 809, 955, 1046,
1071, 1078, 1081, 1099, 1122, 1128, 1143, 1175, 1185, 1284.
\I\\{mp\_print}, \[83], 87, \[89], 91, 92, 96, 102, 114, 124, 125, 128, 129,
188, 191, 209, 233, 245, 250, 280, 295, 303, 304, 305, 306, 307, 308, 309, 419,
421, 497, 498, 499, 500, 502, 503, 504, 507, 508, 509, 577, 578, 579, 632, 656,
671, 695, 696, 700, 727, 736, 746, 754, 760, 772, 785, 789, 810, 819, 849, 873,
878, 880, 891, 908, 914, 915, 925, 959, 962, 988, 989, 995, 1037, 1039, 1072,
1079, 1082, 1100, 1104, 1106, 1114, 1118, 1123, 1129, 1144, 1176, 1186, 1203,
1217, 1222, 1223, 1239, 1251, 1260, 1284, 1287, 1295.
\I\\{mp\_print\_arg}, 785, \[788], \[789], 794, 801.
\I\\{mp\_print\_capsule}, 245, \[246], \[247], 1105.
\I\\{mp\_print\_char}, \[83], \[87], 88, 94, 96, 115, 129, 147, 191, 209, 233,
245, 247, 250, 294, 295, 305, 309, 421, 498, 502, 503, 504, 507, 632, 646, 656,
672, 694, 700, 701, 732, 733, 754, 833, 849, 875, 878, 880, 908, 910, 911, 912,
913, 916, 925, 959, 962, 988, 995, 1039, 1076, 1104, 1105, 1110, 1112, 1118,
1143, 1217, 1239, 1251, 1258, 1259, 1260, 1284, 1287.
\I\\{mp\_print\_cmd\_mod}, 250, \[670], \[671], 672, 931, 933, 1034, 1104,
1106, 1284, 1295.
\I\\{mp\_print\_dd}, \[94], \[95], 878.
\I\\{mp\_print\_dependency}, \[631], \[632], 656, 915, 923, 1118.
\I\\{mp\_print\_diagnostic}, \[206], \[209], 311, 423, 497, 577.
\I\\{mp\_print\_dp}, 908, 909, \[915].
\I\\{mp\_print\_edges}, \[496], \[497], 914, 1273.
\I\\{mp\_print\_err}, \[101], \[102], 115, 873.
\I\\{mp\_print\_exp}, 247, 696, 789, 833, \[906], \[907], 918, 959, 988, 995,
1037, 1039, 1102, 1112.
\I\\{mp\_print\_file\_name}, \[849], 873.
\I\\{mp\_print\_int}, \[92], \[93], 102, 209, 245, 694, 789, 878, 1110, 1143,
1222, 1223, 1239, 1258, 1260, 1284, 1295.
\I\\{mp\_print\_known\_or\_unknown\_type}, \[962], 963, 989.
\I\\{mp\_print\_ln}, \[83], \[85], 86, 90, 91, 96, 114, 125, 128, 129, 130,
207, 311, 423, 497, 498, 503, 507, 508, 509, 577, 695, 700, 716, 727, 732, 733,
785, 875, 880, 1032, 1104, 1106, 1110, 1155, 1258, 1260, 1284, 1287.
\I\\{mp\_print\_macro\_name}, 785, \[786], \[787], 791, 792, 801.
\I\\{mp\_print\_nl}, \[83], \[91], 102, 114, 115, 124, 130, 207, 209, 294, 295,
303, 305, 419, 420, 497, 503, 577, 579, 646, 656, 672, 694, 695, 696, 727, 732,
789, 833, 873, 875, 891, 918, 925, 959, 980, 988, 995, 1032, 1037, 1039, 1076,
1102, 1104, 1110, 1112, 1114, 1118, 1146, 1203, 1209, 1217, 1222, 1223, 1239,
1260, 1284, 1287, 1295.
\I\\{mp\_print\_obj\_color}, 498, \[501], \[502], 503, 507.
\I\\{mp\_print\_op}, \[191], 956, 959, 963, 968, 988, 989.
\I\\{mp\_print\_path}, \[310], \[311], 328, 914.
\I\\{mp\_print\_pen}, \[422], \[423], 914.
\I\\{mp\_print\_pointer}, \[92], \[93].
\I\\{mp\_print\_spec}, \[577], 581.
\I\\{mp\_print\_str}, \[83], \[89], 245, 507, 695, 908, 1032, 1105, 1125, 1146,
1155.
\I\\{mp\_print\_sym}, \[749], \[750].
\I\\{mp\_print\_text}, \[83], 294, 787, 1104, 1106.
\I\\{mp\_print\_two}, \[83], \[147], 304, 307, 419, 577, 578, 579.
\I\\{mp\_print\_type}, \[187], \[188], 191, 908, 914, 916, 962, 1047.
\I\\{mp\_print\_variable\_name}, \[279], \[280], 632, 646, 656, 725, 908, 909,
916, 925, 1112, 1114, 1118.
\I\\{mp\_print\_visible\_char}, \[84], \[86], 87.
\I\\{mp\_printf}, \[83], \[89], 280.
\I\\{mp\_private\_edges}, \[487], 1009, 1127, 1136.
\I\\{mp\_procset}, 192, 200, 203, 1275.
\I\9{mp_procset_}{\&{mpprocset} primitive}, 200.
\I\\{mp\_program\_code}, 301, 416, 429, 552, 588, 595.
\I\\{mp\_prologues}, 17, 192, 200, 203, 1066, 1227, 1275.
\I\9{mp_prologues_}{\&{prologues} primitive}, 200.
\I\\{mp\_prompt\_file\_name}, \[872], \[873], 877, 880, 897, 1217, 1251.
\I\\{mp\_protection\_command}, 185, 1032, 1081, 1082.
\I\\{mp\_proto\_dependent}, 186, 188, 243, 288, 630, 631, 636, 638, 639, 642,
653, 655, 902, 903, 905, 908, 920, 922, 923, 925, 926, 927, 928, 940, 965, 991,
993, 997, 1021, 1023, 1024, 1041, 1043.
\I\\{mp\_ps\_backend\_free}, 1281.
\I\\{mp\_ps\_backend\_initialize}, 1280.
\I\\{mp\_ps\_do\_font\_charstring}, 1029.
\I\\{mp\_ps\_font}, 1029.
\I\\{mp\_ps\_font\_charstring}, 1029, 1271.
\I\\{mp\_ps\_font\_free}, 1029.
\I\\{mp\_ps\_font\_parse}, 1029.
\I\\{mp\_ptr\_scan\_file}, \[863], \[864], 895, 897.
\I\\{mp\_pythag\_add}, 190, 191, 955, 988.
\I\\{mp\_pythag\_sub}, 190, 191, 955, 988.
\I\\{mp\_random\_seed}, 185, 232, 233, 1032.
\I\9{mp_random_seed_}{\&{randomseed} primitive}, 232.
\I\\{mp\_read\_ascii\_file}, \[45], \[53].
\I\\{mp\_read\_binary\_file}, \[45], \[55].
\I\\{mp\_read\_font\_info}, 5, 1235.
\I\\{mp\_read\_from\_op}, 190, 191, 955, 959.
\I\\{mp\_read\_string\_op}, 190, 191, 955, 957.
\I\\{mp\_reallocate\_buffer}, \[63], 64, 712, 714, 779.
\I\\{mp\_reallocate\_fonts}, 16, \[1230], \[1231].
\I\\{mp\_reallocate\_input\_stack}, \[680], \[681], 682, 712.
\I\\{mp\_reallocate\_paths}, 16, 343, \[347], \[348].
\I\\{mp\_recycle\_value}, 243, 285, 287, 706, 835, 920, \[921], \[922], 931,
934, 951, 965, 969, 988, 992, 994, 998, 1021, 1022, 1024, 1039, 1041.
\I\\{mp\_red\_part}, 190, 191, 955, 959, 969, 973, 988.
\I\\{mp\_red\_part\_sector}, 189, 270, 272, 280, 281.
\I\\{mp\_reduce\_angle}, \[358], \[359], 360, 361, 980.
\I\\{mp\_relax}, 185, 232, 233, 751, 769, 1284.
\I\\{mp\_remove\_cubic}, 550, \[553], \[554], 595.
\I\\{mp\_repeat\_loop}, 185, 769, 830, 1106.
\I\\{mp\_reset\_cur\_string}, 848.
\I\\{mp\_reset\_stream}, \[1055], \[1056], 1060, 1067.
\I\\{mp\_restore\_clip\_color}, 192, 200, 202, 203.
\I\9{mp_restore_clip_color_}{\&{restoreclipcolor} primitive}, 200.
\I\\{mp\_resume\_iteration}, \[765], 774, 825, \[831].
\I\\{mp\_reverse}, 190, 191, 955, 959.
\I\\{mp\_rgb\_model}, 201, 202, 502, 959, 968, 1122, 1123, 1125.
\I\\{mp\_right\_brace}, 185, 232, 233, 952.
\I\\{mp\_right\_bracket}, 185, 232, 233, 932, 936, 943, 1045.
\I\\{mp\_right\_bracket\_class}, \[210], 211, 245.
\I\\{mp\_right\_delimiter}, 185, 227, 792, 793, 798, 802, 1087, 1089, 1094,
1106.
\I\\{mp\_right\_type}, \[297], 299, 300, 304, 309, 324, 328, 331, 332, 333,
334, 344, 351, 356, 371, 374, 375, 378, 393, 409, 410, 414, 424, 429, 514, 527,
531, 552, 553, 585, 588, 596, 600, 619, 620, 948, 949, 959, 973, 1007, 1008,
1027, 1030, 1270.
\I\\{mp\_right\_x}, 300, 587.
\I\\{mp\_right\_y}, 300, 587.
\I\\{mp\_ring\_delete}, \[661], \[662], 922.
\I\\{mp\_ring\_merge}, \[664], 1041.
\I\\{mp\_root}, 189, 278, 282, 294, 763.
\I\\{mp\_rotated\_by}, 190, 191, 955, 988, 1002.
\I\\{mp\_rts}, 729, 868, 881, 973, 1052, 1097, 1147, 1251, 1254.
\I\\{mp\_rtsl}, 959, 987.
\I\\{mp\_run}, 111, \[1051], \[1070], 1284.
\I\&{mp\_run\_data}, \[1054], 1057, 1059, 1060, 1062, 1063.
\I\\{mp\_run\_editor}, \[121], \[122].
\I\\{mp\_run\_make\_mpx}, \[889], \[890].
\I\\{mp\_runaway}, 724, \[726], \[727].
\I\\{mp\_rundata}, 1060, \[1062], \[1063].
\I\\{mp\_save\_boundary}, \[293], 931.
\I\\{mp\_save\_command}, 185, 232, 233, 1032.
\I\&{mp\_save\_data}, \[290], 291, 293, 294, 295, 296.
\I\\{mp\_save\_internal}, \[295], 1092.
\I\\{mp\_save\_variable}, \[294], 1032.
\I\\{mp\_saved\_root}, 189, 280, 289.
\I\\{mp\_scale\_edges}, \[972], 973, \[1009].
\I\\{mp\_scaled\_by}, 190, 191, 955, 988, 1002.
\I\\{mp\_scaled\_type}, 15, 455.
\I\\{mp\_scan\_declared\_variable}, 761, \[1044], \[1045], 1049.
\I\\{mp\_scan\_def}, \[761], 1032.
\I\\{mp\_scan\_direction}, 948, \[952].
\I\\{mp\_scan\_expression}, \[765], 795, 800, 801, 836, 837, 838, 931, 932,
936, 943, \[947], 952, 953, 1032, 1037, 1039, 1075, 1102, 1125, 1132, 1138,
1146, 1154, 1178, 1183, 1189, 1192, 1245, 1265.
\I\\{mp\_scan\_file\_name}, \[860], 883.
\I\\{mp\_scan\_path}, \[947], \[948].
\I\\{mp\_scan\_primary}, \[765], 778, 800, 801, \[931], 944, 948, 1132.
\I\\{mp\_scan\_secondary}, \[765], 800, \[944], 946.
\I\\{mp\_scan\_suffix}, \[765], 795, 802, 836, 931, \[943].
\I\\{mp\_scan\_tertiary}, \[765], 800, \[946], 947, 948.
\I\\{mp\_scan\_text\_arg}, 795, \[796], \[797], 800.
\I\\{mp\_scan\_tokens}, 185, 232, 233, 769.
\I\\{mp\_scan\_toks}, \[748], 758, 761, 829.
\I\\{mp\_scan\_with\_list}, \[1124], \[1125], 1136.
\I\\{mp\_scroll\_mode}, 96, 98, 123, 125, 132, 135, 137, 768, 873, 891, 1078,
1079, 1150.
\I\9{mp_scroll_mode_}{\&{scrollmode} primitive}, 1078.
\I\\{mp\_secondary\_binary}, 185, 955, 956.
\I\\{mp\_secondary\_macro}, 248, 250, 759, 760, 800.
\I\\{mp\_secondary\_primary\_macro}, 185, 289, 745, 746, 944, 1094, 1106.
\I\\{mp\_semicolon}, 185, 232, 233, 775, 931, 1032, 1034, 1120.
\I\\{mp\_set\_bbox}, \[532], \[533], 540, 984, 1270.
\I\\{mp\_set\_controls}, 366, \[370], \[371], 373.
\I\\{mp\_set\_internal}, \[1052], \[1053].
\I\\{mp\_set\_job\_id}, 17, 1066.
\I\\{mp\_set\_knot}, \[375], \[377].
\I\\{mp\_set\_knot\_curl}, \[375], \[377].
\I\\{mp\_set\_knot\_direction}, \[375], \[377].
\I\\{mp\_set\_knot\_left\_control}, \[375], \[377].
\I\\{mp\_set\_knot\_left\_curl}, \[375], \[377].
\I\\{mp\_set\_knot\_left\_tension}, \[375], \[377].
\I\\{mp\_set\_knot\_right\_control}, \[375], \[377].
\I\\{mp\_set\_knot\_right\_curl}, \[375], \[377].
\I\\{mp\_set\_knot\_right\_tension}, \[375], \[377].
\I\\{mp\_set\_knotpair\_controls}, \[375], \[377].
\I\\{mp\_set\_knotpair\_curls}, \[375], \[377].
\I\\{mp\_set\_knotpair\_directions}, \[375], \[377].
\I\\{mp\_set\_knotpair\_tensions}, \[375], \[377].
\I\\{mp\_set\_output\_file\_name}, \[1250], \[1251].
\I\\{mp\_set\_tag}, \[1179], \[1180], 1183, 1188, 1190.
\I\\{mp\_set\_text\_box}, 471, \[1240], \[1241].
\I\\{mp\_set\_up\_direction\_time}, 988, \[1028].
\I\\{mp\_set\_up\_envelope}, 988, \[1028].
\I\\{mp\_set\_up\_glyph\_infont}, 988, \[1029].
\I\\{mp\_set\_up\_known\_trans}, \[1005], 1007, 1008, 1009, 1020.
\I\\{mp\_set\_up\_offset}, 988, \[1028].
\I\\{mp\_set\_up\_trans}, \[998], 1005, 1022.
\I\\{mp\_shifted\_by}, 190, 191, 955, 988, 1002.
\I\\{mp\_ship\_out}, 1138, \[1269], \[1273].
\I\\{mp\_ship\_out\_command}, 185, 232, 233, 1032.
\I\\{mp\_shipout\_backend}, \[1274], \[1275].
\I\\{mp\_show\_cmd\_mod}, \[672], 775, 957.
\I\\{mp\_show\_command}, 185, 1032, 1099, 1100.
\I\\{mp\_show\_context}, \[107], 115, 127, \[692], 873.
\I\\{mp\_show\_library\_versions}, \[1069], \[1070].
\I\\{mp\_show\_macro}, \[250], 702, 785, 1104, 1114.
\I\\{mp\_show\_token\_list}, \[244], \[245], 250, 280, 696, 697, 702, 727, 787,
789, 833, 931, 939, 1039, 1106, 1127.
\I\\{mp\_show\_transformed\_dependency}, 923, \[924], \[925].
\I\\{mp\_showstopping}, 192, 200, 203, 1120.
\I\9{mp_showstopping_}{\&{showstopping} primitive}, 200.
\I\\{mp\_sign}, \[978], 979.
\I\\{mp\_sin\_d\_op}, 190, 191, 955, 959.
\I\\{mp\_single\_dependency}, \[651], 934, 940, 942, 1043.
\I\\{mp\_skimp}, \[1201], 1204, 1206.
\I\\{mp\_skip\_to}, 185, 232, 233, 1184.
\I\\{mp\_skip\_1component}, \[495], 834, 838, 976.
\I\\{mp\_slanted\_by}, 190, 191, 955, 988, 1002.
\I\\{mp\_slash}, 185, 931, 955, 956.
\I\\{mp\_snprintf}, 16, 92, 122, 135, 137, \[172], 188, 644, 721, 722, 725,
791, 792, 793, 801, 802, 824, 931, 933, 939, 963, 968, 974, 989, 1029, 1034,
1039, 1041, 1043, 1052, 1089, 1092, 1127, 1152, 1172, 1181, 1190, 1224, 1251,
1252, 1292.
\I\\{mp\_solve\_choices}, 339, \[349], \[350].
\I\\{mp\_solve\_path}, \[376], \[377].
\I\\{mp\_solve\_rising\_cubic}, 403, \[404], \[405].
\I\\{mp\_sort\_in}, \[1195], 1204, 1206.
\I\\{mp\_special\_code}, 1267, 1268, 1271.
\I\\{mp\_special\_command}, 185, 232, 233, 1032.
\I\\{mp\_special\_object}, 1268.
\I\\{mp\_split\_cubic}, \[551], \[552], 563, 570, 571, 1027, 1030.
\I\\{mp\_spotless}, 16, 17, 104, 207, 1066, 1295.
\I\\{mp\_sqrt\_det}, \[467], \[468], 1009.
\I\\{mp\_sqrt\_op}, 190, 191, 955, 959.
\I\\{mp\_stack\_argument}, \[804], 831.
\I\\{mp\_start\_bounds\_code}, 474, 1271.
\I\&{mp\_start\_bounds\_node}, \[473], 475, 476, 482, 486, 494, 509, 532, 535,
973, 1016, 1270.
\I\&{mp\_start\_bounds\_node\_data}, \[473], 475.
\I\\{mp\_start\_bounds\_node\_type}, 186, 188, 475, 486, 493, 494, 509, 535,
536, 973, 1016, 1128, 1134, 1270.
\I\\{mp\_start\_clip\_code}, 474, 1271.
\I\&{mp\_start\_clip\_node}, \[473], 475, 476, 486, 494, 508, 539, 973, 1016,
1270.
\I\&{mp\_start\_clip\_node\_data}, \[473], 475.
\I\\{mp\_start\_clip\_node\_type}, 186, 188, 473, 475, 486, 493, 494, 508, 539,
973, 1016, 1128, 1129, 1134, 1270.
\I\\{mp\_start\_draw\_cmd}, \[1131], \[1132], 1134, 1136.
\I\\{mp\_start\_input}, \[765], 773, \[880], 1299.
\I\\{mp\_start\_mpx\_input}, \[738], 739, \[884].
\I\\{mp\_start\_read\_input}, \[895], 985.
\I\\{mp\_start\_tex}, 185, 735, 736, 739.
\I\\{mp\_stash\_cur\_exp}, 707, 781, 794, 801, 831, 834, 836, \[903], 907, 931,
932, 937, 944, 945, 946, 947, 988, 996, 998, 1022, 1037, 1039, 1265.
\I\\{mp\_stash\_in}, 931, \[934].
\I\\{mp\_status}, \[18], \[19].
\I\\{mp\_step\_token}, 185, 232, 233, 836.
\I\\{mp\_stop}, 185, 1051, 1067, 1071, 1072, 1284.
\I\\{mp\_stop\_bounds\_code}, 474, 1271.
\I\&{mp\_stop\_bounds\_node}, \[473], 475, 476, 486.
\I\&{mp\_stop\_bounds\_node\_data}, \[473], 475.
\I\\{mp\_stop\_bounds\_node\_type}, 186, 188, 475, 486, 493, 494, 509, 535,
536, 1016, 1134, 1270.
\I\\{mp\_stop\_clip\_code}, 474, 1271.
\I\&{mp\_stop\_clip\_node}, \[473], 475, 476, 486, 539.
\I\&{mp\_stop\_clip\_node\_data}, \[473], 475.
\I\\{mp\_stop\_clip\_node\_type}, 186, 188, 473, 475, 486, 493, 494, 508, 532,
1016, 1134, 1270.
\I\\{mp\_stop\_iteration}, \[765], 776, 831, \[835], 1284, 1295.
\I\\{mp\_store\_true\_output\_filename}, 1251, \[1253], \[1254].
\I\\{mp\_str}, 102, 123, 295, 725, 791, 792, 793, 801, 802, 931, 933, 939, 959,
963, 968, 985, 989, 1029, 1031, 1034, 1039, 1089, 1092, 1097, 1127, 1152, 1156,
1251, 1268, 1270, 1275.
\I\\{mp\_str\_op}, 185, 232, 233, 931.
\I\\{mp\_str\_scan\_file}, \[861], \[862].
\I\\{mp\_str\_to\_num}, 959, \[974].
\I\\{mp\_str\_vs\_str}, 988, 1041, 1155.
\I\\{mp\_strdup}, 44, 1069.
\I\&{mp\_stream}, \[1054], 1055, 1056, 1060.
\I\&{mp\_string}, \[72], 83, 89, 109, 161, 193, 212, 213, 214, 215, 235, 236,
237, 238, 245, 458, 462, 469, 471, 673, 678, 679, 681, 725, 749, 791, 792, 801,
859, 861, 862, 931, 933, 939, 963, 968, 986, 988, 989, 1034, 1125, 1127, 1154,
1251.
\I\\{mp\_string\_token}, 185, 729, 755, 812, 931, 1035.
\I\\{mp\_string\_type}, 186, 188, 190, 193, 196, 235, 243, 245, 288, 295, 663,
707, 778, 902, 903, 905, 908, 920, 922, 931, 940, 957, 958, 959, 973, 982, 985,
988, 1032, 1039, 1041, 1046, 1052, 1097, 1125, 1146, 1154, 1178, 1245, 1251,
1265.
\I\\{mp\_stroked\_code}, 463, 1271.
\I\&{mp\_stroked\_node}, \[462], 464, 465, 486, 489, 494, 499, 500, 502, 503,
504, 510, 516, 520, 537, 973, 1016, 1017, 1125, 1136, 1270.
\I\&{mp\_stroked\_node\_data}, \[462], 464.
\I\\{mp\_stroked\_node\_type}, 186, 188, 464, 486, 493, 494, 503, 510, 537,
973, 1016, 1017, 1125, 1270.
\I\\{mp\_stroked\_object}, 1270.
\I\\{mp\_stroked\_op}, 190, 191, 955, 959.
\I\\{mp\_structured}, 186, 188, 189, 236, 237, 251, 252, 256, 282, 283, 285,
287, 922, 936, 1112.
\I\\{mp\_structured\_root}, 189, 256, 280, 282.
\I\\{mp\_subpath\_of}, 190, 191, 955, 988.
\I\\{mp\_subscr}, 189, 260, 280, 282, 283, 285, 287, 1113.
\I\\{mp\_subscr\_node\_type}, 186, 188, 260, 261.
\I\&{mp\_subst\_list\_item}, \[747], 748, 758, 761, 825.
\I\\{mp\_substring\_of}, 190, 191, 955, 988.
\I\\{mp\_suffix\_macro}, 248, 250, 761, 800.
\I\\{mp\_suffix\_param}, 248, 759, 760, 761.
\I\\{mp\_suffix\_sym}, 189, 245, 729, 748, 761, 791, 792, 793, 795, 825, 836.
\I\\{mp\_suffixed\_macro}, 186, 188, 761, 922, 936.
\I\\{mp\_svg\_backend\_free}, 1281.
\I\\{mp\_svg\_backend\_initialize}, 1280.
\I\\{mp\_svg\_gr\_ship\_out}, 1275.
\I\&{mp\_sym}, 115, \[161], 176, 177, 213, 214, 216, 219, 220, 223, 224, 225,
228, 230, 231, 235, 236, 237, 238, 245, 251, 256, 258, 278, 282, 283, 285, 289,
294, 719, 729, 747, 749, 750, 761, 762, 783, 784, 786, 787, 796, 797, 825, 931,
936, 944, 945, 946, 947, 1045, 1052, 1087, 1088, 1089, 1094, 1141, 1251.
\I\\{mp\_sym\_info}, \[176], 245, 250, 283, 729, 791, 794, 800, 1039.
\I\\{mp\_sym\_sym}, \[176], 245, 283, 285, 729, 761, 785, 787, 794, 801, 803,
831, 835, 936, 1049.
\I\&{mp\_symbol\_entry}, 161, \[215], 218, 219, 224.
\I\\{mp\_symbol\_node}, 176, 178, 184, 186, 188, 243, 245, 283, 729, 936.
\I\&{mp\_symbolic\_node}, \[174], 176, 178, 179.
\I\\{mp\_system\_error\_stop}, 104, 112, 171.
\I\\{mp\_t\_next}, 737, \[738], \[739].
\I\\{mp\_tag\_token}, 185, 224, 227, 283, 289, 294, 931, 936, 943, 1045, 1094,
1106, 1116.
\I\\{mp\_take\_part}, 959, \[969], 988.
\I\\{mp\_take\_pict\_part}, 959, \[973].
\I\\{mp\_tarnished}, 988, \[990], 994.
\I\\{mp\_tension}, 185, 232, 233, 948.
\I\\{mp\_term\_input}, \[96], \[107].
\I\\{mp\_tertiary\_binary}, 185, 955, 956.
\I\\{mp\_tertiary\_macro}, 248, 250, 759, 800.
\I\\{mp\_tertiary\_secondary\_macro}, 185, 289, 745, 746, 946, 1094, 1106.
\I\\{mp\_test\_known}, 959, \[982].
\I\\{mp\_text\_code}, 470, 1271.
\I\\{mp\_text\_macro}, 248, 250, 761, 789, 800.
\I\&{mp\_text\_node}, \[469], 471, 472, 486, 494, 507, 538, 973, 1018, 1240,
1241, 1270.
\I\&{mp\_text\_node\_data}, \[469], 471.
\I\\{mp\_text\_node\_type}, 186, 188, 471, 473, 486, 493, 494, 507, 538, 973,
1016, 1270.
\I\\{mp\_text\_object}, 1270.
\I\\{mp\_text\_p}, \[469], 471, 472, 494, 507, 973, 1241, 1242, 1270.
\I\\{mp\_text\_param}, 248, 759, 760, 761.
\I\\{mp\_text\_part}, 190, 191, 955, 959, 973.
\I\\{mp\_text\_sym}, 189, 245, 729, 761, 789, 791, 792, 793, 795.
\I\\{mp\_textual\_op}, 190, 191, 955, 959.
\I\\{mp\_tfm\_check}, \[1171], \[1172], 1173.
\I\\{mp\_tfm\_command}, 185, 1032, 1175, 1176.
\I\\{mp\_tfm\_four}, \[1216], 1219, 1222, 1223.
\I\\{mp\_tfm\_qqqq}, \[1216], 1222, 1223.
\I\\{mp\_tfm\_two}, \[1216], 1218, 1222.
\I\\{mp\_tfm\_warning}, \[1203], 1204, 1206.
\I\\{mp\_thing\_to\_add}, 185, 1122, 1123, 1136.
\I\\{mp\_threshold}, \[1200], 1201.
\I\\{mp\_time}, 150, 192, 200, 203, 204, 1066, 1299.
\I\\{mp\_times}, 190, 191, 931, 932, 955, 988.
\I\\{mp\_to\_token}, 185, 232, 233, 1134, 1154.
\I\\{mp\_token}, 189, 242, 245, 707, 729.
\I\\{mp\_token\_list}, 186, 188, 792, 794, 797, 902, 903, 905, 922, 931, 936,
943, 1039, 1132.
\I\&{mp\_token\_node}, \[235], 236, 237, 238, 251.
\I\\{mp\_token\_node\_type}, 186, 188, 239.
\I\\{mp\_toss\_edges}, \[485], \[486], 1136.
\I\\{mp\_toss\_gr\_object}, \[485], \[486], 1136.
\I\\{mp\_toss\_knot}, \[326], \[327], 1027.
\I\\{mp\_toss\_knot\_list}, \[326], \[327], 376, 412, 461, 465, 476, 920, 922,
959, 1027, 1125, 1270.
\I\\{mp\_tracing\_capsules}, 192, 200, 202, 203, 281.
\I\9{mp_tracing_capsules_}{\&{tracingcapsules} primitive}, 200.
\I\\{mp\_tracing\_choices}, 192, 200, 202, 203, 328.
\I\9{mp_tracing_choices_}{\&{tracingchoices} primitive}, 200.
\I\\{mp\_tracing\_commands}, 192, 200, 202, 203, 769, 775, 817, 831, 931, 957,
959, 980, 988, 994, 1032, 1037, 1039.
\I\9{mp_tracing_commands_}{\&{tracingcommands} primitive}, 200.
\I\\{mp\_tracing\_equations}, 192, 200, 202, 203, 646, 653, 923.
\I\9{mp_tracing_equations_}{\&{tracingequations} primitive}, 200.
\I\\{mp\_tracing\_lost\_chars}, 192, 200, 202, 203, 1239.
\I\9{mp_tracing_lost_chars_}{\&{tracinglostchars} primitive}, 200.
\I\\{mp\_tracing\_macros}, 192, 200, 202, 203, 784, 794, 801.
\I\9{mp_tracing_macros_}{\&{tracingmacros} primitive}, 200.
\I\\{mp\_tracing\_online}, 192, 200, 202, 203, 206, 207, 914.
\I\9{mp_tracing_online_}{\&{tracingonline} primitive}, 200.
\I\\{mp\_tracing\_output}, 192, 200, 202, 203, 1273.
\I\9{mp_tracing_output_}{\&{tracingoutput} primitive}, 200.
\I\\{mp\_tracing\_pens}, 295.
\I\\{mp\_tracing\_restores}, 192, 200, 202, 203, 294, 295.
\I\9{mp_tracing_restores_}{\&{tracingrestores} primitive}, 200.
\I\\{mp\_tracing\_specs}, 192, 200, 202, 203, 581.
\I\9{mp_tracing_specs_}{\&{tracingspecs} primitive}, 200.
\I\\{mp\_tracing\_stats}, 175, 192, 200, 202, 203, 1217, 1287.
\I\9{mp_tracing_stats_}{\&{tracingstats} primitive}, 200.
\I\\{mp\_tracing\_titles}, 192, 200, 202, 203, 1032.
\I\&{mp\_transform\_node}, \[267], 268.
\I\&{mp\_transform\_node\_data}, \[267], 268.
\I\\{mp\_transform\_node\_type}, 186, 188, 268, 988.
\I\\{mp\_transform\_type}, 186, 188, 243, 269, 288, 902, 903, 905, 908, 920,
922, 940, 959, 982, 988, 990, 994, 998, 1019, 1020, 1022, 1025, 1041, 1046,
1049.
\I\\{mp\_transformed\_by}, 190, 191, 955, 988, 998, 1002.
\I\\{mp\_troff\_mode}, \[197], \[198].
\I\\{mp\_true\_code}, 190, 191, 775, 817, 819, 908, 955, 957, 959, 982, 1125.
\I\\{mp\_true\_corners}, 192, 200, 203, 532, 535.
\I\9{mp_true_corners_}{\&{truecorners} primitive}, 200, 482.
\I\\{mp\_true\_line}, 123, 209, \[689], \[690], 694, 811, 813, 817, 931.
\I\\{mp\_try\_eq}, 1041, \[1042], \[1043].
\I\\{mp\_try\_extension}, \[879], 880.
\I\\{mp\_turn\_cycles}, \[980], 981, 1271.
\I\\{mp\_turn\_cycles\_wrapper}, 959, \[981].
\I\\{mp\_turning\_op}, 190, 191, 955, 959.
\I\\{mp\_type}, \[173], 179, 243, 245, 254, 257, 261, 263, 266, 268, 269, 271,
272, 274, 275, 277, 278, 282, 283, 285, 287, 288, 460, 464, 471, 473, 475, 481,
484, 486, 487, 493, 494, 497, 510, 532, 536, 621, 626, 632, 637, 638, 639, 641,
646, 648, 649, 653, 658, 660, 663, 707, 729, 761, 806, 813, 814, 815, 903, 905,
907, 909, 922, 923, 931, 934, 935, 936, 940, 942, 947, 951, 959, 960, 961, 965,
969, 973, 982, 983, 988, 989, 990, 991, 992, 993, 996, 997, 998, 1002, 1004,
1016, 1017, 1019, 1021, 1023, 1024, 1029, 1037, 1039, 1041, 1043, 1049, 1112,
1114, 1118, 1125, 1127, 1270.
\I\\{mp\_type\_name}, 185, 931, 1032, 1046, 1047, 1097.
\I\\{mp\_type\_string}, \[188], 254, 1041, 1127.
\I\\{mp\_ul\_corner\_op}, 190, 191, 955, 959.
\I\\{mp\_unary}, 185, 931, 955, 956.
\I\\{mp\_und\_type}, \[288], 1039.
\I\\{mp\_undefined}, 186, 188, 278, 282, 283, 287, 288, 922, 936, 1112.
\I\\{mp\_undefined\_cs}, 185.
\I\\{mp\_unequal\_to}, 190, 191, 955, 988.
\I\\{mp\_unif\_rand}, \[157], 959.
\I\\{mp\_uniform\_deviate}, 190, 191, 955, 959.
\I\\{mp\_uninitialized\_model}, 201, 460, 959, 973, 1122, 1123, 1125, 1270.
\I\\{mp\_unknown\_boolean}, \[186], 188, 256, 288, 659, 902, 903, 959, 988.
\I\\{mp\_unknown\_op}, 190, 191, 955, 959.
\I\\{mp\_unknown\_path}, 186, 188, 288, 659, 902, 959, 1037, 1041.
\I\\{mp\_unknown\_pen}, 186, 188, 288, 659, 902, 959.
\I\\{mp\_unknown\_picture}, 186, 188, 288, 659, 902, 959.
\I\\{mp\_unknown\_string}, 186, 188, 288, 659, 902, 959, 988.
\I\\{mp\_unsave}, \[296], 931.
\I\\{mp\_unsave\_internal}, \[295], 296.
\I\\{mp\_unsave\_variable}, \[294], 296.
\I\\{mp\_unspecified\_mode}, 98, 100.
\I\\{mp\_unstash\_cur\_exp}, 781, \[904], \[905], 907, 931, 932, 947, 988, 996,
1007, 1008, 1009, 1037, 1039, 1041.
\I\\{mp\_unsuffixed\_macro}, 186, 188, 761, 902, 922, 935, 936, 1112, 1114.
\I\\{mp\_until\_token}, 185, 232, 233, 837.
\I\\{mp\_ur\_corner\_op}, 190, 191, 955, 959.
\I\\{mp\_userdata}, \[18], \[20].
\I\\{mp\_vacuous}, 186, 188, 243, 245, 288, 663, 836, 838, 902, 903, 904, 907,
908, 922, 934, 936, 940, 982, 985, 1032, 1039, 1041, 1125, 1132, 1136, 1154.
\I\\{mp\_val\_too\_big}, \[643], \[644], 646, 658.
\I\&{mp\_value}, \[161], 192, 212, 215, 284, 663, 707, 778, 779, 824, 839, 899,
900, 920, 931, 936, 938, 948, 951, 952, 953, 959, 968, 973, 974, 982, 983, 985,
988, 992, 998, 1005, 1028, 1031, 1032, 1041, 1051, 1075, 1102, 1125, 1132,
1134, 1136, 1138, 1146, 1154, 1178, 1183.
\I\&{mp\_value\_data}, \[161], 174, 251.
\I\&{mp\_value\_node}, \[161], 179, 181, 240, 251, 252, 253, 254, 256, 257,
258, 260, 261, 280, 282, 283, 621, 624, 625, 626, 627, 631, 632, 633, 634, 636,
637, 638, 639, 640, 641, 642, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655,
656, 657, 658, 907, 908, 909, 915, 922, 923, 926, 934, 940, 941, 942, 964, 965,
988, 991, 992, 993, 994, 996, 997, 1004, 1021, 1023, 1024, 1043, 1118.
\I\&{mp\_value\_node\_data}, 161, \[251], 254.
\I\\{mp\_value\_node\_type}, 186, 188, 254.
\I\\{mp\_variable\_type}, 161, 174, 186, 193, 636, 637, 638, 646, 649, 663,
729, 751, 792, 793, 903, 907, 922, 924, 925, 931, 932, 933, 936, 943, 959, 991,
1041, 1043, 1045, 1125, 1184.
\I\9{mp_verison_}{\&{mpversion} primitive}, 955.
\I\\{mp\_version}, 190, 191, 955, 957.
\I\.{MP\_VOID}, \[173], 696, 706, 789, 821, 825, 831, 833, 835, 903, 988, 990,
994, 1125.
\I\\{mp\_vppp}, 192, 200, 202, 203.
\I\9{mp_vppp_}{\&{vppp} primitive}, 200.
\I\\{mp\_warn}, \[114], \[116], 1052, 1251.
\I\\{mp\_warning\_check}, 192, 200, 203, 644, 974.
\I\9{mp_warning_check_}{\&{warningcheck} primitive}, 200.
\I\\{mp\_warning\_issued}, 104, 207, 1295.
\I\\{mp\_with\_option}, 185, 1122, 1123, 1125.
\I\\{mp\_within\_token}, 185, 232, 233, 825.
\I\\{mp\_write\_ascii\_file}, \[45], \[54].
\I\\{mp\_write\_binary\_file}, \[45], \[56].
\I\\{mp\_write\_command}, 185, 232, 233, 1032.
\I\\{mp\_x\_code}, 382, 383, 384, 387, 389, 393.
\I\\{mp\_x\_part}, 190, 191, 955, 959, 969, 973, 988.
\I\\{mp\_x\_part\_sector}, 189, 262, 266, 269, 280, 281.
\I\\{mp\_x\_retrace\_error}, \[512], \[513], 515, 517.
\I\\{mp\_x\_scaled}, 190, 191, 955, 988, 1002.
\I\\{mp\_xfree}, \[165], \[171], 220, 229, 230, 327, 445, 554, 948.
\I\\{mp\_xmalloc}, \[165], \[171], 224, 313, 315, 316.
\I\\{mp\_xrealloc}, \[165], \[171].
\I\\{mp\_xstrcmp}, 857, 985, 1156, 1235, 1236.
\I\\{mp\_xstrdup}, 165, 229, 230, 867, 985, 1097, 1268, 1270.
\I\\{mp\_xstrldup}, 228, 1270.
\I\\{mp\_xx\_part}, 190, 191, 955, 959, 969, 973, 988.
\I\\{mp\_xx\_part\_sector}, 189, 267, 269, 280, 281.
\I\\{mp\_xy\_part}, 190, 191, 955, 959, 969, 973, 988.
\I\\{mp\_xy\_part\_sector}, 189, 267, 269, 280, 281.
\I\\{mp\_y\_code}, 383, 384, 385, 386, 393.
\I\\{mp\_y\_part}, 190, 191, 955, 959, 969, 973, 988.
\I\\{mp\_y\_part\_sector}, 189, 262, 266, 269, 280, 281.
\I\\{mp\_y\_scaled}, 190, 191, 955, 988, 1002.
\I\\{mp\_year}, 192, 200, 203, 204, 878, 1251.
\I\9{mp_year_}{\&{year} primitive}, 200.
\I\\{mp\_yellow\_part}, 190, 191, 955, 959, 969, 973, 988.
\I\\{mp\_yellow\_part\_sector}, 189, 275, 280, 281.
\I\\{mp\_yx\_part}, 190, 191, 955, 959, 969, 973, 988.
\I\\{mp\_yx\_part\_sector}, 189, 267, 269, 280, 281.
\I\\{mp\_yy\_part}, 190, 191, 955, 959, 969, 973, 988.
\I\\{mp\_yy\_part\_sector}, 189, 267, 269, 280, 281.
\I\\{mp\_z\_scaled}, 190, 191, 955, 988, 1002.
\I\\{mpfr\_get\_version}, 5, 1069.
\I\.{MPFR\_VERSION\_STRING}, 5, 1069.
\I\\{mplib}, 3.
\I\\{mplib\_close\_file}, \[1059], \[1060], 1061.
\I\\{mplib\_data}, \[1059].
\I\\{mplib\_eof\_file}, \[1059], \[1060], 1061.
\I\\{mplib\_flush\_file}, \[1059], \[1060], 1061.
\I\\{mplib\_get\_char}, \[1059], \[1060].
\I\.{MPLIB\_H}, \[3].
\I\\{mplib\_open\_file}, \[1059], \[1060], 1061.
\I\\{mplib\_read\_ascii\_file}, \[1059], \[1060], 1061.
\I\\{mplib\_read\_binary\_file}, \[1059], \[1060], 1061.
\I\\{mplib\_shipout\_backend}, \[1059], \[1060], 1061.
\I\\{mplib\_unget\_char}, \[1059], \[1060].
\I\\{mplib\_write\_ascii\_file}, \[1059], \[1060], 1061.
\I\\{mplib\_write\_binary\_file}, \[1059], \[1060], 1061.
\I\.{MPMP\_H}, \[4].
\I\\{mpost}, 1250.
\I\\{mppsout}, 1270.
\I\9{mpx_break_}{\&{mpxbreak} primitive}, 735.
\I\\{mpx\_finished}, \[679], 732, 739.
\I\\{mpx\_in\_stack}, 679.
\I\\{mpx\_name}, \[679], 681, 683, 712, 713, 714, 717, 732, 739, 884, 1066.
\I\\{mpx\_reading}, \[679], 732, 739.
\I\\{msg}, \[114], \[115], \[116], \[135], \[137], \[644], \[710], \[711], %
\[721], \[722], \[724], 725, \[791], \[792], \[793], \[801], \[802], \[824], %
\[931], \[933], \[936], \[939], \[963], \[968], \[974], \[989], \[1029], %
\[1034], \[1039], \[1041], \[1043], \[1089], \[1092], \[1127], \[1152], %
\[1172], \[1181], \[1190].
\I\\{msg\_start}, \[724], 725.
\I\\{mtxname}, \[886], \[889], \[890].
\I\\{multiply\_int}, 15, 456.
\I\\{must\_quote}, \[849].
\I\\{my\_var\_flag}, 931, 936, \[947].
\I\|{n}, \[15], \[92], \[93], \[94], \[95], \[134], \[135], \[161], \[285], %
\[342], \[349], \[350], \[378], \[379], \[413], \[544], \[600], \[619], \[653],
\[656], \[657], \[658], \[681], \[698], \[749], \[761], \[784], \[786], \[787],
\[788], \[789], \[825], \[849], \[851], \[852], \[895], \[896], \[897], \[945],
\[974], \[975], \[976], \[985], \[994], \[1029], \[1030], \[1052], \[1053], %
\[1112], \[1154], \[1235], \[1236], \[1237], \[1251].
\I\\{n\_arg}, 15, 300, 343, 344, 360, 361, 373, \[456], 601, 952, 959, 977.
\I\\{n\_arg\_func}, 15.
\I\\{n\_cos}, \[305], \[309], \[959], \[1003].
\I\\{n\_sin}, \[305], \[309], \[959], \[1003].
\I\\{n\_sin\_cos}, 305, 309, 366, 373, \[456], 959, 1003.
\I\\{nam}, \[223], \[224], \[228].
\I\\{name}, 102, 256, 673, \[677], 678, 679, 684, 690, 692, 694, 695, 705, 712,
713, 714, 717, 732, 739, 779, 803, 880, 881, 884, 895, 957, 985, 1066, 1284.
\I\\{name\_field}, 123, \[673], 677, 679, 690.
\I\\{name\_length}, \[859].
\I\\{name\_of\_file}, \[47], 52, 850, 851, 857, 858, 859, 872, 873, 875, 880,
884, 885, 891, 1217, 1251, 1254, 1284.
\I\\{name\_type}, 173, 174, 178, 189, 235, 242, 251, 254, 256, 257, 260, 262,
280, 281, 667, 805, 903, 931.
\I\\{narg}, \[360], \[361], \[373], \[952], \[959].
\I\\{nd}, 1159, \[1167], 1206, 1218, 1224.
\I\\{ne}, 1159, \[1167], 1170, 1190, 1218, 1223, 1224.
\I\\{near\_zero\_angle\_k}, \[590].
\I\\{near\_zero\_angle\_t}, \[15], 590.
\I\\{need\_hull}, \[415].
\I\\{neg\_arc0}, \[412].
\I\\{neg\_dx0}, \[402].
\I\\{neg\_dx1}, \[402].
\I\\{neg\_dx2}, \[402].
\I\\{neg\_one\_eighty\_deg\_t}, 980.
\I\\{neg\_x}, \[405].
\I\\{negate}, 15, \[31], 456.
\I\\{negate\_cur\_expr}, 959, \[965].
\I\\{negate\_value}, \[965].
\I\\{new\_angle}, 348, 360, 361, 373, \[455], 600, 601, 952, 959, 980.
\I\\{new\_dep}, 649.
\I\\{new\_expr}, \[778], \[779], \[824], \[839], \[931], \[936], \[938], %
\[948], \[951], \[952], \[953], \[959], \[968], \[973], \[974], \[982], \[983],
\[985], \[988], \[992], \[998], \[1005], \[1028], \[1031], \[1032], \[1041], %
\[1051], \[1075], \[1102], \[1125], \[1132], \[1134], \[1136], \[1138], 1139, %
\[1146], \[1154], \[1178], \[1183], 1189, 1192.
\I\\{new\_fraction}, 152, 157, 305, 309, 343, 348, 350, 353, 354, 356, 363,
365, 368, 371, 372, 374, 387, 429, 431, 446, 450, 452, 454, \[455], 467, 527,
529, 530, 544, 561, 562, 572, 576, 580, 583, 590, 591, 593, 597, 598, 600, 601,
637, 655, 959, 988, 991, 993, 994, 997, 1003.
\I\\{new\_if\_limit}, \[817].
\I\9{new_internal_}{\&{newinternal} primitive}, 232.
\I\\{new\_number}, 155, 157, 158, 178, 196, 219, 224, 239, 254, 283, 295, 306,
313, 316, 343, 344, 348, 353, 354, 355, 356, 357, 358, 362, 363, 365, 366, 371,
372, 373, 374, 375, 382, 385, 387, 390, 391, 392, 396, 397, 401, 402, 403, 405,
408, 409, 410, 412, 413, 421, 426, 434, 437, 441, 444, 446, 448, 450, 452, 454,
\[455], 460, 464, 467, 471, 481, 484, 489, 494, 497, 504, 510, 515, 518, 520,
522, 523, 524, 525, 527, 529, 530, 534, 537, 538, 539, 544, 552, 559, 561, 562,
563, 566, 568, 569, 570, 572, 574, 575, 576, 580, 583, 590, 591, 600, 601, 606,
611, 615, 619, 632, 633, 637, 638, 639, 641, 642, 646, 653, 654, 655, 657, 658,
707, 778, 779, 824, 825, 839, 900, 907, 923, 925, 927, 931, 936, 938, 943, 948,
951, 952, 953, 957, 959, 968, 973, 974, 979, 980, 982, 983, 985, 988, 991, 992,
993, 994, 996, 997, 998, 1000, 1003, 1005, 1006, 1009, 1010, 1012, 1015, 1017,
1021, 1023, 1024, 1026, 1027, 1028, 1030, 1031, 1032, 1041, 1043, 1051, 1075,
1097, 1102, 1125, 1132, 1134, 1136, 1138, 1146, 1154, 1172, 1178, 1183, 1196,
1198, 1200, 1201, 1202, 1209, 1210, 1212, 1222, 1223, 1241, 1251, 1270, 1271.
\I\\{new\_number\_func}, 15.
\I\\{new\_randoms}, 150.
\I\\{new\_string}, \[77], 85, 86, 88, 91, 725, 791, 792, 801, 931, 933, 939,
959, 963, 968, 989, 1034, 1125, 1127, 1251.
\I\\{new\_symbols\_entry}, \[223], \[224], 226, 228.
\I\\{new\_text\_node}, 469, 1031.
\I\\{newsize}, \[680], \[681].
\I\\{newtype}, 649.
\I\\{next}, 168, \[297], \[298], 313, 316, 327, 375, 376, 378, 1060, 1270, 1271.
\I\\{next\_char}, \[1164], 1184, 1189, 1220.
\I\\{next\_fmem}, \[1227], 1232.
\I\\{next\_random}, 156.
\I\\{nh}, 1159, \[1167], 1206, 1218, 1224.
\I\\{ni}, 1159, \[1167], 1206, 1218, 1224.
\I\\{nice\_color\_or\_pair}, 961.
\I\\{nice\_pair}, 960.
\I\\{nk}, 1159, \[1167], 1170, 1189, 1218, 1222, 1224.
\I\\{nl}, 1159, 1164, \[1167], 1170, 1184, 1187, 1188, 1189, 1218, 1220, 1222,
1224.
\I\\{nloc}, \[684], 693, 695, 702, 705, 709, 729, 774, 803, 883, 1066.
\I\\{nloc\_field}, \[673], 684.
\I\\{nmem}, \[165], \[171].
\I\\{nn}, \[283], \[619], \[1251].
\I\\{nn1}, \[283].
\I\.{No loop is in progress}, 775.
\I\\{no\_bounds}, \[483], 532.
\I\\{no\_model}, 201.
\I\\{no\_print}, \[77], 85, 86, 91, 103, 140.
\I\\{no\_tag}, \[1163], 1170, 1180.
\I\\{node}, \[161], 212, 213, 236, 237, 254, 294, 663, 667, 749, 794, 836, 838,
839, 898, 973, 983, 1031, 1041.
\I\.{NODE\_BODY}, \[174], 251, 262, 267, 270, 273, 458, 462, 469, 473, 477,
482, 805.
\I\\{nonequalabs}, 15, 456.
\I\\{noninteractive}, 12, 16, 69, 96, \[99], 115, 733, 867, 873, 875, 957,
1067, 1260, 1284, 1287.
\I\\{nonlinear\_eq}, 663.
\I\\{normal}, \[719], 720, 721, 758, 761, 797, 805, 808, 811, 829, 1035, 1050,
1066.
\I\9{normal_deviate_}{\&{normaldeviate} primitive}, 955.
\I\\{normal\_sym}, 235.
\I\.{Not a string}, 778, 1148.
\I\.{Not implemented...}, 963, 989.
\I\9{not_}{\&{not} primitive}, 955.
\I\\{not\_found}, 613, 985.
\I\.{NOT\_FOUND}, \[510], 511, 515, 516, 517, \[544], 559, \[613], \[831], 834,
\[884], \[895], \[973], \[985].
\I\\{np}, 1159, \[1167], 1170, 1192, 1218, 1223, 1224.
\I\\{nstart}, \[684], 702, 705, 706, 776, 1066.
\I\\{nstart\_field}, \[673], 684.
\I\\{nuline}, \[206], \[209], \[310], \[311], \[422], \[423], \[496], \[497].
\I\\{null}, 277, 792, 1049, 1094, 1106.
\I\\{null\_dash}, 181, 477, 479, 480, 484, 486, 488, 489, 492, 504, 506, 510,
517, 518, 520, 522, 524, 1009, 1011, 1012.
\I\\{null\_font}, 1228, \[1232].
\I\9{null_pen_}{\&{nullpen} primitive}, 955.
\I\9{null_picture_}{\&{nullpicture} primitive}, 955.
\I\\{null\_tally}, \[244], \[245].
\I\\{nullfont\_name}, \[1232].
\I\\{nullfont\_psname}, \[1232].
\I\\{num}, \[15], \[365], \[931].
\I\\{num\_dashes}, \[489].
\I\\{num\_knot\_nodes}, \[166], 167, 313, 316, 327.
\I\\{num\_pair\_nodes}, \[166], 167, 263, 265.
\I\\{num\_symbolic\_nodes}, \[166], 167, 178, 179.
\I\\{num\_token\_nodes}, \[166], 167, 239, 240.
\I\\{num\_value\_nodes}, \[166], 167, 179, 254.
\I\\{number\_abs}, 157, 158, 306, 354, 355, 358, 362, 363, 371, 372, 374, 390,
396, 450, \[456], 467, 518, 559, 562, 572, 590, 591, 600, 601, 632, 633, 637,
638, 639, 641, 646, 654, 655, 657, 658, 923, 931, 959, 993, 997, 1010, 1043,
1172, 1210, 1223.
\I\\{number\_abs\_func}, 15.
\I\\{number\_add}, 155, 357, 358, 362, 363, 365, 371, 396, 397, 399, 401, 405,
408, 411, 413, 429, 450, 452, \[456], 506, 522, 523, 524, 525, 530, 534, 537,
538, 572, 583, 585, 591, 597, 600, 609, 613, 619, 975, 976, 980, 991, 1006,
1021, 1023, 1026, 1027, 1030, 1043.
\I\\{number\_add\_func}, 15.
\I\\{number\_add\_scaled}, 401, 403, 410, \[456], 572, 632, 831, 1030, 1172,
1209.
\I\\{number\_add\_scaled\_func}, 15.
\I\\{number\_clone}, 17, 155, 156, 157, 158, 193, 202, 219, 236, 260, 283, 295,
306, 316, 324, 331, 334, 343, 351, 354, 355, 356, 357, 358, 362, 363, 365, 366,
371, 372, 374, 387, 388, 390, 391, 393, 396, 397, 401, 402, 403, 405, 409, 410,
412, 413, 416, 417, 425, 427, 429, 431, 446, 450, 452, 453, 454, \[456], 460,
464, 467, 488, 489, 490, 494, 504, 506, 510, 514, 515, 517, 518, 520, 522, 525,
526, 529, 530, 534, 537, 538, 539, 541, 554, 559, 561, 562, 563, 564, 565, 570,
571, 572, 576, 580, 588, 589, 590, 591, 593, 596, 597, 598, 600, 601, 609, 613,
618, 619, 620, 624, 632, 633, 637, 638, 639, 641, 642, 646, 654, 655, 657, 658,
667, 707, 831, 837, 898, 907, 923, 925, 931, 943, 948, 949, 951, 952, 959, 968,
973, 974, 980, 983, 984, 988, 991, 992, 993, 994, 996, 997, 998, 1003, 1006,
1009, 1010, 1017, 1018, 1021, 1024, 1026, 1027, 1028, 1030, 1041, 1043, 1066,
1125, 1172, 1189, 1192, 1196, 1200, 1201, 1202, 1209, 1210, 1222, 1223, 1242,
1251.
\I\\{number\_clone\_func}, 15.
\I\\{number\_divide\_int}, \[456], 648, 657, 923, 1209.
\I\\{number\_divide\_int\_func}, 15.
\I\\{number\_double}, 354, 362, 363, 365, 390, 397, 401, 405, 408, 450, 454, %
\[456], 467, 559, 591, 601, 613, 618, 980.
\I\\{number\_double\_func}, 15.
\I\\{number\_equal}, 157, 283, 304, 306, 331, 354, 355, 442, 443, \[456], 516,
549, 563, 613, 632, 925, 948, 980, 1021, 1026, 1027, 1041, 1189.
\I\\{number\_equal\_func}, 15.
\I\\{number\_floor\_func}, 15.
\I\\{number\_from\_addition\_func}, 15.
\I\\{number\_from\_boolean\_func}, 15.
\I\\{number\_from\_div\_func}, 15.
\I\\{number\_from\_double\_func}, 15.
\I\\{number\_from\_int\_div\_func}, 15.
\I\\{number\_from\_int\_func}, 15.
\I\\{number\_from\_int\_mul\_func}, 15.
\I\\{number\_from\_mul\_func}, 15.
\I\\{number\_from\_oftheway\_func}, 15.
\I\\{number\_from\_scaled\_func}, 15.
\I\\{number\_from\_substraction\_func}, 15.
\I\\{number\_greater}, 283, 358, 388, 390, 398, 399, 407, 413, 436, 442, 453, %
\[456], 460, 464, 467, 515, 517, 518, 525, 526, 530, 541, 559, 563, 570, 572,
593, 601, 609, 633, 637, 654, 769, 775, 817, 831, 832, 923, 957, 959, 980, 984,
988, 994, 1027, 1028, 1030, 1037, 1039, 1043, 1125, 1202, 1210, 1242.
\I\\{number\_greater\_func}, 15.
\I\\{number\_greaterequal}, 158, 365, 375, 402, 405, 408, 436, \[456], 561,
562, 601, 637, 638, 639, 641, 646, 658, 923, 931, 980, 1027, 1030, 1172, 1204,
1206, 1209.
\I\\{number\_half}, 397, 400, 401, 403, 406, 407, 408, 452, \[456], 575, 576,
583, 618.
\I\\{number\_half\_func}, 15.
\I\\{number\_halfp}, 396, 397, 401, 403, 407, \[456], 1202.
\I\\{number\_halfp\_func}, 15.
\I\\{number\_infinite}, 401, 408, 410, \[456].
\I\\{number\_int\_div}, 374, \[456].
\I\\{number\_less}, 355, 387, 388, 390, 391, 396, 401, 405, 435, 443, 450, 453,
\[456], 460, 464, 467, 514, 515, 517, 523, 525, 526, 530, 538, 541, 559, 583,
590, 591, 600, 601, 609, 613, 637, 638, 641, 831, 832, 948, 991, 1028, 1039,
1183, 1195, 1196, 1209, 1223.
\I\\{number\_less\_func}, 15.
\I\\{number\_lessequal}, 365, 389, 396, 402, 403, 435, \[456], 522, 525, 601,
639, 641, 655, 657, 980, 1013, 1027, 1195, 1196, 1201, 1202.
\I\\{number\_modulo}, \[456], 506, 959, 1003, 1030.
\I\\{number\_modulo\_func}, 15.
\I\\{number\_multiply\_int}, 202, 204, 354, 374, \[456], 467, 959, 973, 974,
1003, 1052, 1209, 1210, 1251.
\I\\{number\_multiply\_int\_func}, 15.
\I\\{number\_negate}, 157, 356, 362, 363, 366, 373, 387, 391, 396, 397, 401,
402, 405, 408, 412, 429, 431, 452, 454, \[456], 504, 506, 527, 529, 538, 562,
563, 570, 576, 600, 601, 619, 655, 923, 948, 964, 965, 980, 991, 1003, 1004,
1030, 1043, 1170, 1172, 1210.
\I\\{number\_negate\_func}, 15.
\I\\{number\_negative}, 155, 158, 245, 306, 371, 372, 387, 397, 405, 410, 411,
441, 446, \[456], 504, 506, 530, 538, 562, 568, 572, 574, 575, 601, 609, 632,
831, 832, 952, 959, 988, 1010, 1015, 1017, 1027, 1030, 1125, 1251, 1271.
\I\\{number\_nonequalabs}, \[456], 1010.
\I\\{number\_nonequalabs\_func}, 15.
\I\\{number\_nonnegative}, 372, 374, 402, \[456], 566, 569, 601, 609, 988, 993,
997.
\I\\{number\_nonpositive}, 207, 372, 402, 405, 444, \[456], 532, 535, 601, 609,
914, 988.
\I\\{number\_nonzero}, 390, \[456], 601, 632, 980, 988, 1010, 1013, 1017, 1021,
1024, 1026, 1030.
\I\\{number\_odd}, \[456].
\I\\{number\_odd\_func}, 15.
\I\\{number\_positive}, 157, 281, 294, 295, 328, 358, 372, 391, 410, 413, 437,
446, 452, \[456], 460, 464, 502, 515, 527, 530, 532, 535, 563, 568, 570, 574,
576, 581, 600, 601, 609, 619, 632, 644, 646, 653, 733, 784, 794, 801, 831, 832,
923, 925, 931, 974, 988, 1027, 1028, 1032, 1120, 1172, 1210, 1217, 1223, 1239,
1273, 1287, 1291.
\I\\{number\_round\_func}, 15.
\I\\{number\_substract}, 158, 354, 356, 358, 365, 366, 371, 396, 397, 398, 399,
401, 403, 405, 411, 413, 454, \[456], 467, 598, 613, 975, 980, 1027, 1030,
1196, 1209.
\I\\{number\_substract\_func}, 15.
\I\\{number\_swap}, \[456], 1011, 1014, 1015, 1027.
\I\\{number\_swap\_func}, 15.
\I\\{number\_to\_boolean}, \[456], 908, 988.
\I\\{number\_to\_boolean\_func}, 15.
\I\\{number\_to\_double}, 6, 317, 358, 378, \[456], 489, 979, 1270.
\I\\{number\_to\_double\_func}, 15.
\I\\{number\_to\_int}, \[456], 667, 898.
\I\\{number\_to\_int\_func}, 15.
\I\\{number\_to\_scaled}, 6, \[456], 613, 650, 655, 667, 948, 959, 988, 1066,
1076, 1209, 1210, 1216, 1223, 1242, 1243, 1270, 1275, 1299.
\I\\{number\_to\_scaled\_func}, 15.
\I\\{number\_tostring}, 236, \[456], 644, 1039, 1043.
\I\\{number\_unity}, 362, 363, 374, \[456].
\I\\{number\_zero}, 344, 356, 450, \[456], 489, 504, 506, 520, 528, 548, 559,
564, 565, 574, 575, 576, 597, 598, 600, 601, 648, 908, 931, 952, 977, 979, 988,
1013, 1030, 1209.
\I\9{numeric_}{\&{numeric} primitive}, 1046.
\I\\{numeric\_token}, 185, 931, 936, 943.
\I\\{numeric\_type}, 186, 256.
\I\\{nw}, 1159, \[1167], 1204, 1218, 1224.
\I\\{n0}, \[985], \[1154], 1156.
\I\\{n1}, \[413].
\I\|{o}, \[229], \[230].
\I\\{obj\_tail}, \[484], 492, 497, 1031, 1134, 1136.
\I\\{obj\_tail\_}, \[482], 484.
\I\9{oct_}{\&{oct} primitive}, 955.
\I\\{odd}, 15, \[31], 456, 613, 959.
\I\9{odd_}{\&{odd} primitive}, 955.
\I\\{of}, 679.
\I\9{of_}{\&{of} primitive}, 232.
\I\\{offset}, 489.
\I\\{offset\_prep}, 543, 545, 549, 555, 564, 580, 582.
\I\.{OK}, 1120.
\I\\{ok\_to\_dash}, \[497], 504.
\I\\{OK\_to\_interrupt}, 127, \[138], 139, 140, 711, 931.
\I\\{old\_cur\_file}, \[1284].
\I\\{old\_exp}, \[988], \[994].
\I\\{old\_in\_open}, \[1284].
\I\\{old\_info}, \[739], 740.
\I\\{old\_p}, \[988].
\I\\{old\_selector}, \[933].
\I\\{old\_setting}, 207, \[208], \[692], 693, \[725], \[791], \[792], \[801], %
\[875], \[931], \[939], 959, \[963], \[968], \[980], \[989], \[1034], 1076, %
\[1125], \[1127], \[1154], 1155, \[1251].
\I\\{old\_state}, \[1284].
\I\\{old\_status}, \[739], 740.
\I\\{one\_eighty\_deg\_t}, \[15], \[148], 358, 601, 980.
\I\\{one\_k}, \[15], \[145], 158.
\I\\{one\_third\_inf\_t}, \[15], \[407].
\I\\{ont\_max}, 1226.
\I\\{op\_byte}, \[1164], 1184, 1189, 1220.
\I\\{op\_defining}, \[719], 725, 727, 758, 761.
\I\\{open}, 300, 344, 948, 952.
\I\.{open?}, 304, 308.
\I\\{open\_file}, 16, \[43], 52, 66, 857, 1061.
\I\\{open\_in}, 50.
\I\\{open\_log\_file}, 875, 877, 880, 1284.
\I\\{open\_parens}, \[679], 717, 732, 880, 1066, 1284, 1295.
\I\\{opt}, \[8], \[9], 11, \[16], \[18], 28, 49, 51, 100, 152, 164, 196, 854,
867.
\I\9{or_}{\&{or} primitive}, 955.
\I\\{or\_op}, 190, 988.
\I\\{ord}, 36.
\I\\{origin}, 977.
\I\\{originator}, \[297], \[298], \[301].
\I\\{origname}, \[884], 885, \[886], \[889], \[890], 891.
\I\.{Ouch...clobbered}, 16.
\I\\{out\_angle}, 980.
\I\\{out\_of\_range}, \[375].
\I\9{outer_}{\&{outer} primitive}, 1081.
\I\\{outer\_tag}, 729.
\I\\{output\_file}, \[77], 1251.
\I\\{overflow}, 1286.
\I{overflow in arithmetic}, 142, 617, 991.
\I\|{p}, \[165], \[168], \[170], \[171], \[176], \[177], \[178], \[179], %
\[180], \[184], \[217], \[218], \[219], \[220], \[239], \[240], \[241], \[242],
\[243], \[244], \[245], \[246], \[247], \[249], \[250], \[254], \[257], \[261],
\[263], \[264], \[265], \[266], \[268], \[269], \[271], \[272], \[274], \[275],
\[277], \[278], \[279], \[280], \[281], \[282], \[283], \[285], \[286], \[287],
\[288], \[289], \[293], \[294], \[295], \[296], \[303], \[316], \[317], \[318],
\[319], \[320], \[321], \[323], \[324], \[326], \[327], \[328], \[349], \[350],
\[370], \[371], \[375], \[376], \[377], \[378], \[379], \[382], \[387], \[393],
\[409], \[410], \[415], \[419], \[424], \[434], \[439], \[440], \[446], \[453],
\[460], \[461], \[464], \[465], \[467], \[472], \[475], \[476], \[481], \[484],
\[485], \[486], \[487], \[489], \[491], \[492], \[495], \[497], \[501], \[502],
\[510], \[527], \[532], \[544], \[551], \[552], \[553], \[554], \[560], \[561],
\[577], \[580], \[589], \[600], \[613], \[619], \[621], \[622], \[624], \[625],
\[626], \[627], \[631], \[632], \[633], \[636], \[637], \[638], \[639], \[640],
\[641], \[642], \[645], \[646], \[648], \[649], \[651], \[652], \[653], \[654],
\[655], \[656], \[657], \[658], \[660], \[661], \[662], \[663], \[664], \[698],
\[705], \[706], \[707], \[709], \[721], \[748], \[761], \[776], \[777], \[784],
\[787], \[797], \[804], \[806], \[814], \[815], \[817], \[825], \[831], \[835],
\[862], \[864], \[903], \[904], \[905], \[906], \[907], \[915], \[917], \[918],
\[921], \[922], \[924], \[925], \[931], \[932], \[934], \[936], \[937], \[940],
\[941], \[942], \[943], \[944], \[945], \[946], \[947], \[951], \[959], \[960],
\[961], \[964], \[965], \[968], \[969], \[973], \[975], \[976], \[980], \[982],
\[983], \[988], \[989], \[990], \[991], \[992], \[993], \[996], \[997], \[998],
\[1006], \[1007], \[1008], \[1009], \[1019], \[1021], \[1023], \[1024], %
\[1026], \[1027], \[1028], \[1029], \[1030], \[1031], \[1037], \[1039], %
\[1041], \[1043], \[1049], \[1052], \[1111], \[1112], \[1118], \[1124], %
\[1125], \[1127], \[1134], \[1136], \[1172], \[1195], \[1196], \[1201], %
\[1240], \[1241], \[1251], \[1270], \[1287].
\I\\{p\_next}, \[980].
\I\\{p\_nextnext}, \[980].
\I\\{p\_over\_v\_threshold\_k}, \[641].
\I\\{p\_over\_v\_threshold\_t}, \[15], 641.
\I\\{p\_plus\_fq}, 634, 636, 638, 642.
\I\\{p\_sym}, \[283].
\I\\{p\_with\_x\_becoming\_q}, 642.
\I\\{pa}, \[217], \[218].
\I\\{pack\_cur\_name}, \[870], 871, 873, 895, 897.
\I\\{page}, 679.
\I\\{page\_stack}, \[679].
\I\9{pair_}{\&{pair} primitive}, 1046.
\I\\{pair\_node\_size}, 168, \[263], 265.
\I\\{pair\_nodes}, \[166], 167, 168, 263, 265.
\I\\{pair\_to\_path}, 966.
\I\\{pair\_type}, 186.
\I\\{pair\_value}, 983.
\I\\{param}, 1161, 1166, \[1167], 1169, 1183, 1192, 1223.
\I\\{param\_ptr}, \[685], 705, 706, 717, 803, 804, 1066.
\I\\{param\_size}, \[25], 28, 686, 687, 1292.
\I\\{param\_stack}, 684, \[685], 686, 687, 688, 696, 697, 706, 729, 783, 803,
804.
\I\\{param\_start}, \[684], 696, 697, 705, 706, 729.
\I\\{parameter}, \[684], 695, 729.
\I\\{parent}, \[215], 219, 220, 224, \[256], 280, 282, 1270.
\I\\{parent\_}, \[251], 254, 256, 624.
\I\\{part\_type}, \[988].
\I\.{Path at line...}, 311.
\I\9{path_}{\&{path} primitive}, 1046.
\I\\{path\_bbox}, 526.
\I\\{path\_intersection}, 619.
\I\\{path\_join}, 948.
\I\\{path\_needs\_fixing}, \[376].
\I\\{path\_p}, 469, 473, \[948].
\I\\{path\_p\_}, \[458], \[462], \[473], 475.
\I\9{path_part_}{\&{pathpart} primitive}, 955.
\I\\{path\_q}, \[948].
\I\\{path\_size}, \[340], 341, 343, 346, 348.
\I\\{path\_tail}, 324, \[325], 595.
\I\\{path\_trans}, 988, \[1007].
\I\.{Paths don't touch}, 948.
\I\\{pb}, \[217], \[218].
\I\\{pc}, \[1270].
\I\.{Pen at line...}, 423.
\I\9{pen_}{\&{pen} primitive}, 1046.
\I\\{pen\_bbox}, 526.
\I\9{pen_circle_}{\&{pencircle} primitive}, 955.
\I\\{pen\_is\_elliptical}, \[416], 417, 419, 424, 434, 446, 453, 504, 1008,
1017, 1028, 1270.
\I\9{pen_offset_}{\&{penoffset} primitive}, 955.
\I\\{pen\_p}, 458.
\I\\{pen\_p\_}, \[458], \[462].
\I\9{pen_part_}{\&{penpart} primitive}, 955.
\I\\{pen\_trans}, 988, \[1008].
\I\9{pencircle_}{\&{pencircle} primitive}, 416.
\I\\{percent\_class}, \[210], 211, 245, 729.
\I\\{period\_class}, \[210], 211, 729.
\I\\{perturbation}, 1196, \[1197], 1198, 1199, 1200, 1201, 1202, 1203, 1204,
1206.
\I\\{ph}, \[1271].
\I\\{phi}, \[600], 601.
\I\.{PI}, \[375].
\I\\{pict\_color\_type}, \[959].
\I\9{picture_}{\&{picture} primitive}, 1046.
\I\\{pixman\_version\_string}, 5, 1069.
\I\.{PIXMAN\_VERSION\_STRING}, 5, 1069.
\I\\{pk}, \[959].
\I\.{plain}, 857.
\I\.{Please type...}, 873.
\I\\{plus}, 991.
\I\\{plus\_or\_minus}, 185, 931.
\I\\{pn}, \[1271].
\I\\{png}, \[1279].
\I\\{png\_libpng\_ver}, 5, 1069.
\I\.{PNG\_LIBPNG\_VER\_STRING}, 5, 1069.
\I\&{pngout\_data}, \[4], 1279.
\I\\{pngout\_data\_struct}, 4.
\I\9{point_}{\&{point} primitive}, 955.
\I\\{pool\_in\_use}, \[76], 1110.
\I\\{pool\_size}, \[25], 28.
\I\\{pop\_input}, \[704], 706, 713, 715.
\I\\{post\_head}, 935, \[936], 939.
\I\\{post\_script\_}, \[458], \[462], \[469].
\I\9{postcontrol_}{\&{postcontrol} primitive}, 955.
\I\9{postscript_part_}{\&{postscriptpart} primitive}, 955.
\I\\{pp}, \[176], \[283], \[294], \[318], \[319], \[321], \[324], \[487], 488,
490, \[492], 493, 494, \[510], 514, 515, \[527], 529, 530, \[613], 617, \[619],
\[632], \[637], \[638], \[657], \[696], \[697], \[748], \[923], \[948], \[996],
\[1019], 1022, \[1027], \[1043], \[1125], \[1270].
\I\\{ppd}, \[504].
\I\\{pr\_path}, 310.
\I\\{pr\_pen}, 422.
\I\\{pre\_head}, 935, \[936], 939.
\I\\{pre\_script\_}, \[458], \[462], \[469].
\I\\{precision\_default}, \[15], \[145], 202.
\I\\{precision\_max}, \[15], \[145], 1039.
\I\\{precision\_min}, \[15], \[145], 1039.
\I\9{precontrol_}{\&{precontrol} primitive}, 955.
\I\\{prefix}, \[6], \[7].
\I\9{prescript_part_}{\&{prescriptpart} primitive}, 955.
\I\\{prev}, \[297], \[298].
\I\\{prev\_dep}, \[624], 646, 903, 922, 923, 934, 991, 1043.
\I\\{prev\_knot}, 415.
\I\\{prev\_r}, \[653].
\I\9{primary_}{\&{primary} primitive}, 759.
\I\\{primary\_binary}, 190, 955.
\I\9{primary_def_}{\&{primarydef} primitive}, 745.
\I\\{primitive}, 16, 200, 229, 233, 670.
\I\\{print}, 15, 77, 88, 91, 456, 1292.
\I\\{print\_char}, 86, 87, 88.
\I\\{print\_cmd\_mod}, 233, 670, 1104, 1106.
\I\\{print\_err}, 97, 101.
\I\\{print\_exp}, 696, 1101.
\I\\{print\_found\_names}, \[48], 49, 52.
\I\\{print\_func}, 15.
\I\\{print\_ln}, 83, 86.
\I\\{print\_nl}, 91.
\I\\{print\_number}, 147, 245, 295, 305, 306, 309, 421, \[456], 499, 502, 504,
507, 632, 646, 908, 909, 925, 959, 995, 1076, 1105, 1203, 1251.
\I\\{print\_variable\_name}, 279.
\I\\{print\_visible\_char}, 86, 87.
\I\\{print\_with\_leading\_zeroes}, \[1143], 1251.
\I\\{printf}, 6, 173, 749.
\I\\{private\_edges}, 1009, 1126.
\I\.{PROGRESSION\_FLAG}, \[821], 831, 835, 837.
\I\\{prompt\_file\_name}, 101, 877.
\I\\{prompt\_input}, \[96], 117, 126, 732, 733, 873, 957.
\I\\{ps}, \[1279].
\I\\{pseudo}, \[77], 85, 86, 87, 91, 699.
\I\\{psi}, \[340], 341, 343, 348, 356, 362, 366.
\I\\{psout}, 1250.
\I\&{psout\_data}, \[4], 1279.
\I\\{psout\_data\_struct}, 4.
\I\\{pt}, \[1271].
\I\\{push\_input}, \[703], 705, 712, 714.
\I\\{pval}, \[89].
\I\\{pyth\_add}, 15, 343, 401, 408, 452, \[456], 527, 597, 598, 959, 988.
\I\\{pyth\_add\_func}, 15.
\I\\{pyth\_sub}, 15, \[456], 988.
\I\\{pyth\_sub\_func}, 15.
\I\\{p0}, \[502], \[507], \[510], 516, \[538], \[973], \[984], \[1270].
\I\\{p1}, \[283].
\I\|{q}, \[184], \[243], \[244], \[245], \[250], \[266], \[269], \[272], %
\[275], \[277], \[280], \[282], \[283], \[285], \[287], \[289], \[294], \[295],
\[303], \[313], \[315], \[316], \[317], \[318], \[319], \[320], \[321], \[323],
\[324], \[327], \[328], \[349], \[350], \[370], \[371], \[375], \[377], \[382],
\[387], \[393], \[409], \[410], \[415], \[419], \[434], \[439], \[440], \[446],
\[486], \[489], \[491], \[492], \[527], \[544], \[552], \[554], \[561], \[577],
\[580], \[587], \[588], \[600], \[613], \[624], \[632], \[636], \[637], \[638],
\[642], \[645], \[646], \[648], \[649], \[651], \[652], \[653], \[654], \[655],
\[660], \[662], \[663], \[664], \[698], \[748], \[758], \[761], \[784], \[787],
\[788], \[789], \[815], \[825], \[831], \[835], \[862], \[864], \[915], \[923],
\[931], \[932], \[934], \[936], \[939], \[940], \[941], \[942], \[945], \[949],
\[961], \[965], \[988], \[990], \[991], \[992], \[993], \[996], \[997], \[998],
\[1006], \[1007], \[1008], \[1009], \[1019], \[1021], \[1024], \[1027], %
\[1028], \[1031], \[1039], \[1041], \[1043], \[1049], \[1112], \[1125], %
\[1195], \[1201].
\I\\{q\_new}, \[282].
\I\\{qi}, \[160], 1184, 1187, 1188, 1189, 1190, 1220.
\I\\{qm}, \[758].
\I\\{qn}, \[758].
\I\\{qo}, \[160], 1187, 1188, 1216.
\I\\{qq}, \[254], 256, \[282], \[283], \[318], \[319], \[321], \[324], \[510],
514, 515, \[613], 617, \[637], \[638], \[653], \[697], \[761], \[922], \[931], %
\[936], \[948], \[991], \[1016], 1017, \[1019], 1022, \[1027], \[1125].
\I\\{qqq}, 256.
\I\\{qqqq}, \[161], 1227, 1233.
\I\\{qqq1}, 256.
\I\\{qqq2}, 256.
\I\\{qqr}, \[282].
\I\\{qq1}, 256.
\I\\{qq2}, 256.
\I\\{quad}, 1166.
\I\\{quad\_code}, \[1166].
\I\&{quarterword}, 159, 160, \[161], 187, 188, 191, 245, 266, 269, 272, 275,
288, 290, 382, 387, 424, 475, 492, 580, 631, 632, 639, 640, 641, 642, 653, 655,
673, 705, 711, 712, 714, 729, 747, 748, 761, 788, 789, 803, 807, 813, 815, 817,
831, 906, 907, 915, 923, 931, 936, 952, 956, 957, 959, 960, 961, 962, 963, 967,
968, 969, 973, 974, 982, 985, 988, 989, 991, 992, 993, 997, 998, 1005, 1009,
1019, 1030, 1043, 1047, 1049, 1130, 1131, 1132, 1134, 1136, 1171, 1172, 1179,
1180, 1203, 1270.
\I\\{quote}, 748, \[753].
\I\9{quote_}{\&{quote} primitive}, 753.
\I\\{quoted\_filename}, \[844], 846, 847.
\I\\{qx}, \[580].
\I\\{qy}, \[580].
\I\\{q0}, \[544], 549, \[580], \[1125].
\I\\{q1}, 256.
\I\|{r}, \[15], \[158], \[245], \[250], \[280], \[282], \[283], \[285], \[287],
\[327], \[350], \[382], \[434], \[486], \[529], \[544], \[552], \[580], \[588],
\[590], \[637], \[638], \[639], \[641], \[642], \[648], \[649], \[653], \[654],
\[655], \[657], \[663], \[664], \[758], \[761], \[784], \[923], \[931], \[932],
\[942], \[945], \[948], \[957], \[965], \[988], \[990], \[991], \[996], \[998],
\[1009], \[1019], \[1021], \[1023], \[1042], \[1043], \[1179], \[1180], %
\[1195], \[1201].
\I\\{r\_delim}, \[761], \[784], 791, 792, 793, 795, \[796], \[797], 798, 802, %
\[931], \[1087], \[1088], \[1089].
\I\.{R\_OK}, 44, 46.
\I\\{r\_packets}, \[605], 613, 617.
\I\\{rabs}, \[654].
\I{Ramshaw, Lyle Harold}, 1158.
\I\\{random\_seed}, 150, \[151], 152, 1066, 1299.
\I\\{randoms}, \[150], 152, 153, 155, 156.
\I\\{rd\_file}, \[893], 894, 895, \[985], 1289, 1290.
\I\\{rd\_fname}, \[893], 894, 895, \[985], 1289, 1290.
\I\\{read\_ascii\_file}, 16, \[43], 64, 1061.
\I\\{read\_binary\_file}, 16, 43, 1061.
\I\\{read\_files}, \[893], 985, 1289.
\I\\{read\_font\_info}, 1234.
\I\9{read_from_}{\&{readfrom} primitive}, 892, 955.
\I\9{read_string_}{\&{readstring} primitive}, 955.
\I\&{readf\_index}, \[892], 893, 895, 896, 897, 985.
\I\\{reading\_preload}, \[138], 713, 1284.
\I\\{realloc}, 53, 171.
\I\\{realmode}, \[46], \[1060].
\I{recursion}, 107, 115, 244, 284, 396, 485, 532, 765, 782, 817, 898, 1036,
1104.
\I\\{red}, \[458], 460, 461, \[462], 464, 465, \[469], 471, 472, 494, 502, 516,
973, 1125.
\I\\{red\_part}, \[270], 272, 281, 912, 922, 931, 940, 961, 965, 969, 982, 988,
990, 994, 996, 1041, 1125.
\I\\{red\_part\_}, \[270].
\I\9{red_part_}{\&{redpart} primitive}, 955.
\I\\{ref\_count}, \[248], 249.
\I\\{ref\_count\_}, \[482], 484.
\I{reference counts}, 248, 684.
\I\\{refs}, \[72], 749, 987.
\I\\{relax}, 765.
\I\\{rem\_byte}, \[1164], 1184, 1189, 1220.
\I\\{remainder}, 1162, 1163, 1164, 1167.
\I\\{rep}, 1165.
\I\\{repeat\_loop}, 765.
\I\\{report\_redundant\_or\_inconsistent\_equation}, \[1041].
\I\\{res}, \[979], 980.
\I\\{reset\_stream}, \[1060].
\I\.{RESTART}, \[343], \[729], \[755], \[931], 936, \[940], \[944], \[946], %
\[947], \[1041].
\I\\{restart}, 729, 732, 936.
\I\\{restore\_cur\_exp}, \[907].
\I\\{resume\_iteration}, 831, 835.
\I\\{resume\_operation}, 821.
\I\.{RESWITCH}, \[817].
\I\\{ret}, \[15], \[156], \[157], \[158], \[354], \[364], \[365], \[396], 397,
401, 403, \[404], \[405], \[408], \[409], \[410], 412, 413, \[434], \[452], %
\[467], \[468], \[489], \[504], \[524], \[583], \[600], \[641], \[642], \[655],
\[923], \[931], \[977], \[978], \[979], \[981], \[988], \[997], \[1010], %
\[1015], \[1017], \[1023], \[1026], \[1200], \[1210].
\I\.{RETURN}, \[410], 413, \[561].
\I\\{retval}, \[376].
\I\\{ret1}, \[991].
\I\\{ret2}, \[991].
\I\9{reverse_}{\&{reverse} primitive}, 955.
\I\\{reversed}, \[1027].
\I\\{right\_coord}, 387.
\I\\{right\_curl}, \[300], 309, 331, 344, 362, 375, 948.
\I\\{right\_delimiter}, 1085.
\I\\{right\_given}, \[300], 309, 344, 361, 373, 948.
\I\\{right\_paren\_class}, \[210], 211, 245.
\I\\{right\_tension}, \[300], 304, 306, 354, 355, 362, 363, 371, 372, 374, 375,
948.
\I\\{right\_type}, \[297], \[298], 317, 320.
\I\\{right\_x}, \[297], \[298], 300, 307, 313, 316, 317, 320, 324, 327, 331,
334, 344, 371, 374, 375, 378, 382, 387, 389, 409, 410, 414, 416, 417, 421, 425,
427, 429, 451, 467, 515, 528, 549, 552, 554, 559, 579, 585, 588, 589, 596, 597,
598, 601, 617, 620, 948, 980, 1007, 1008, 1030.
\I\\{right\_y}, \[297], \[298], 300, 307, 313, 316, 317, 320, 324, 327, 331,
334, 344, 371, 374, 375, 378, 382, 387, 389, 409, 410, 414, 416, 417, 421, 425,
427, 429, 451, 467, 528, 549, 552, 554, 559, 579, 585, 588, 589, 596, 597, 598,
601, 617, 620, 948, 980, 1007, 1008, 1030.
\I\\{ring\_merge}, 664.
\I\\{rise}, \[560], \[561], 563.
\I\\{rname}, \[791].
\I\\{root}, 256, 276, 280, 282.
\I\9{rotated_}{\&{rotated} primitive}, 955.
\I\\{round\_unscaled}, 15, \[456], 878, 959, 988, 1029, 1138, 1178, 1183, 1220,
1251, 1270, 1273.
\I\\{rounding}, \[1251].
\I\\{rover}, 179.
\I\\{rp}, \[761].
\I\\{rr}, \[245], \[282], \[283], \[324], \[371], 372, \[510], 514, 515, %
\[651], \[988], \[1027].
\I\\{rt}, \[355], \[362], \[363], \[371], \[374].
\I\\{run}, \[1060].
\I\\{run\_data}, \[1057], 1063, 1064, 1067.
\I\\{run\_editor}, 119, 120, 123.
\I\\{run\_make\_mpx}, 884, 887, 888.
\I\\{run\_state}, \[138], 1067.
\I\\{runaway}, 726.
\I\\{r1}, 256, \[343], \[354], \[355], \[356], \[357], \[363], \[366], \[371], %
\[372], \[374], \[429], \[450], \[452], \[467], \[522], \[523], \[525], \[530],
\[562], \[572], \[576], \[583], \[590], \[591], \[593], \[597], \[598], \[600],
\[601], \[637], \[638], \[639], \[959], \[993], \[994], \[1006].
\I\\{r2}, \[343], \[371], \[372], \[429], \[450], \[452], \[467], \[522], %
\[530], \[576], \[583], \[590], \[591], \[593], \[601], \[1006].
\I\|{S}, \[15].
\I\|{s}, \[45], \[52], \[53], \[54], \[56], \[64], \[83], \[84], \[86], \[89], %
\[91], \[92], \[122], \[132], \[133], \[134], \[135], \[136], \[137], \[188], %
\[206], \[209], \[228], \[229], \[230], \[283], \[295], \[310], \[311], \[342],
\[350], \[422], \[423], \[434], \[467], \[471], \[496], \[497], \[558], \[561],
\[568], \[577], \[637], \[638], \[639], \[641], \[642], \[648], \[653], \[655],
\[657], \[725], \[824], \[825], \[848], \[857], \[861], \[862], \[863], \[864],
\[867], \[870], \[871], \[872], \[873], \[895], \[896], \[897], \[923], \[933],
\[993], \[997], \[1009], \[1039], \[1059], \[1060], \[1067], \[1070], \[1125], %
\[1148], \[1216], \[1224], \[1251], \[1275], \[1292].
\I\9{save_}{\&{save} primitive}, 232.
\I\\{save\_cond\_ptr}, \[817], 818.
\I\\{save\_exp}, \[707], \[781].
\I\\{save\_exp\_num}, \[707].
\I\\{save\_flag}, \[933].
\I\\{save\_internal}, 295.
\I\\{save\_ptr}, 290, \[291], 292, 293, 294, 295, 296.
\I\\{save\_subscript}, \[283].
\I\\{save\_variable}, 294.
\I\\{saved}, \[295].
\I\\{saved\_arith\_error}, \[376].
\I\\{saved\_char\_code}, \[1251].
\I\\{saved\_cur\_name}, \[873].
\I\\{saved\_jump\_buf}, \[376].
\I\\{saved\_name}, \[1251].
\I\\{saved\_root}, 276, 280.
\I\\{saved\_selector}, \[114].
\I\\{saving}, \[289].
\I\\{sc}, \[161], 1233.
\I\\{scale}, \[161], 254, 294, 621, 749.
\I\\{scale\_edges}, 1009.
\I\\{scaled}, 157, 186, 204, 235, 251, 256, 305, 321, 353, 610, 621, 624, 630,
636, 639, 640, 655, 902, 1233, 1247.
\I\9{scaled_}{\&{scaled} primitive}, 955.
\I\\{scaled\_out}, \[1247].
\I\\{scaled\_threshold\_k}, \[636], 637, 638.
\I\\{scaled\_threshold\_t}, \[15], 636.
\I\\{scaled\_to\_angle}, 15, 456.
\I\\{scaled\_to\_fraction}, 15, 456.
\I\\{scaling\_down}, \[639], \[641].
\I\\{scan\_direction}, 952.
\I\\{scan\_expression}, 898, 929.
\I\\{scan\_fractional}, 15, 456.
\I\\{scan\_fractional\_token}, \[456], 729.
\I\\{scan\_func}, 15.
\I\\{scan\_numeric}, 15, 456.
\I\\{scan\_numeric\_token}, \[456], 729.
\I\\{scan\_primary}, 898, 929, 931, 935, 944, 955.
\I\\{scan\_secondary}, 898, 929, 944.
\I\\{scan\_tertiary}, 898, 929, 946.
\I\\{scan\_text\_arg}, 796.
\I\\{scan\_tokens}, 765.
\I\9{scan_tokens_}{\&{scantokens} primitive}, 232.
\I\\{scan\_toks}, 747, 758, 825.
\I\\{scan\_with\_list}, 1124, 1136.
\I\\{scanner\_status}, \[719], 720, 721, 724, 726, 727, 729, 739, 740, 758,
761, 797, 811, 829, 1035, 1050, 1066.
\I\\{scf}, \[489], \[497], 504.
\I\\{se\_pic}, \[972], \[1009].
\I\\{se\_sf}, \[972], \[1009].
\I\9{secondary_}{\&{secondary} primitive}, 759.
\I\\{secondary\_binary}, 955.
\I\9{secondary_def_}{\&{secondarydef} primitive}, 745.
\I\\{secondpart}, \[1209].
\I\.{see the transcript file...}, 1295.
\I\\{seed}, \[15].
\I\\{selector}, \[77], 81, 85, 86, 87, 88, 91, 96, 103, 114, 125, 130, 131,
140, 207, 692, 693, 699, 725, 732, 791, 792, 801, 875, 877, 914, 931, 933, 939,
959, 963, 968, 980, 989, 1032, 1034, 1067, 1076, 1125, 1127, 1154, 1155, 1239,
1251, 1269, 1287, 1295.
\I\\{semicolon}, 185, 799, 931, 1034, 1035, 1051.
\I\\{sep}, 1130, \[1131], \[1132].
\I\\{serial}, \[161], 212, 213, 230, 254, 289, 290, 294, 295, 621, 749.
\I\\{serial\_no}, 621, \[623], 628.
\I\\{set\_attr\_head}, \[251], 282.
\I\\{set\_bbox}, 532.
\I\9{set_bounds_}{\&{setbounds} primitive}, 473, 1128.
\I\\{set\_callback\_option}, \[11], 16, 120, 888.
\I\\{set\_color\_val}, \[1125].
\I\\{set\_controls}, 367.
\I\\{set\_cur\_cmd}, 127, \[667], 729, 751, 791, 792, 793, 931, 932, 933, 936,
943, 1045, 1184.
\I\\{set\_cur\_exp\_knot}, \[898], 905, 940, 948, 957, 959, 966, 988, 1027,
1028.
\I\\{set\_cur\_exp\_node}, 797, 834, 836, \[898], 905, 931, 936, 940, 941, 943,
957, 982, 988, 991, 998, 1029.
\I\\{set\_cur\_exp\_str}, \[898], 905, 931, 940, 957, 958, 959, 988.
\I\\{set\_cur\_exp\_value\_boolean}, 817, \[898], 957, 959, 988.
\I\\{set\_cur\_exp\_value\_number}, 646, 658, 792, 831, \[898], 905, 931, 940,
952, 957, 959, 988, 991, 994, 1043.
\I\\{set\_cur\_exp\_value\_scaled}, \[898], 959.
\I\\{set\_cur\_mod}, 127, \[667], 729, 931.
\I\\{set\_cur\_mod\_node}, \[667], 729.
\I\\{set\_cur\_mod\_number}, \[667], 729, 932, 933, 936, 943.
\I\\{set\_cur\_mod\_str}, \[667], 729.
\I\\{set\_cur\_sym}, 17, 127, 229, \[667], 713, 721, 722, 725, 729, 732, 755,
820, 931, 932, 933, 936, 1045, 1066.
\I\\{set\_cur\_sym\_mod}, \[667], 729.
\I\\{set\_dash\_list}, \[477], 484, 486, 492, 518, 1011.
\I\\{set\_dep\_info}, \[624], 628, 637, 638, 648, 650, 651, 652, 923.
\I\\{set\_dep\_list}, \[624], 628, 649, 653, 923, 934, 991, 992, 1021, 1023.
\I\\{set\_dep\_value}, \[624], 637, 638, 639, 641, 648, 650, 651, 652, 655,
657, 923, 991, 993, 1023, 1043.
\I\\{set\_eq\_type}, \[212], 229, 289, 294, 758, 761, 1084, 1087, 1094, 1097.
\I\\{set\_equiv}, \[212], 229, 289, 294, 1094, 1097.
\I\\{set\_equiv\_node}, \[212], 278, 282, 758, 761, 1094.
\I\\{set\_equiv\_sym}, \[212], 725, 1087, 1094.
\I\\{set\_hashloc}, \[256], 258, 282, 283.
\I\\{set\_indep\_scale}, \[621], 648, 925.
\I\\{set\_indep\_value}, 176, 248, \[621], 1201, 1202.
\I\\{set\_internal\_from\_cur\_exp}, \[193], 1039.
\I\\{set\_internal\_from\_number}, \[193], 202, 204, 1052, 1170, 1251.
\I\\{set\_internal\_name}, \[193], 203, 1097.
\I\\{set\_internal\_string}, 16, \[193], 202, 868, 1052, 1097, 1147, 1254.
\I\\{set\_internal\_type}, \[193], 196, 1097.
\I\\{set\_lower\_limited\_value}, \[28].
\I\\{set\_min\_max}, \[609], 617, 618.
\I\\{set\_mp\_link}, \[173], 235, 280, 282, 283, 285, 628, 637, 638, 639, 641,
642, 646, 648, 649, 651, 652, 655, 657, 922, 923, 934.
\I\\{set\_mp\_sym\_info}, \[176], 748, 758, 761, 931.
\I\\{set\_mp\_sym\_sym}, \[176], 280, 707, 723, 761, 794, 801, 829, 836, 936,
943, 945, 1045.
\I\\{set\_number\_from\_addition}, 343, 355, 371, 372, 374, 396, 397, 398, 400,
401, 403, 405, 406, 408, 429, 450, \[456], 489, 504, 518, 522, 530, 575, 576,
580, 590, 591, 593, 600, 601, 609, 618, 637, 638, 831, 1006, 1012, 1015, 1027,
1196, 1200, 1201, 1202.
\I\\{set\_number\_from\_boolean}, \[456], 953, 959, 982, 988.
\I\\{set\_number\_from\_div}, 365, 413, \[456].
\I\\{set\_number\_from\_double}, 320, 375, \[456], 979, 1271.
\I\\{set\_number\_from\_int}, \[456], 898.
\I\\{set\_number\_from\_int\_mul}, \[456].
\I\\{set\_number\_from\_mul}, 413, \[456].
\I\\{set\_number\_from\_of\_the\_way}, 382, 391, 392, \[456], 552, 563, 570,
571, 572, 576, 601.
\I\\{set\_number\_from\_scaled}, \[456], 576, 613, 617, 618, 632, 637, 638,
651, 667, 898, 948, 959, 988, 1209, 1242.
\I\\{set\_number\_from\_substraction}, 155, 158, 343, 344, 354, 356, 357, 360,
361, 363, 365, 366, 371, 373, 374, 387, 397, 398, 403, 405, 409, 410, 413, 421,
427, 429, 437, 441, 444, 446, 451, \[456], 467, 489, 504, 515, 518, 522, 528,
530, 548, 559, 562, 568, 575, 576, 590, 591, 593, 597, 598, 601, 617, 979, 980,
1027, 1196, 1202.
\I\\{set\_number\_to\_inf}, 283, 398, 401, 408, 409, 413, \[456], 483, 540,
1196.
\I\\{set\_number\_to\_neg\_inf}, \[456], 483, 540, 637, 1241.
\I\\{set\_number\_to\_unity}, 331, 344, 397, 401, 403, 405, 408, \[456], 460,
464, 471, 504, 600, 601, 619, 948, 952, 973, 981, 1005, 1028, 1030, 1125, 1271.
\I\\{set\_number\_to\_zero}, 157, 343, 351, 356, 357, 361, 362, 391, 398, 405,
411, 412, 416, \[456], 467, 506, 562, 563, 570, 593, 600, 601, 609, 633, 638,
657, 898, 923, 931, 936, 948, 951, 952, 959, 968, 973, 975, 976, 977, 980, 984,
998, 1005, 1009, 1017, 1018, 1027, 1030, 1032, 1097, 1125, 1132, 1134, 1136,
1138, 1139, 1146, 1154, 1178, 1189, 1192, 1201, 1241, 1243, 1271, 1291.
\I\\{set\_parent}, \[256], 258, 282, 283.
\I\\{set\_precision}, 15, 16, \[456], 1039.
\I\\{set\_precision\_func}, 15.
\I\\{set\_prev\_dep}, \[624], 628, 646, 649, 922, 923, 934, 991, 1043.
\I\\{set\_ref\_count}, \[248], 758, 761.
\I\\{set\_subscr\_head}, \[251], 282, 283, 285.
\I\\{set\_subscript}, \[260], 282.
\I\\{set\_text}, \[212].
\I\\{set\_text\_box}, 1240.
\I\\{set\_trick\_count}, 245, \[699], 700, 701.
\I\\{set\_up\_known\_trans}, 1005.
\I\\{set\_up\_trans}, 998, 1005.
\I\\{set\_value\_knot}, \[235], 663, 903.
\I\\{set\_value\_node}, \[235], 266, 269, 272, 275, 660, 662, 663, 664, 761,
903, 969, 1009, 1127.
\I\\{set\_value\_number}, \[235], 242, 277, 283, 646, 658, 663, 707, 903, 931,
934, 942, 965, 983, 991, 992, 997, 1003, 1004, 1021, 1024, 1026, 1039, 1049,
1172, 1193, 1195, 1202, 1207.
\I\\{set\_value\_str}, \[235], 663, 707, 903.
\I\\{set\_value\_sym}, \[235], 278, 282, 763.
\I\\{set\_value\_sym\_NEW}, \[235].
\I\\{setjmp}, 16, 376, 1051, 1067, 1068.
\I\\{setvbuf}, 16.
\I\\{seven\_twenty\_deg\_t}, 980.
\I\\{sf}, 366, \[367], 368, 369, 371, 372, 373.
\I\\{sgndet}, \[1009], 1017.
\I\9{shifted_}{\&{shifted} primitive}, 955.
\I\\{ship\_out}, 322, \[1054], 1060, 1064, 1067, 1249, 1255, 1263, 1278.
\I\9{ship_out_}{\&{shipout} primitive}, 232.
\I\\{shipout\_backend}, 16, 1061, 1273, 1277.
\I\9{show_}{\&{show} primitive}, 1099.
\I\\{show\_code}, \[1099], 1100, 1101, 1120.
\I\\{show\_context}, 77, 691, 701, 877, 880, 1284.
\I\\{show\_cur\_cmd\_mod}, \[672], 769, 931, 1032.
\I\9{show_dependencies_}{\&{showdependencies} primitive}, 1099.
\I\\{show\_dependencies\_code}, \[1099], 1120.
\I\\{show\_macro}, 1104.
\I\9{show_stats_}{\&{showstats} primitive}, 1099.
\I\\{show\_stats\_code}, \[1099], 1100, 1120.
\I\9{show_token_}{\&{showtoken} primitive}, 1099.
\I\\{show\_token\_code}, \[1099], 1100, 1120.
\I\\{show\_token\_list}, 244, 280.
\I\9{show_var_}{\&{showvariable} primitive}, 1099.
\I\\{show\_var\_code}, \[1099], 1100, 1120.
\I\\{simple}, \[396], 402.
\I\\{simply}, \[396].
\I{Simpson's rule}, 394, 395, 403.
\I\\{sin\_cos}, 15, 456.
\I\\{sin\_cos\_func}, 15.
\I\9{sin_d_}{\&{sind} primitive}, 955.
\I\\{sine}, \[343], \[371], 372.
\I\\{single\_dependency}, 651.
\I\\{siz}, \[179], \[180].
\I\\{size}, \[45], \[53], \[55], \[56], \[64], \[165], \[170], \[171], \[1054],
1055, \[1059], \[1060], 1067.
\I\\{skimp}, 1201.
\I\\{skip\_byte}, \[1164], 1184, 1187, 1188, 1189, 1220.
\I\\{skip\_error}, \[1187], 1188.
\I\\{skip\_table}, \[1167], 1170, 1187, 1188, 1222.
\I\9{skip_to_}{\&{skipto} primitive}, 232.
\I\\{skip\_1component}, 495.
\I\\{skipping}, \[719], 721, 811.
\I\\{slant}, 1166.
\I\\{slant\_code}, \[1166].
\I\9{slanted_}{\&{slanted} primitive}, 955.
\I\\{slen}, \[851].
\I\\{slow\_add}, 15, 409, \[456], 637, 638, 991.
\I\\{slow\_add\_func}, 15.
\I{small computers}, 141.
\I\\{smaxx}, \[539].
\I\\{smaxy}, \[539].
\I\\{sminx}, \[539].
\I\\{sminy}, \[539].
\I\\{sname}, \[792], \[801], \[931], \[939], \[963], \[968], \[989], \[1034], %
\[1127].
\I\\{snprintf}, 172.
\I\\{solve\_choices}, 339.
\I\\{solve\_rising\_cubic}, 403, 404.
\I\.{some chardps...}, 1203.
\I\.{some charhts...}, 1203.
\I\.{some charics...}, 1203.
\I\.{some charwds...}, 1203.
\I\.{Some number got too big}, 330.
\I\.{Sorry, I can't find...}, 857.
\I\\{sort\_in}, 1195.
\I\\{source}, \[376].
\I\\{sourcehead}, \[376].
\I\\{space}, 1166.
\I\\{space\_class}, \[210], 211, 729.
\I\\{space\_code}, \[1166].
\I\\{space\_shrink}, 1166.
\I\\{space\_shrink\_code}, \[1166].
\I\\{space\_stretch}, 1166.
\I\\{space\_stretch\_code}, \[1166].
\I\\{spec\_head}, \[181], 182, 183, 1268.
\I\\{spec\_offset}, \[543], 569, 577, 581.
\I\\{spec\_p1}, \[545], 546, 550, 580, 582, 595.
\I\\{spec\_p2}, \[545], 546, 550, 580, 582, 595.
\I\9{special}{\&{special} primitive}, 232.
\I\\{split\_cubic}, 301.
\I\\{spotless}, 104, 106.
\I\\{sqdet}, \[1009], 1017.
\I\\{sqrt}, 15, 456.
\I\9{sqrt_}{\&{sqrt} primitive}, 955.
\I\\{sqrt\_func}, 15.
\I\\{sqrt\_8\_e\_k}, \[15], \[145], 158.
\I\\{square\_rt}, \[456], 466, 467, 959.
\I\\{sr}, \[245].
\I\\{ss}, \[16], \[82], \[83], \[86], \[88], \[89], \[188], \[229], \[230], %
\[283], \[371], 372, \[544], 572, 574, 576, \[959], \[1027], \[1251].
\I\\{st}, 366, \[367], 368, 369, 371, 372, 373.
\I\\{st\_count}, \[216], 227, 228, 1292, 1294.
\I\\{stack\_argument}, 804.
\I\\{stack\_dx}, \[605], 613, 618.
\I\\{stack\_dy}, \[605], 613, 618.
\I\\{stack\_max}, \[605], 609, 613.
\I\\{stack\_min}, \[605], 609, 613.
\I\\{stack\_size}, \[674], 675, 703, 1292.
\I\\{stack\_tol}, \[605], 613, 618.
\I\\{stack\_uv}, \[605], 613, 618.
\I\\{stack\_xy}, \[605], 613, 618.
\I\\{stack\_1}, \[605], 609, 613, 618.
\I\\{stack\_2}, \[605], 609, 613, 618.
\I\\{stack\_3}, \[605], 609, 613, 618.
\I\\{start}, 673, \[677], 678, 684, 701, 712, 713, 714, 715, 717, 732, 733,
779, 882, 957, 958, 1066, 1067, 1284.
\I\\{start\_bounds\_size}, \[475], 476, 493.
\I\\{start\_clip\_size}, \[475], 476, 493.
\I\\{start\_def}, \[745], 746, 761.
\I\\{start\_draw\_cmd}, 1133.
\I\\{start\_field}, \[673], 677.
\I\\{start\_for}, \[745], 746, 825, 836.
\I\\{start\_forever}, \[745], 746, 825.
\I\\{start\_forsuffixes}, \[745], 825, 836.
\I\\{start\_here}, 21.
\I\\{start\_input}, 771.
\I\\{start\_list}, 821.
\I\\{start\_read\_input}, 985.
\I\\{start\_sym}, 17, 1032, 1066, 1140, \[1141], 1142.
\I\\{start\_x}, 179, \[477], 481, \[482], 484, 486, 488, 489, 504, 506, 514,
517, 518, 522, 523, 525, 1011, 1012.
\I\\{stash\_cur\_exp}, 903, 904.
\I\\{stash\_in}, 934, 965.
\I\\{stderr}, 46.
\I\\{stdin}, 46, 1054.
\I\\{stdio}, 1054.
\I\\{stdout}, 7, 16, 46, 254, 1054, 1069.
\I\9{step_}{\&{step} primitive}, 232.
\I\\{step\_size}, \[821], 825, 831, 832, 835, 837.
\I\\{stop}, 185, 799, 1035, 1051.
\I\\{stop\_bounds\_size}, \[475], 476, 493.
\I\\{stop\_clip\_size}, \[475], 476, 493.
\I\\{stop\_flag}, \[1164], 1184, 1187.
\I\\{stop\_x}, 179, \[477], 481, \[482], 484, 486, 488, 489, 504, 514, 517,
518, 522, 523, 525, 1011, 1012.
\I\\{str}, \[72], 89, 129, \[161], \[165], 193, 218, 220, 224, \[228], \[230],
231, 236, 237, 245, 254, 295, 663, 667, 725, 749, 779, 862, 898, 973, 974, 985,
\[988], 1041, \[1055], \[1056], 1178, 1242, 1251, 1275.
\I\9{str_}{\&{str} primitive}, 232.
\I\\{str\_pool}, 678, 769, 974, 1292.
\I\\{str\_ptr}, 844, 902.
\I\\{str\_ref}, 1226.
\I\\{str\_room}, 88, 729, 859, 958, 1125, 1251, 1284, 1286.
\I\\{str\_start}, 844.
\I\\{strcat}, 857.
\I\\{strchr}, 849.
\I\\{strcmp}, 218, 873, 1275.
\I\\{strdup}, 188, 1191.
\I\9{string_}{\&{string} primitive}, 1046.
\I\\{string\_class}, \[210], 211, 245, 729.
\I\\{string\_type}, 186.
\I\\{strings}, 72, 73.
\I\\{strlen}, 66, 89, 229, 230, 851, 854, 857, 859, 864, 867, 873, 880, 1052,
1060, 1260, 1284.
\I\\{strncmp}, 218.
\I\9{stroke}{\&{stroke} command}, 414.
\I\9{stroked_}{\&{stroked} primitive}, 955.
\I\\{stroked\_node\_size}, \[464], 465, 493.
\I\\{strs\_in\_use}, \[76], 1110.
\I\\{strstr}, 854, 857.
\I\\{structured\_root}, 256.
\I\9{subpath_}{\&{subpath} primitive}, 955.
\I\\{subscr}, 251, 256, 282.
\I\\{subscr\_head}, \[251], 256, 282, 283, 285, 287, 1113.
\I\\{subscr\_head\_}, \[251], 252, 254, 624.
\I\\{subscript}, 256, \[260], 280, 282, 283.
\I\\{subscript\_}, 179, \[251], 254, 260.
\I\\{subst\_list}, 747, \[748], 751.
\I\\{substract}, 15, 456.
\I\9{substring_}{\&{substring} primitive}, 955.
\I\\{suffix}, 189.
\I\9{suffix_}{\&{suffix} primitive}, 759.
\I\\{suffix\_count}, \[748].
\I\\{suffix\_sym}, 235, 761.
\I\\{suffixed\_macro}, 902, 1114.
\I\\{svg}, \[1279].
\I\&{svgout\_data}, \[4], 1279.
\I\\{svgout\_data\_struct}, 4.
\I\\{swap}, 15, 456.
\I\.{SWITCH}, \[729].
\I\\{sx}, \[642], \[1009], 1017, 1018.
\I\\{sy}, \[1009], 1017, 1018.
\I\\{sym}, \[161], 176, \[231], 236, 237, 254, 667, \[749], \[750].
\I\\{sym\_info}, 235, 248.
\I\\{sym\_sym}, 235.
\I\\{sym\_type}, \[761].
\I\\{symbol\_node}, 235.
\I\\{symbolic\_node\_size}, 168, \[178], 179.
\I\\{symbolic\_nodes}, \[166], 167, 168, 178, 179.
\I\\{symbols}, 216, 221, 222, 228.
\I{system dependencies}, 2, 6, 23, 38, 65, 67, 78, 82, 88, 92, 97, 111, 118,
138, 150, 160, 161, 204, 211, 258, 679, 689, 694, 712, 767, 768, 840, 841, 844,
845, 847, 848, 849, 850, 858, 860, 881, 885, 1252, 1286, 1301.
\I\\{s1}, \[115], 127.
\I\\{s2}, \[115], 127.
\I\\{s3}, 115, 127.
\I\|{t}, \[15], \[45], \[187], \[188], \[206], \[209], \[281], \[283], \[285], %
\[342], \[350], \[375], \[382], \[387], \[405], \[410], \[460], \[464], \[471],
\[475], \[494], \[551], \[552], \[558], \[561], \[568], \[570], \[572], \[575],
\[600], \[631], \[632], \[642], \[648], \[653], \[655], \[705], \[749], \[915],
\[931], \[936], \[940], \[943], \[948], \[952], \[960], \[961], \[962], \[992],
\[993], \[997], \[1021], \[1024], \[1026], \[1045], \[1049], \[1084], \[1126], %
\[1127], \[1154], \[1179], \[1180], \[1191], \[1236], \[1237], \[1270].
\I\\{t\_of\_the\_way}, 576.
\I\\{t\_open\_in}, \[66], 69, 1066.
\I\\{t\_open\_out}, 16, \[66].
\I\\{t\_tot}, \[410], 411, 413.
\I\\{tag}, 1162, 1163.
\I\\{tag\_token}, 278, 283, 936.
\I\\{tail}, \[784], 790, 794, 801, 935, \[936].
\I\\{tail\_end}, \[748].
\I\\{take\_fraction}, 15, 157, 158, 343, 353, 354, 355, 356, 357, 362, 363,
365, 366, 371, 372, 374, 429, 450, 452, \[456], 466, 467, 530, 562, 572, 576,
583, 590, 591, 593, 601, 637, 639, 993, 994.
\I\\{take\_fraction\_func}, 15.
\I\\{take\_scaled}, 15, \[456], 489, 504, 522, 523, 524, 525, 538, 583, 637,
639, 988, 993, 1006, 1010, 1012, 1015, 1017, 1021, 1023, 1026.
\I\\{take\_scaled\_func}, 15.
\I\\{tally}, \[77], 81, 85, 86, 245, 250, 280, 693, 696, 697, \[698], 699, 700,
1067.
\I\\{tarnished}, 988.
\I\\{tb}, 1270.
\I\\{tc}, 1270.
\I\\{temp}, \[231].
\I\\{temp\_head}, \[181], 182, 183, 282, 283, 637, 638, 639, 641, 642, 655,
657, 923, 1195, 1196, 1201, 1204, 1206.
\I\\{temp\_val}, \[181], 969, 970, 971.
\I\\{ten\_pow}, \[1247], 1248.
\I\9{tension_}{\&{tension} primitive}, 232.
\I\\{term\_and\_log}, \[77], 85, 86, 91, 96, 103, 131, 207, 875, 914, 1295.
\I\\{term\_in}, \[65], 66, 69, 96, \[1054], 1060, 1064, 1065, 1067.
\I\\{term\_offset}, \[77], 81, 85, 86, 90, 91, 96, 880, 1067, 1258, 1284.
\I\\{term\_only}, \[77], 81, 85, 86, 91, 96, 103, 131, 877, 914, 980, 1067,
1287, 1295.
\I\\{term\_out}, 7, 16, \[65], 66, 67, 69, 82, \[1054], 1060, 1064, 1065, 1067.
\I\\{terminal\_input}, 102, \[679], 694, 712, 716.
\I\\{terminator}, 748.
\I\9{tertiary_}{\&{tertiary} primitive}, 759.
\I\9{tertiary_def_}{\&{tertiarydef} primitive}, 745.
\I\\{test}, \[515], \[638], \[639], \[641], \[854], \[857], \[923], \[1052], %
\[1196], \[1202].
\I\\{tex}, 1054.
\I\.{TEX\_FLUSH}, \[739].
\I\\{tex\_flushing}, \[719], 721, 729, 740.
\I\\{texfileio}, 1054.
\I\\{text}, 83, 189, 212, \[213], \[215], 218, 219, 220, 224, 228, 231, 245,
725, 749, 791, 793, 802, 803, 1089, 1092, 1097.
\I\9{text_}{\&{text} primitive}, 759.
\I\&{text\_char}, \[34], 37, 38, 86.
\I\\{text\_node\_size}, \[471], 472, 493.
\I\\{text\_p\_}, \[469].
\I\9{text_part_}{\&{textpart} primitive}, 955.
\I\\{text\_sym}, 235, 761.
\I\9{textual_}{\&{textual} primitive}, 955.
\I\\{tf}, 1270.
\I\9{TFM files}{\.{TFM} files}, 1158.
\I\\{tfm\_changed}, 1210, \[1211], 1215, 1219, 1223.
\I\\{tfm\_depth}, \[1167], 1170, 1173, 1206, 1219, 1229.
\I\\{tfm\_file}, \[1158], 1216, 1217.
\I\\{tfm\_height}, \[1167], 1170, 1173, 1206, 1219, 1229.
\I\\{tfm\_infile}, \[1225].
\I\\{tfm\_ital\_corr}, \[1167], 1170, 1173, 1206, 1219, 1229.
\I\.{TFM\_ITEMS}, \[1167].
\I\\{tfm\_out}, \[1216], 1218, 1219, 1222.
\I\\{tfm\_warn\_threshold\_k}, \[1204], 1206.
\I\\{tfm\_warn\_threshold\_t}, \[15], 1204.
\I\\{tfm\_width}, \[1167], 1170, 1173, 1204, 1214, 1215, 1219, 1229.
\I\.{That makes 100 errors...}, 115.
\I\.{The token...delimiter}, 1089.
\I\.{The token...quantity}, 1092.
\I\\{the\_type}, \[1097].
\I\\{then}, 444.
\I\\{theta}, \[345], 346, 348, 357, 360, 363, 366, \[601].
\I\.{This can't happen}, 137.
\I\9{this can't happen bblast}{\quad bblast}, 490.
\I\9{this can't happen bbox}{\quad bbox}, 532.
\I\9{this can't happen bbox2}{\quad bbox2}, 535, 536.
\I\9{this can't happen box ends}{\quad\\{box\_ends}}, 530.
\I\9{this can't happen copy}{\quad copy}, 940.
\I\9{this can't happen dash0}{\quad dash0}, 506.
\I\9{this can't happen dash0}{\quad dash1}, 520.
\I\9{this can't happen degerate spec}{\quad degenerate spec}, 598.
\I\9{this can't happen endinput}{\quad endinput}, 713.
\I\9{this can't happen exp}{\quad exp}, 908.
\I\9{this can't happen if}{\quad if}, 815.
\I\9{this can't happen mpx}{\quad mpx}, 715.
\I\9{this can't happen rising?}{\quad rising?}, 405.
\I\9{this can't happen token}{\quad token}, 243.
\I\\{three\_bytes}, \[1209], 1216.
\I\\{three\_l}, 613, \[614], 617, 618.
\I\\{three\_quarter\_unit\_t}, \[15], \[145], 948.
\I\\{three\_sixty\_deg\_t}, \[15], \[148], 358, 980.
\I\\{three\_t}, \[15], \[145], 202, 365.
\I\\{threshold}, \[637], \[638], \[639], \[641], 1200.
\I\\{time}, 204.
\I\9{time_}{\&{time} primitive}, 200.
\I\\{time\_to\_go}, \[610], 613.
\I\\{times}, 190, 994.
\I\\{tm}, 204.
\I\\{tm\_hour}, 204.
\I\\{tm\_mday}, 204.
\I\\{tm\_min}, 204.
\I\\{tm\_mon}, 204.
\I\\{tm\_year}, 204.
\I\\{tmp}, \[371], \[397], \[401], \[403], \[467], \[572], 580, 583, \[584],
590, 591, 593, 597, 598, \[601], \[835], \[1021], \[1026].
\I\\{tmptr}, \[204].
\I\\{tmp1}, \[576].
\I\\{tmp2}, \[403], \[576].
\I\\{tmp3}, \[403].
\I\\{tmp4}, \[403].
\I\\{tmp5}, \[403].
\I\9{to_}{\&{to} primitive}, 232.
\I\\{to\_boolean}, 15, 456.
\I\\{to\_double}, 15, 456.
\I\\{to\_int}, 15, 456.
\I\\{to\_scaled}, 15, 456.
\I\\{token}, 235.
\I{token}, 235.
\I\\{token\_list}, 794, 902.
\I\\{token\_node\_size}, 168, \[235], 239, 240.
\I\\{token\_nodes}, \[166], 167, 168, 239, 240.
\I\\{token\_state}, \[684], 689, 709, 729, 739, 774, 803, 883, 1284, 1295.
\I\\{token\_type}, \[684], 692, 693, 695, 702, 705, 706, 711, 776.
\I\\{tol}, \[396], 397, 604, 605, 613, \[614], 617, 618.
\I\\{tol\_orig}, \[396].
\I\\{tol\_step}, \[604], 613, 614, 618, 619.
\I\.{Too far to skip}, 1187.
\I\.{Too many arguments...}, 791.
\I\.{TOO\_LARGE}, \[375].
\I\\{top}, 1165.
\I\\{top\_level}, \[532], \[533].
\I\\{toss\_knot\_list}, 414.
\I\\{tostring}, \[15], 456.
\I\&{tostring\_func}, \[15].
\I\\{tot}, \[1015].
\I\\{total\_shipped}, \[1255], 1256, 1259, 1260.
\I\\{tp}, 1268.
\I\\{trace\_assignment}, \[1039].
\I\\{trace\_equation}, \[1037].
\I\9{tracingtitles_}{\&{tracingtitles} primitive}, 200.
\I\.{Transcript written...}, 1287.
\I\9{transform_}{\&{transform} primitive}, 1046.
\I\\{transform\_node\_size}, \[268], 922.
\I\\{transform\_type}, 186.
\I\9{transformed_}{\&{transformed} primitive}, 955.
\I\\{transformed\_by}, 998.
\I\\{trick\_buf}, \[77], 79, 80, 86, 698, 700.
\I\\{trick\_count}, \[77], 86, \[698], 699, 700.
\I\\{troff}, 192.
\I\\{troff\_mode}, 17, \[195], 196, 198, 1066.
\I\9{troffmode_}{\&{troffmode} primitive}, 200.
\I\\{true}, \[2], 28, 49, 51, 52, 64, 69, 78, 117, 127, 132, 135, 137, 139,
142, 144, 196, 228, 229, 230, 231, 281, 311, 328, 330, 389, 401, 408, 413, 423,
497, 511, 513, 516, 567, 577, 632, 634, 635, 637, 638, 639, 641, 644, 663, 665,
711, 712, 714, 715, 721, 722, 724, 729, 730, 732, 741, 742, 743, 744, 755, 757,
761, 768, 770, 773, 774, 775, 778, 791, 792, 793, 801, 802, 816, 820, 824, 826,
827, 837, 839, 841, 847, 849, 857, 875, 879, 883, 891, 895, 907, 931, 932, 933,
936, 938, 943, 948, 951, 952, 953, 959, 960, 961, 963, 968, 974, 980, 984, 988,
989, 996, 998, 1005, 1017, 1021, 1027, 1029, 1032, 1034, 1035, 1039, 1041,
1043, 1049, 1050, 1051, 1075, 1089, 1092, 1094, 1120, 1125, 1127, 1132, 1134,
1136, 1139, 1148, 1152, 1154, 1172, 1173, 1178, 1181, 1183, 1184, 1187, 1189,
1190, 1192, 1220, 1246, 1251, 1266, 1270, 1273, 1282, 1284, 1287.
\I\9{true_}{\&{true} primitive}, 955.
\I\\{true\_code}, 190, 902, 953, 988.
\I\\{try\_eq}, 1042.
\I\\{try\_extension}, 879.
\I\\{ts}, 1270.
\I\\{tt}, \[281], \[387], 391, 392, \[494], \[600], 601, 636, 637, 935, \[936],
1043, 1270.
\I\\{turn\_amt}, \[544], 555, \[560], \[561], 563, 566, 570, 571, 572, 574.
\I\9{turning_number_}{\&{turningnumber} primitive}, 955.
\I\\{turns}, \[980], \[1271].
\I\\{twelve\_ln\_2\_k}, \[15], \[145], 158.
\I\\{twelvebits\_3}, \[15], \[145], 365.
\I\\{twentyeightbits\_d\_t}, \[15], \[145], 431.
\I\\{twentysevenbits\_sqrt2\_d\_t}, \[15], \[145], 431.
\I\\{twentysixbits\_sqrt2\_t}, \[15], \[145], 431.
\I\\{two}, 300, 396.
\I\\{two\_t}, \[15], \[145], 362, 363, 411, 613, 957, 959, 988, 994, 1037, 1039.
\I\\{two\_to\_the}, \[651], 657.
\I\\{tx}, \[469], 471, 472, 494, 507, 538, 973, 998, \[999], 1000, 1001, 1005,
1006, 1009, 1012, 1015, 1017, 1018, 1020, 1025, 1270.
\I\\{tx\_part}, \[267], 269, 277, 911, 922, 940, 969, 982, 988, 990, 998, 1002,
1019, 1041.
\I\\{tx\_part\_}, \[267].
\I\\{tx\_val}, 471.
\I\\{txx}, \[469], 471, 472, 494, 507, 538, 973, 998, \[999], 1000, 1001, 1005,
1006, 1009, 1010, 1012, 1013, 1015, 1018, 1020, 1025, 1270.
\I\\{txy}, \[469], 471, 472, 494, 507, 538, 973, 998, \[999], 1000, 1001, 1005,
1006, 1009, 1010, 1013, 1015, 1018, 1020, 1025, 1270.
\I\\{txy\_val}, 471.
\I\\{ty}, \[469], 471, 472, 494, 507, 538, 973, 998, \[999], 1000, 1001, 1005,
1006, 1009, 1010, 1015, 1017, 1018, 1020, 1025, 1270.
\I\\{ty\_part}, \[267], 269, 277, 911, 922, 940, 969, 982, 988, 990, 998, 1002,
1019, 1041.
\I\\{ty\_part\_}, \[267].
\I\\{ty\_val}, 471.
\I\\{type}, \[15], 161, 173, 174, 176, 178, 184, 189, 193, 212, 213, \[215],
219, 224, 230, 235, 236, 237, 239, 242, 251, 252, 254, 256, 257, 260, 266, 269,
272, 275, 282, 283, 284, 287, 289, \[290], 293, 294, 295, 296, 458, 469, 474,
621, 624, 646, 658, 667, 749, 778, 792, 794, 797, 805, \[821], 825, 831, 834,
835, 836, 837, 838, 839, 903, 905, 920, 923, 931, 932, 934, 936, 940, 941, 943,
948, 951, 952, 953, 957, 958, 959, 963, 965, 966, 969, 973, 982, 983, 984, 985,
988, 989, 991, 992, 994, 996, 998, 1005, 1020, 1021, 1022, 1024, 1025, 1028,
1029, 1031, 1032, 1037, 1039, 1041, 1043, 1075, 1124, 1125, 1132, 1134, 1136,
1138, 1146, 1154, 1178, 1183, 1189, 1192, 1245, 1265.
\I\.{Type <return> to proceed...}, 124.
\I\\{type\_name}, 1032, 1048.
\I\\{type\_range}, \[959].
\I\\{type\_test}, \[959].
\I\\{types}, \[297], \[298], 317, 320.
\I\\{tyx}, \[469], 471, 472, 494, 507, 538, 973, 998, \[999], 1000, 1001, 1005,
1006, 1009, 1010, 1013, 1015, 1018, 1020, 1025, 1270.
\I\\{tyx\_val}, 471.
\I\\{tyy}, \[469], 471, 472, 494, 507, 538, 973, 998, \[999], 1000, 1001, 1005,
1006, 1009, 1010, 1013, 1015, 1018, 1020, 1025, 1270.
\I\\{t0}, 544, \[558], \[561], 562, 572, 576, \[639], \[640], \[641].
\I\\{t1}, \[375], \[377], 544, \[558], \[561], 562, 563, 570, 572, 576, \[639],
\[640], \[641].
\I\\{t2}, \[375], \[377], 544, \[558], \[561], 562, 563, 570, 572.
\I\|{u}, \[157], \[158], \[1021], \[1024], \[1026].
\I\\{u\_packet}, \[605], 613, 618.
\I\9{ul_corner_}{\&{ulcorner} primitive}, 955.
\I\\{ul\_packet}, \[605], 618.
\I\\{und\_type}, 288.
\I\\{undefined}, 256, 283, 287, 621, 935.
\I\\{undefined\_label}, \[1167], 1170, 1187, 1188, 1220, 1222, 1224.
\I\\{ungetc}, 53, 1060.
\I\9{uniform_deviate_}{\&{uniformdeviate} primitive}, 955.
\I\\{unity}, 150, 300, 610, 619, 1125.
\I\\{unity\_t}, \[15], 17, \[145], 202, 204, 277, 304, 354, 362, 363, 365, 372,
374, 405, 411, 456, 460, 464, 583, 600, 613, 619, 632, 769, 775, 817, 831, 923,
925, 948, 957, 959, 968, 973, 974, 975, 976, 980, 991, 993, 997, 1003, 1021,
1024, 1026, 1027, 1028, 1030, 1043, 1052, 1066, 1125, 1170, 1209, 1216, 1251,
1270, 1299.
\I\.{Unknown relation...}, 988.
\I\.{Unknown value...ignored}, 1075.
\I\9{unknown_}{\&{unknown} primitive}, 955.
\I\\{unknown\_tag}, \[186], 663, 1041, 1049.
\I\\{unknown\_types}, \[186], 243, 903, 905, 908, 920, 922, 940, 1041.
\I\\{unsave}, 296.
\I\9{until_}{\&{until} primitive}, 232.
\I\\{update\_terminal}, \[67], 69, 90, 96, 125, 732, 857, 880, 1032, 1259, 1284.
\I\9{ur_corner_}{\&{urcorner} primitive}, 955.
\I\\{ur\_packet}, \[605], 617, 618.
\I\\{use\_err\_help}, \[109], 110, 128, 130, 1152.
\I\\{used}, \[1054], 1055, 1060.
\I\\{userdata}, 16, 20, \[26].
\I\\{uu}, \[345], 346, 348, 351, 353, 354, 356, 357, 361, 362, 363, 366.
\I\\{uv}, 605, 613, \[614], 617, 618.
\I\\{u0}, 544, 572, \[573], 575, 576.
\I\\{u1}, 544, 572, \[573], 575, 576.
\I\\{u1l}, \[605], 618.
\I\\{u1r}, \[605], 617, 618.
\I\\{u2l}, \[605], 618.
\I\\{u2r}, \[605], 617, 618.
\I\\{u3l}, \[605], 618.
\I\\{u3r}, \[605], 617, 618.
\I\|{v}, \[158], \[176], \[192], \[215], \[242], \[284], \[552], \[561], %
\[632], \[637], \[638], \[639], \[640], \[641], \[650], \[653], \[654], \[655],
\[663], \[907], \[920], \[923], \[924], \[925], \[962], \[991], \[992], \[993],
\[994], \[996], \[997], \[1006], \[1023], \[1024], \[1026], \[1029], \[1030], %
\[1041], \[1052], \[1053], \[1195], \[1201].
\I\\{v\_is\_scaled}, \[639], \[993].
\I\\{v\_n}, \[988].
\I\\{v\_orig}, \[641], \[1030].
\I\\{v\_packet}, \[605], 613, 618.
\I\\{va\_end}, 7, 89.
\I\\{va\_start}, 7, 89.
\I\\{vabs}, \[654].
\I\\{val}, \[15], 254, 749.
\I\\{value}, 235, 251, 256, 262, 266, 267, 269, 272, 275, 282, 283, 284, %
\[290], 294, 295, 319, 321, \[375], \[377], 621, 624, 747, \[821], 825, 831,
835, 837, 902, 903, 923, 991, 1024, 1193, 1195, 1201.
\I\\{value\_}, 251.
\I\\{value\_data}, \[747], 751, 758, 761, 825.
\I\\{value\_knot}, \[236], 905, 914, 922, 940, 988, 1028, 1041.
\I\\{value\_mod}, \[747], 751, 758, 761, 825.
\I\\{value\_node}, \[236], 277, 281, 660, 662, 663, 664, 761, 905, 907, 916,
922, 931, 936, 940, 951, 959, 960, 961, 965, 969, 982, 983, 988, 990, 994, 996,
998, 1002, 1004, 1009, 1019, 1020, 1022, 1025, 1041, 1114, 1125, 1127.
\I\\{value\_node\_size}, 168, 179, \[254].
\I\\{value\_nodes}, \[166], 167, 168, 179, 254.
\I\\{value\_number}, \[236], 245, 283, 637, 638, 646, 658, 729, 905, 907, 909,
923, 931, 940, 942, 951, 959, 965, 988, 991, 992, 996, 997, 998, 1003, 1004,
1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1041, 1043, 1125, 1172,
1195, 1196, 1201, 1202, 1204, 1206, 1215, 1219.
\I\\{value\_str}, \[236], 243, 245, 729, 905, 908, 922, 940, 988, 1029, 1031,
1041, 1268.
\I\\{value\_sym}, \[236], 280, 282.
\I\\{value\_sym\_NEW}, \[235].
\I\\{var\_def}, \[745], 746, 761, 1032.
\I\9{var_def_}{\&{vardef} primitive}, 745.
\I\\{var\_defining}, \[719], 725, 727, 761.
\I\\{var\_flag}, \[929], 930, 931, 933, 947, 1032, 1037, 1039, 1132.
\I\\{var\_used}, \[175], 179, 240, 265, 1110, 1294.
\I\\{var\_used\_max}, \[175], 1292.
\I\.{Variable x is the wrong type}, 1127.
\I\.{Variable...obliterated}, 939.
\I\\{variables}, 11.
\I\\{velocity}, 15, 336, 371, 431, \[456].
\I\\{velocity\_func}, 15.
\I\\{verbatim\_code}, \[734], 735, 739.
\I\9{verbatimtex_}{\&{verbatimtex} primitive}, 735.
\I\\{verbosity}, \[906], \[907], 908, 909, 914, \[915], 1101.
\I\\{vfprintf}, 7.
\I\\{vl\_packet}, \[605], 618.
\I\&{void}, \[15], \[42], \[118], \[1276].
\I\\{voidh}, \[1060], \[1275].
\I\\{vr\_packet}, \[605], 617, 618.
\I\\{vsnprintf}, 89.
\I\\{vv}, \[345], 346, 348, 351, 356, 357, 361, 362, 363, 366, \[637], \[638], %
\[907], 908, \[925], \[959], \[988], \[991], \[992], \[1024].
\I\\{vvv}, \[910], \[911], \[912], \[913].
\I\\{vvx}, \[959].
\I\\{v0}, \[396], 397, 401, 403, \[408], 544, 572, \[573], 576.
\I\\{v002}, \[396], 397, 401, 403.
\I\\{v02}, \[396], 397, 401, 403, \[408].
\I\\{v022}, \[396], 397, 401, 403.
\I\\{v1}, \[306], \[408], \[413], \[421], 544, 572, \[573], 576, \[642].
\I\\{v1l}, \[605], 618.
\I\\{v1r}, \[605], 617, 618.
\I\\{v2}, \[396], 397, 401, 403, \[408].
\I\\{v2l}, \[605], 618.
\I\\{v2r}, \[605], 617, 618.
\I\\{v3l}, \[605], 618.
\I\\{v3r}, \[605], 617, 618.
\I\|{w}, \[171], \[489], \[544], \[556], \[557], \[560], \[561], \[567], %
\[568], \[577], \[580], \[639], \[641], \[655], \[657], \[1236].
\I\\{wake\_up\_terminal}, \[67], 69, 96, 102, 733, 857, 873, 891, 918, 1120,
1287.
\I\\{warning\_info}, \[719], 725, 739, 758, 761, 797, 829.
\I\\{warning\_info\_node}, \[719], 725, 761.
\I\\{warning\_issued}, 104.
\I\\{warning\_limit\_t}, \[15], \[145], 646, 658.
\I\\{warning\_line}, \[719], 721, 722, 740, 811.
\I\\{watch\_coefs}, \[634], 635, 637, 638, 1043.
\I\\{wavy}, \[387], \[389].
\I\\{we\_found\_it}, \[601].
\I\.{WEB}, 1.
\I\\{width}, \[469], 471, 472, 494, 538, 1233, 1241, 1242, 1270.
\I\\{width\_base}, \[1227], 1229, 1230, 1232, 1233.
\I\\{width\_index}, 1162.
\I\\{width\_x}, \[426], 427, 429.
\I\\{width\_y}, \[426], 427, 429.
\I\9{with_color_}{\&{withcmykcolor} primitive}, 1122.
\I\9{with_color_}{\&{withcolor} primitive}, 1122.
\I\9{with_color_}{\&{withgreyscale} primitive}, 1122.
\I\9{with_color_}{\&{withoutcolor} primitive}, 1122.
\I\9{with_color_}{\&{withrgbcolor} primitive}, 1122.
\I\\{with\_mp\_post\_script}, \[1122], 1123, 1125.
\I\9{with_mp_post_script_}{\&{withpostscript} primitive}, 1122.
\I\\{with\_mp\_pre\_script}, \[1122], 1123, 1125.
\I\9{with_mp_pre_script_}{\&{withprescript} primitive}, 1122.
\I\\{with\_option}, 201, 1125.
\I\\{with\_pen}, 201.
\I\9{with_pen_}{\&{withpen} primitive}, 1122.
\I\\{with\_picture}, 201.
\I\9{within_}{\&{within} primitive}, 232.
\I\\{wlog}, \[82], 878.
\I\\{wlog\_chr}, \[82], 86, 878.
\I\\{wlog\_cr}, \[82], 85, 86, 1287.
\I\\{wlog\_ln}, \[82], 1224, 1292.
\I\\{worry\_about\_bad\_statement}, \[1032], \[1034].
\I\\{wr\_file}, 83, 85, 86, \[893], 894, 896, 897, 1154, \[1156], 1157, 1289,
1290.
\I\\{wr\_fname}, \[893], 894, 896, 897, 1154, \[1156], 1157, 1289, 1290.
\I\9{write_}{\&{write} primitive}, 77, 232, 892.
\I\\{write\_ascii\_file}, 16, 43, 82, 1061.
\I\\{write\_binary\_file}, 16, 43, 1061, 1216.
\I\\{write\_file}, \[77], 85, 86, 87, 732, 1076, 1155.
\I\\{write\_files}, \[893], 1156, 1157, 1289.
\I\&{write\_index}, \[892], 893, 1154, 1156.
\I\.{Wrong picture color model...}, 968.
\I\\{wterm}, \[82], 90, 857.
\I\\{wterm\_chr}, \[82], 86.
\I\\{wterm\_cr}, \[82], 85, 86, 857.
\I\\{wterm\_ln}, \[82], 122, 857.
\I\\{ww}, \[345], 346, 348, 351, 356, 357, 361, 362, \[544], \[561], 562, %
\[568], 570, \[592], 593, 594.
\I\\{wx}, \[446], 450, 451, 452.
\I\\{wy}, \[446], 450, 451, 452.
\I\\{w0}, \[544], 548, 555, 566, 569, \[580], 591, 592, 593, \[656].
\I\|{x}, \[83], \[147], \[155], \[157], \[165], \[171], \[254], \[255], \[278],
\[375], \[377], \[387], \[404], \[405], \[450], \[505], \[506], \[587], \[588],
\[600], \[633], \[641], \[642], \[643], \[644], \[648], \[653], \[656], \[658],
\[948], \[980], \[983], \[1043], \[1045], \[1210], \[1214], \[1216].
\I\\{x\_code}, 383, 387.
\I\\{x\_coord}, \[297], \[298], 300, 304, 313, 316, 317, 320, 324, 327, 331,
334, 343, 344, 371, 374, 375, 378, 382, 387, 393, 409, 410, 416, 417, 419, 421,
425, 427, 429, 435, 436, 437, 441, 442, 443, 444, 446, 450, 451, 453, 454, 467,
514, 515, 528, 530, 548, 549, 552, 559, 562, 568, 575, 577, 578, 579, 580, 585,
588, 589, 590, 591, 593, 596, 597, 598, 601, 617, 620, 948, 949, 973, 980,
1007, 1008, 1030, 1270.
\I\\{x\_height}, 1166.
\I\\{x\_height\_code}, \[1166].
\I\\{x\_orig}, \[157], \[405], \[446], 450, \[600], \[1210].
\I\\{x\_packet}, \[605], 613, 618.
\I\\{x\_part}, \[190], \[262], 266, 281, 910, 922, 931, 940, 951, 959, 960,
961, 965, 969, 982, 983, 988, 990, 994, 996, 1002, 1004, 1019, 1020, 1022,
1025, 1027, 1028, 1041.
\I\\{x\_part\_}, \[262].
\I\9{x_part_}{\&{xpart} primitive}, 955.
\I\\{x\_part\_sector}, 190, 267.
\I\9{x_scaled_}{\&{xscaled} primitive}, 955.
\I\\{xa}, \[158].
\I\\{xchr}, \[36], \[37], 38, 39, 78, 86, 850.
\I\\{xfree}, 11, 12, 27, 52, 62, 63, 66, 80, \[165], 179, 240, 265, 296, 341,
346, 607, 676, 683, 688, 713, 748, 835, 843, 846, 851, 855, 857, 869, 871, 873,
876, 880, 881, 883, 884, 891, 985, 1051, 1055, 1060, 1065, 1067, 1068, 1097,
1098, 1156, 1157, 1169, 1191, 1229, 1254, 1257, 1289, 1290.
\I\\{xi}, \[979].
\I\\{xl\_packet}, \[605], 618.
\I\\{xm}, \[979].
\I\\{xmalloc}, 61, 63, 79, 122, \[165], 170, 196, 293, 294, 295, 489, 606, 675,
686, 758, 761, 825, 848, 851, 894, 985, 1060, 1097, 1156, 1168, 1183, 1191,
1228, 1251, 1252, 1270.
\I\\{xo}, \[979].
\I\\{xoff}, \[522], 523, 524, 525.
\I\\{xord}, \[36], \[37], 39, 87, 88, 94, 96, 115, 126, 127, 129, 147, 191,
209, 233, 245, 247, 250, 294, 295, 305, 309, 421, 498, 502, 503, 504, 507, 632,
646, 656, 672, 694, 700, 714, 729, 732, 754, 779, 833, 850, 859, 878, 880, 882,
908, 910, 911, 912, 913, 916, 925, 959, 962, 988, 995, 1039, 1067, 1076, 1104,
1105, 1110, 1112, 1118, 1143, 1181, 1217, 1239, 1258, 1259, 1260, 1284, 1287.
\I\\{xp}, \[980].
\I\\{xpar}, \[977].
\I\\{xr\_packet}, \[605], 617, 618.
\I\.{XREALLOC}, \[165], 348, 681, 687, 703, 1230.
\I\\{xrealloc}, \[165], 489, 857, 1060.
\I\\{xstrdup}, 16, 52, \[165], 203, 842, 848, 854, 857, 871, 873, 875, 879,
880, 883, 884, 895, 897, 939, 1067, 1217, 1251, 1254, 1256, 1284.
\I\\{xsub}, \[590], \[591].
\I\\{xtot}, \[580], \[590], \[591].
\I\\{xtra}, \[1181].
\I\\{xx}, \[405], 446, 450, 452, \[527], 529, 530, \[952].
\I\\{xx\_part}, \[267], 269, 277, 281, 911, 922, 940, 969, 982, 988, 990, 998,
1002, 1003, 1004, 1019, 1020, 1022, 1025, 1041.
\I\\{xx\_part\_}, \[267].
\I\9{xx_part_}{\&{xxpart} primitive}, 955.
\I\\{xy}, 605, 613, \[614], 617, 618.
\I\\{xy\_part}, \[267], 269, 277, 281, 911, 922, 940, 969, 982, 988, 990, 998,
1002, 1003, 1004, 1019, 1020, 1022, 1025, 1041.
\I\\{xy\_part\_}, \[267].
\I\9{xy_part_}{\&{xypart} primitive}, 955.
\I\\{x0}, \[515], 544, \[558], 559, \[560], \[561], 562, 563, 564, 565, 570,
571, 572, 576.
\I\\{x0a}, \[534], \[537], \[538], \[539], 541, 544, \[558], 571.
\I\\{x1}, \[375], \[377], \[382], \[515], 544, \[558], 559, \[560], \[561],
562, 563, 564, 565, 570, 571, 572, 576, \[600], 601, \[983].
\I\\{x1a}, \[534], \[537], \[538], \[539], 541, 544, \[558], 570, 571.
\I\\{x1l}, \[605], 618.
\I\\{x1r}, \[605], 617, 618.
\I\\{x2}, \[375], \[377], \[382], \[515], 544, \[558], 559, \[560], \[561],
562, 563, 564, 565, 570, 571, 572, 576, \[600], 601.
\I\\{x2a}, 544, \[558], 570.
\I\\{x2l}, \[605], 618.
\I\\{x2r}, \[605], 617, 618.
\I\\{x3}, \[382], \[515], \[600], 601.
\I\\{x3l}, \[605], 618.
\I\\{x3r}, \[605], 617, 618.
\I\|{y}, \[83], \[147], \[157], \[375], \[377], \[450], \[587], \[588], \[600],
\[948], \[980], \[983].
\I\\{y\_code}, 383, 387.
\I\\{y\_coord}, \[297], \[298], 300, 304, 313, 316, 317, 320, 324, 327, 331,
334, 343, 344, 371, 374, 375, 378, 382, 387, 393, 409, 410, 416, 417, 419, 421,
425, 427, 429, 435, 436, 437, 441, 442, 443, 444, 446, 450, 451, 453, 454, 467,
510, 528, 530, 548, 549, 552, 559, 562, 568, 575, 577, 578, 579, 580, 585, 588,
589, 590, 591, 593, 596, 597, 598, 601, 617, 620, 948, 949, 973, 980, 1007,
1008, 1030, 1270.
\I\\{y\_orig}, \[446], 450, \[600].
\I\\{y\_packet}, \[605], 613, 618.
\I\\{y\_part}, \[262], 266, 272, 281, 910, 922, 931, 940, 951, 959, 960, 961,
965, 969, 982, 983, 988, 990, 994, 996, 1002, 1004, 1019, 1020, 1022, 1025,
1027, 1028, 1041.
\I\\{y\_part\_}, \[262].
\I\9{y_part_}{\&{ypart} primitive}, 955.
\I\\{y\_part\_sector}, 267.
\I\9{y_scaled_}{\&{yscaled} primitive}, 955.
\I\\{yellow}, \[458], 502, 973, 1125, 1270.
\I\\{yellow\_part}, \[273], 275, 281, 913, 922, 931, 940, 961, 965, 969, 982,
988, 990, 994, 996, 1041, 1125.
\I\\{yellow\_part\_}, \[273].
\I\9{yellow_part_}{\&{yellowpart} primitive}, 955.
\I\\{yl\_packet}, \[605], 618.
\I\.{You want to edit file x}, 122.
\I\\{yp}, \[980].
\I\\{ypar}, \[977].
\I\\{yr\_packet}, \[605], 617, 618.
\I\\{ysub}, \[590], \[591].
\I\\{ytot}, \[580], \[590], \[591].
\I\\{yx\_part}, \[267], 269, 277, 281, 911, 922, 940, 969, 982, 988, 990, 998,
1003, 1004, 1019, 1020, 1022, 1025, 1041.
\I\\{yx\_part\_}, \[267].
\I\9{yx_part_}{\&{yxpart} primitive}, 955.
\I\\{yy}, 446, 450, 452, \[527], 529, 530.
\I\\{yy\_part}, \[267], 269, 277, 281, 911, 922, 940, 969, 982, 988, 990, 998,
1002, 1003, 1004, 1019, 1020, 1022, 1025, 1041.
\I\\{yy\_part\_}, \[267].
\I\9{yy_part_}{\&{yypart} primitive}, 955.
\I\\{y0}, \[510], 518, 544, \[558], 559, \[560], \[561], 562, 563, 564, 565,
570, 571, 572, 576.
\I\\{y0a}, \[534], \[537], \[538], \[539], 541, 544, \[558], 571.
\I\\{y1}, \[375], \[377], 544, \[558], 559, \[560], \[561], 562, 563, 564, 565,
570, 571, 572, 576, \[600], 601, \[983].
\I\\{y1a}, \[534], \[537], \[538], \[539], 541, 544, \[558], 570, 571.
\I\\{y1l}, \[605], 618.
\I\\{y1r}, \[605], 617, 618.
\I\\{y2}, \[375], \[377], 544, \[558], 559, \[560], \[561], 562, 563, 564, 565,
570, 571, 572, 576, \[600], 601.
\I\\{y2a}, 544, \[558], 570.
\I\\{y2l}, \[605], 618.
\I\\{y2r}, \[605], 617, 618.
\I\\{y3}, \[600], 601.
\I\\{y3l}, \[605], 618.
\I\\{y3r}, \[605], 617, 618.
\I\|{z}, \[527].
\I\9{z_scaled_}{\&{zscaled} primitive}, 955.
\I{Zabala Salelles, Ignacio Andr\'es}, 923.
\I\\{zero\_off}, \[543], 550, 555, 563, 569, 570, 571, 577, 578, 580, 582, 586,
593.
\I\\{zero\_t}, \[15], \[145], 236, 277, 283, 391, 431, 456, 601, 651, 792, 932,
933, 934, 936, 940, 942, 957, 973, 1020, 1024, 1025, 1039, 1049, 1136, 1200,
1207.
\I\\{zero\_val}, \[181], 1206, 1207, 1208.
\I\.{ZLIB\_VERSION}, 5, 1069.
\I\\{zlibVersion}, 1069.
